# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2017 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0012.rst:2
msgid "CMP0012"
msgstr ""

#: ../../../policy/CMP0012.rst:4
msgid "if() recognizes numbers and boolean constants."
msgstr ""

#: ../../../policy/CMP0012.rst:6
msgid ""
"In CMake versions 2.6.4 and lower the if() command implicitly dereferenced "
"arguments corresponding to variables, even those named like numbers or "
"boolean constants, except for 0 and 1.  Numbers and boolean constants such "
"as true, false, yes, no, on, off, y, n, notfound, ignore (all case "
"insensitive) were recognized in some cases but not all.  For example, the "
"code \"if(TRUE)\" might have evaluated as false.  Numbers such as 2 were "
"recognized only in boolean expressions like \"if(NOT 2)\" (leading to false) "
"but not as a single-argument like \"if(2)\" (also leading to false).  Later "
"versions of CMake prefer to treat numbers and boolean constants literally, "
"so they should not be used as variable names."
msgstr ""

#: ../../../policy/CMP0012.rst:18
msgid ""
"The OLD behavior for this policy is to implicitly dereference variables "
"named like numbers and boolean constants.  The NEW behavior for this policy "
"is to recognize numbers and boolean constants without dereferencing "
"variables with such names."
msgstr ""

#: ../../../policy/CMP0012.rst:23
msgid ""
"This policy was introduced in CMake version 2.8.0.  CMake version |release| "
"warns when the policy is not set and uses OLD behavior.  Use the "
"cmake_policy command to set it to OLD or NEW explicitly."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
