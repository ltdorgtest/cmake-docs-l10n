# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.0.rst:2
msgid "CMake 3.0 Release Notes"
msgstr ""

#: ../../../release/3.0.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.0.rst:8
msgid "Changes made since CMake 2.8.12 include the following."
msgstr ""

#: ../../../release/3.0.rst:11
msgid "Documentation Changes"
msgstr ""

#: ../../../release/3.0.rst:13
msgid ""
"The CMake documentation has been converted to reStructuredText and now "
"transforms via Sphinx (`<http://sphinx-doc.org>`__) into man and html "
"pages.  This allows the documentation to be properly indexed and to contain "
"cross-references."
msgstr ""

#: ../../../release/3.0.rst:18
msgid ""
"Conversion from the old internal documentation format was done by an "
"automatic process so some documents may still contain artifacts. They will "
"be updated incrementally over time."
msgstr ""

#: ../../../release/3.0.rst:22
msgid ""
"A basic reStructuredText processor has been implemented to support ``cmake --"
"help-command`` and similar command-line options."
msgstr ""

#: ../../../release/3.0.rst:25
msgid "New manuals were added:"
msgstr ""

#: ../../../release/3.0.rst:27
msgid ":manual:`cmake-buildsystem(7)`"
msgstr ""

#: ../../../release/3.0.rst:28
msgid ""
":manual:`cmake-commands(7)`, replacing ``cmakecommands(1)`` and "
"``cmakecompat(1)``"
msgstr ""

#: ../../../release/3.0.rst:30
msgid ":manual:`cmake-developer(7)`"
msgstr ""

#: ../../../release/3.0.rst:31
msgid ":manual:`cmake-generator-expressions(7)`"
msgstr ""

#: ../../../release/3.0.rst:32
msgid ":manual:`cmake-generators(7)`"
msgstr ""

#: ../../../release/3.0.rst:33
msgid ":manual:`cmake-language(7)`"
msgstr ""

#: ../../../release/3.0.rst:34
msgid ":manual:`cmake-modules(7)`, replacing ``cmakemodules(1)``"
msgstr ""

#: ../../../release/3.0.rst:35
msgid ":manual:`cmake-packages(7)`"
msgstr ""

#: ../../../release/3.0.rst:36
msgid ":manual:`cmake-policies(7)`, replacing ``cmakepolicies(1)``"
msgstr ""

#: ../../../release/3.0.rst:37
msgid ":manual:`cmake-properties(7)`, replacing ``cmakeprops(1)``"
msgstr ""

#: ../../../release/3.0.rst:38
msgid ":manual:`cmake-qt(7)`"
msgstr ""

#: ../../../release/3.0.rst:39
msgid ":manual:`cmake-toolchains(7)`"
msgstr ""

#: ../../../release/3.0.rst:40
msgid ":manual:`cmake-variables(7)`, replacing ``cmakevars(1)``"
msgstr ""

#: ../../../release/3.0.rst:42
msgid ""
"Release notes for CMake 3.0.0 and above will now be included with the html "
"documentation."
msgstr ""

#: ../../../release/3.0.rst:46
msgid "New Features"
msgstr ""

#: ../../../release/3.0.rst:49
msgid "Syntax"
msgstr ""

#: ../../../release/3.0.rst:51
msgid ""
"The CMake language has been extended with :ref:`Bracket Argument` and  :ref:"
"`Bracket Comment` syntax inspired by Lua long brackets::"
msgstr ""

#: ../../../release/3.0.rst:55
msgid "set(x [===[bracket argument]===] #[[bracket comment]])"
msgstr ""

#: ../../../release/3.0.rst:57
msgid ""
"Content between equal-length open- and close-brackets is taken literally "
"with no variable replacements."
msgstr ""

#: ../../../release/3.0.rst:61
msgid ""
"This syntax change could not be made in a fully compatible way.  No policy "
"is possible because syntax parsing occurs before any chance to set a "
"policy.  Existing code using an unquoted argument that starts with an open "
"bracket will be interpreted differently without any diagnostic.  Fortunately "
"the syntax is obscure enough that this problem is unlikely in practice."
msgstr ""

#: ../../../release/3.0.rst:69
msgid "Generators"
msgstr ""

#: ../../../release/3.0.rst:71
msgid ""
"A new :generator:`CodeLite` extra generator is available for use with the "
"Makefile or Ninja generators."
msgstr ""

#: ../../../release/3.0.rst:74
msgid ""
"A new :generator:`Kate` extra generator is available for use with the "
"Makefile or Ninja generators."
msgstr ""

#: ../../../release/3.0.rst:77
msgid ""
"The :generator:`Ninja` generator learned to use ``ninja`` job pools when "
"specified by a new :prop_gbl:`JOB_POOLS` global property."
msgstr ""

#: ../../../release/3.0.rst:81
msgid "Commands"
msgstr ""

#: ../../../release/3.0.rst:83
msgid ""
"The :command:`add_library` command learned a new ``INTERFACE`` library "
"type.  Interface libraries have no build rules but may have properties "
"defining :manual:`usage requirements <cmake-buildsystem(7)>` and may be "
"installed, exported, and imported.  This is useful to create header-only "
"libraries that have concrete link dependencies on other libraries."
msgstr ""

#: ../../../release/3.0.rst:91
msgid ""
"The :command:`export()` command learned a new ``EXPORT`` mode that retrieves "
"the list of targets to export from an export set configured by the :command:"
"`install(TARGETS)` command ``EXPORT`` option.  This makes it easy to export "
"from the build tree the same targets that are exported from the install tree."
msgstr ""

#: ../../../release/3.0.rst:97
msgid ""
"The :command:`export` command learned to work with multiple dependent export "
"sets, thus allowing multiple packages to be built and exported from a single "
"tree.  The feature requires CMake to wait until the generation step to write "
"the output file.  This means one should not :command:`include` the generated "
"targets file later during project configuration because it will not be "
"available. Use :ref:`Alias Targets` instead.  See policy :policy:`CMP0024`."
msgstr ""

#: ../../../release/3.0.rst:105
msgid ""
"The :command:`install(FILES)` command learned to support :manual:`generator "
"expressions <cmake-generator-expressions(7)>` in the list of files."
msgstr ""

#: ../../../release/3.0.rst:109
msgid ""
"The :command:`project` command learned to set some version variables to "
"values specified by the new ``VERSION`` option or to empty strings. See "
"policy :policy:`CMP0048`."
msgstr ""

#: ../../../release/3.0.rst:113
msgid ""
"The :command:`string` command learned a new ``CONCAT`` mode. It is "
"particularly useful in combination with the new :ref:`Bracket Argument` "
"syntax."
msgstr ""

#: ../../../release/3.0.rst:117
msgid ""
"The :command:`unset` command learned a ``PARENT_SCOPE`` option matching that "
"of the :command:`set` command."
msgstr ""

#: ../../../release/3.0.rst:120
msgid ""
"The :command:`include_external_msproject` command learned to handle non-C++ "
"projects like ``.vbproj`` or ``.csproj``."
msgstr ""

#: ../../../release/3.0.rst:123
msgid ""
"The :command:`ctest_update` command learned to update work trees managed by "
"the Perforce (p4) version control tool."
msgstr ""

#: ../../../release/3.0.rst:126
msgid ""
"The :command:`message` command learned a ``DEPRECATION`` mode. Such messages "
"are not issued by default, but may be issued as a warning if :variable:"
"`CMAKE_WARN_DEPRECATED` is enabled, or as an error if :variable:"
"`CMAKE_ERROR_DEPRECATED` is enabled."
msgstr ""

#: ../../../release/3.0.rst:131
msgid ""
"The :command:`target_link_libraries` command now allows repeated use of the "
"``LINK_PUBLIC`` and ``LINK_PRIVATE`` keywords."
msgstr ""

#: ../../../release/3.0.rst:135
msgid "Variables"
msgstr ""

#: ../../../release/3.0.rst:137
msgid ""
"Variable :variable:`CMAKE_FIND_NO_INSTALL_PREFIX` has been introduced to "
"tell CMake not to add the value of :variable:`CMAKE_INSTALL_PREFIX` to the :"
"variable:`CMAKE_SYSTEM_PREFIX_PATH` variable by default. This is useful when "
"building a project that installs some of its own dependencies to avoid "
"finding files it is about to replace."
msgstr ""

#: ../../../release/3.0.rst:145
msgid ""
"Variable :variable:`CMAKE_STAGING_PREFIX` was introduced for use when cross-"
"compiling to specify an installation prefix on the host system that differs "
"from a :variable:`CMAKE_INSTALL_PREFIX` value meant for the target system."
msgstr ""

#: ../../../release/3.0.rst:150
msgid ""
"Variable :variable:`CMAKE_SYSROOT` was introduced to specify the toolchain "
"SDK installation prefix, typically for cross-compiling. This is used to pass "
"a ``--sysroot`` option to the compiler and as a prefix searched by "
"``find_*`` commands."
msgstr ""

#: ../../../release/3.0.rst:155
msgid ""
"Variable :variable:`CMAKE_<LANG>_COMPILER_TARGET` was introduced for use "
"when cross-compiling to specify the target platform in the :ref:`toolchain "
"file <Cross Compiling Toolchain>` specified by the :variable:"
"`CMAKE_TOOLCHAIN_FILE` variable. This is used to pass an option such as ``--"
"target=<triple>`` to some cross-compiling compiler drivers."
msgstr ""

#: ../../../release/3.0.rst:162
msgid ""
"Variable :variable:`CMAKE_MAP_IMPORTED_CONFIG_<CONFIG>` has been introduced "
"to optionally initialize the :prop_tgt:`MAP_IMPORTED_CONFIG_<CONFIG>` target "
"property."
msgstr ""

#: ../../../release/3.0.rst:167
msgid "Properties"
msgstr ""

#: ../../../release/3.0.rst:169
msgid ""
"The :prop_dir:`ADDITIONAL_MAKE_CLEAN_FILES` directory property learned to "
"support :manual:`generator expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.0.rst:173
msgid ""
"A new directory property :prop_dir:`CMAKE_CONFIGURE_DEPENDS` was introduced "
"to allow projects to specify additional files on which the configuration "
"process depends.  CMake will re-run at build time when one of these files is "
"modified. Previously this was only possible to achieve by specifying such "
"files as the input to a :command:`configure_file` command."
msgstr ""

#: ../../../release/3.0.rst:180
msgid ""
"A new :ref:`Qt AUTORCC` feature replaces the need to invoke "
"``qt4_add_resources()`` by allowing ``.qrc`` files to be listed as target "
"sources."
msgstr ""

#: ../../../release/3.0.rst:184
msgid ""
"A new :ref:`Qt AUTOUIC` feature replaces the need to invoke "
"``qt4_wrap_ui()``."
msgstr ""

#: ../../../release/3.0.rst:187
msgid ""
"Test properties learned to support :manual:`generator expressions <cmake-"
"generator-expressions(7)>`. This is useful to specify per-configuration "
"values for test properties like :prop_test:`REQUIRED_FILES` and :prop_test:"
"`WORKING_DIRECTORY`."
msgstr ""

#: ../../../release/3.0.rst:193
msgid ""
"A new :prop_test:`SKIP_RETURN_CODE` test property was introduced to tell :"
"manual:`ctest(1)` to treat a particular test return code as if the test were "
"not run.  This is useful for test drivers to report that certain test "
"requirements were not available."
msgstr ""

#: ../../../release/3.0.rst:198
msgid ""
"New types of :ref:`Compatible Interface Properties` were introduced, namely "
"the :prop_tgt:`COMPATIBLE_INTERFACE_NUMBER_MAX` and :prop_tgt:"
"`COMPATIBLE_INTERFACE_NUMBER_MIN` for calculating numeric maximum and "
"minimum values respectively."
msgstr ""

#: ../../../release/3.0.rst:204
msgid "Modules"
msgstr ""

#: ../../../release/3.0.rst:206
msgid ""
"The :module:`CheckTypeSize` module ``check_type_size`` macro and the :module:"
"`CheckStructHasMember` module ``check_struct_has_member`` macro learned a "
"new ``LANGUAGE`` option to optionally check C++ types."
msgstr ""

#: ../../../release/3.0.rst:210
msgid ""
"The :module:`ExternalData` module learned to work with no URL templates if a "
"local store is available."
msgstr ""

#: ../../../release/3.0.rst:213
msgid ""
"The :module:`ExternalProject` function ``ExternalProject_Add`` learned a new "
"``GIT_SUBMODULES`` option to specify a subset of available submodules to "
"checkout."
msgstr ""

#: ../../../release/3.0.rst:217
msgid ""
"A new :module:`FindBacktrace` module has been added to support :command:"
"`find_package(Backtrace)` calls."
msgstr ""

#: ../../../release/3.0.rst:220
msgid ""
"A new :module:`FindLua` module has been added to support :command:"
"`find_package(Lua)` calls."
msgstr ""

#: ../../../release/3.0.rst:223
msgid ""
"The :module:`FindBoost` module learned a new ``Boost_NAMESPACE`` option to "
"change the ``boost`` prefix on library names."
msgstr ""

#: ../../../release/3.0.rst:226
msgid ""
"The :module:`FindBoost` module learned to control search for libraries with "
"the ``g`` tag (for MS debug runtime) with a new ``Boost_USE_DEBUG_RUNTIME`` "
"option.  It is ``ON`` by default to preserve existing behavior."
msgstr ""

#: ../../../release/3.0.rst:231
msgid ""
"The :module:`FindJava` and :module:`FindJNI` modules learned to use a "
"``JAVA_HOME`` CMake variable or environment variable, and then try ``/usr/"
"libexec/java_home`` on OS X."
msgstr ""

#: ../../../release/3.0.rst:235
msgid ""
"The :module:`UseJava` module ``add_jar`` function learned a new ``MANIFEST`` "
"option to pass the ``-m`` option to ``jar``."
msgstr ""

#: ../../../release/3.0.rst:238
msgid ""
"A new :module:`CMakeFindDependencyMacro` module was introduced with a "
"``find_dependency`` macro to find transitive dependencies in a :manual:"
"`package configuration file <cmake-packages(7)>`.  Such dependencies are "
"omitted by the listing of the :module:`FeatureSummary` module."
msgstr ""

#: ../../../release/3.0.rst:244
msgid ""
"The :module:`FindQt4` module learned to create :ref:`Imported Targets` for "
"Qt executables.  This helps disambiguate when using multiple :manual:`Qt "
"versions <cmake-qt(7)>` in the same buildsystem."
msgstr ""

#: ../../../release/3.0.rst:248
msgid "The :module:`FindRuby` module learned to search for Ruby 2.0 and 2.1."
msgstr ""

#: ../../../release/3.0.rst:251
msgid "Generator Expressions"
msgstr ""

#: ../../../release/3.0.rst:253
msgid ""
"New ``$<PLATFORM_ID>`` and ``$<PLATFORM_ID:...>`` :manual:`generator "
"expressions <cmake-generator-expressions(7)>` have been added."
msgstr ""

#: ../../../release/3.0.rst:257
msgid ""
"The ``$<CONFIG>`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` now has a variant which takes no argument.  This is "
"equivalent to the ``$<CONFIGURATION>`` expression."
msgstr ""

#: ../../../release/3.0.rst:262
msgid ""
"New ``$<UPPER_CASE:...>`` and ``$<LOWER_CASE:...>`` :manual:`generator "
"expressions <cmake-generator-expressions(7)>` generator expressions have "
"been added."
msgstr ""

#: ../../../release/3.0.rst:266
msgid ""
"A new ``$<MAKE_C_IDENTIFIER:...>`` :manual:`generator expression <cmake-"
"generator-expressions(7)>` has been added."
msgstr ""

#: ../../../release/3.0.rst:271
msgid "Other"
msgstr ""

#: ../../../release/3.0.rst:273
msgid "The :manual:`cmake(1)` ``-E`` option learned a new ``sleep`` command."
msgstr ""

#: ../../../release/3.0.rst:275
msgid ""
"The :manual:`ccmake(1)` dialog learned to honor the :prop_cache:`STRINGS` "
"cache entry property to cycle through the enumerated list of possible values."
msgstr ""

#: ../../../release/3.0.rst:279
msgid ""
"The :manual:`cmake-gui(1)` dialog learned to remember window settings "
"between sessions."
msgstr ""

#: ../../../release/3.0.rst:282
msgid ""
"The :manual:`cmake-gui(1)` dialog learned to remember the type of a cache "
"entry for completion in the ``Add Entry`` dialog."
msgstr ""

#: ../../../release/3.0.rst:286
msgid "New Diagnostics"
msgstr ""

#: ../../../release/3.0.rst:288
msgid ""
"Directories named in the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` target "
"property of imported targets linked conditionally by a :manual:`generator "
"expression <cmake-generator-expressions(7)>` were not checked for "
"existence.  Now they are checked. See policy :policy:`CMP0027`."
msgstr ""

#: ../../../release/3.0.rst:294
msgid ""
"Build target names must now match a validity pattern and may no longer "
"conflict with CMake-defined targets.  See policy :policy:`CMP0037`."
msgstr ""

#: ../../../release/3.0.rst:297
msgid ""
"Build targets that specify themselves as a link dependency were silently "
"accepted but are now diagnosed.  See :policy:`CMP0038`."
msgstr ""

#: ../../../release/3.0.rst:300
msgid ""
"The :command:`target_link_libraries` command used to silently ignore calls "
"specifying as their first argument build targets created by :command:"
"`add_custom_target` but now diagnoses this mistake. See policy :policy:"
"`CMP0039`."
msgstr ""

#: ../../../release/3.0.rst:305
msgid ""
"The :command:`add_custom_command` command used to silently ignore calls "
"specifying the ``TARGET`` option with a non-existent target but now "
"diagnoses this mistake.  See policy :policy:`CMP0040`."
msgstr ""

#: ../../../release/3.0.rst:309
msgid ""
"Relative paths in the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` target "
"property used to be silently accepted if they contained a :manual:`generator "
"expression <cmake-generator-expressions(7)>` but are now rejected.  See "
"policy :policy:`CMP0041`."
msgstr ""

#: ../../../release/3.0.rst:314
msgid ""
"The :command:`get_target_property` command learned to reject calls "
"specifying a non-existent target.  See policy :policy:`CMP0045`."
msgstr ""

#: ../../../release/3.0.rst:317
msgid ""
"The :command:`add_dependencies` command learned to reject calls specifying a "
"dependency on a non-existent target. See policy :policy:`CMP0046`."
msgstr ""

#: ../../../release/3.0.rst:321
msgid ""
"Link dependency analysis learned to assume names containing ``::`` refer to :"
"ref:`Alias Targets` or :ref:`Imported Targets`.  It will now produce an "
"error if such a linked target is missing.  Previously in this case CMake "
"generated a link line that failed at build time. See policy :policy:"
"`CMP0028`."
msgstr ""

#: ../../../release/3.0.rst:327
msgid ""
"When the :command:`project` or :command:`enable_language` commands "
"initialize support for a language, it is now an error if the full path to "
"the compiler cannot be found and stored in the corresponding :variable:"
"`CMAKE_<LANG>_COMPILER` variable.  This produces nicer error messages up "
"front and stops processing when no working compiler is known to be available."
msgstr ""

#: ../../../release/3.0.rst:334
msgid ""
"Target sources specified with the :command:`add_library` or :command:"
"`add_executable` command learned to reject items which require an "
"undocumented extra layer of variable expansion. See policy :policy:`CMP0049`."
msgstr ""

#: ../../../release/3.0.rst:339
msgid ""
"Use of :command:`add_custom_command` undocumented ``SOURCE`` signatures now "
"results in an error.  See policy :policy:`CMP0050`."
msgstr ""

#: ../../../release/3.0.rst:343
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.0.rst:345
msgid ""
"Compatibility options supporting code written for CMake versions prior to "
"2.4 have been removed."
msgstr ""

#: ../../../release/3.0.rst:348
msgid ""
"Several long-outdated commands that should no longer be called have been "
"disallowed in new code by policies:"
msgstr ""

#: ../../../release/3.0.rst:351
msgid "Policy :policy:`CMP0029` disallows :command:`subdir_depends`"
msgstr ""

#: ../../../release/3.0.rst:352
msgid "Policy :policy:`CMP0030` disallows :command:`use_mangled_mesa`"
msgstr ""

#: ../../../release/3.0.rst:353
msgid "Policy :policy:`CMP0031` disallows :command:`load_command`"
msgstr ""

#: ../../../release/3.0.rst:354
msgid "Policy :policy:`CMP0032` disallows :command:`output_required_files`"
msgstr ""

#: ../../../release/3.0.rst:355
msgid ""
"Policy :policy:`CMP0033` disallows :command:`export_library_dependencies`"
msgstr ""

#: ../../../release/3.0.rst:356
msgid "Policy :policy:`CMP0034` disallows :command:`utility_source`"
msgstr ""

#: ../../../release/3.0.rst:357
msgid "Policy :policy:`CMP0035` disallows :command:`variable_requires`"
msgstr ""

#: ../../../release/3.0.rst:358
msgid "Policy :policy:`CMP0036` disallows :command:`build_name`"
msgstr ""

#: ../../../release/3.0.rst:360
msgid ""
"The :manual:`cmake(1)` ``-i`` wizard mode has been removed. Instead use an "
"interactive dialog such as :manual:`ccmake(1)` or use the ``-D`` option to "
"set cache values from the command line."
msgstr ""

#: ../../../release/3.0.rst:364
msgid ""
"The builtin documentation formatters that supported command-line options "
"such as ``--help-man`` and ``--help-html`` have been removed in favor of the "
"above-mentioned new documentation system.  These and other command-line "
"options that used to generate man- and html- formatted pages no longer "
"work.  The :manual:`cmake(1)` ``--help-custom-modules`` option now produces "
"a warning at runtime and generates a minimal document that reports the "
"limitation."
msgstr ""

#: ../../../release/3.0.rst:372
msgid ""
"The :prop_dir:`COMPILE_DEFINITIONS_<CONFIG>` directory properties and the :"
"prop_tgt:`COMPILE_DEFINITIONS_<CONFIG>` target properties have been "
"deprecated.  Instead set the corresponding :prop_dir:`COMPILE_DEFINITIONS` "
"directory property or :prop_tgt:`COMPILE_DEFINITIONS` target property and "
"use :manual:`generator expressions <cmake-generator-expressions(7)>` like "
"``$<CONFIG:...>`` to specify per-configuration definitions. See policy :"
"policy:`CMP0043`."
msgstr ""

#: ../../../release/3.0.rst:380
msgid ""
"The :prop_tgt:`LOCATION` target property should no longer be read from non-"
"IMPORTED targets.  It does not make sense in multi-configuration generators "
"since the build configuration is not known while configuring the project.  "
"It has been superseded by the ``$<TARGET_FILE>`` generator expression.  See "
"policy :policy:`CMP0026`."
msgstr ""

#: ../../../release/3.0.rst:386
msgid ""
"The :prop_tgt:`COMPILE_FLAGS` target property is now documented as "
"deprecated, though no warning is issued.  Use the :prop_tgt:"
"`COMPILE_OPTIONS` target property or the :command:`target_compile_options` "
"command instead."
msgstr ""

#: ../../../release/3.0.rst:391
msgid ""
"The :module:`GenerateExportHeader` module ``add_compiler_export_flags`` "
"function is now deprecated.  It has been superseded by the :prop_tgt:"
"`<LANG>_VISIBILITY_PRESET` and :prop_tgt:`VISIBILITY_INLINES_HIDDEN` target "
"properties."
msgstr ""

#: ../../../release/3.0.rst:397
msgid "Other Changes"
msgstr ""

#: ../../../release/3.0.rst:399
msgid ""
"The version scheme was changed to use only two components for the feature "
"level instead of three.  The third component will now be used for bug-fix "
"releases or the date of development versions. See the :variable:"
"`CMAKE_VERSION` variable documentation for details."
msgstr ""

#: ../../../release/3.0.rst:404
msgid ""
"The default install locations of CMake itself on Windows and OS X no longer "
"contain the CMake version number.  This allows for easy replacement without "
"re-generating local build trees manually."
msgstr ""

#: ../../../release/3.0.rst:409
msgid ""
"Generators for Visual Studio 10 (2010) and later were renamed to include the "
"product year like generators for older VS versions:"
msgstr ""

#: ../../../release/3.0.rst:412
msgid "``Visual Studio 10`` -> :generator:`Visual Studio 10 2010`"
msgstr ""

#: ../../../release/3.0.rst:413
msgid "``Visual Studio 11`` -> :generator:`Visual Studio 11 2012`"
msgstr ""

#: ../../../release/3.0.rst:414
msgid "``Visual Studio 12`` -> :generator:`Visual Studio 12 2013`"
msgstr ""

#: ../../../release/3.0.rst:416
msgid ""
"This clarifies which generator goes with each Visual Studio version.  The "
"old names are recognized for compatibility."
msgstr ""

#: ../../../release/3.0.rst:419
msgid ""
"The :variable:`CMAKE_<LANG>_COMPILER_ID` value for Apple-provided Clang is "
"now ``AppleClang``.  It must be distinct from upstream Clang because the "
"version numbers differ. See policy :policy:`CMP0025`."
msgstr ""

#: ../../../release/3.0.rst:424
msgid ""
"The :variable:`CMAKE_<LANG>_COMPILER_ID` value for ``qcc`` on QNX is now "
"``QCC``.  It must be distinct from ``GNU`` because the command-line options "
"differ.  See policy :policy:`CMP0047`."
msgstr ""

#: ../../../release/3.0.rst:428
msgid ""
"On 64-bit OS X the :variable:`CMAKE_HOST_SYSTEM_PROCESSOR` value is now "
"correctly detected as ``x86_64`` instead of ``i386``."
msgstr ""

#: ../../../release/3.0.rst:431
msgid ""
"On OS X, CMake learned to enable behavior specified by the :prop_tgt:"
"`MACOSX_RPATH` target property by default.  This activates use of ``@rpath`` "
"for runtime shared library searches. See policy :policy:`CMP0042`."
msgstr ""

#: ../../../release/3.0.rst:436
msgid ""
"The :command:`build_command` command now returns a :manual:`cmake(1)` ``--"
"build`` command line instead of a direct invocation of the native build "
"tool.  When using ``Visual Studio`` generators, CMake and CTest no longer "
"require :variable:`CMAKE_MAKE_PROGRAM` to be located up front. Selection of "
"the proper msbuild or devenv tool is now performed as late as possible when "
"the solution (``.sln``) file is available so it can depend on project "
"content."
msgstr ""

#: ../../../release/3.0.rst:444
msgid ""
"The :manual:`cmake(1)` ``--build`` command now shares its own stdout and "
"stderr pipes with the native build tool by default. The ``--use-stderr`` "
"option that once activated this is now ignored."
msgstr ""

#: ../../../release/3.0.rst:448
msgid ""
"The ``$<C_COMPILER_ID:...>`` and ``$<CXX_COMPILER_ID:...>`` :manual:"
"`generator expressions <cmake-generator-expressions(7)>` used to perform "
"case-insensitive comparison but have now been corrected to perform case-"
"sensitive comparison. See policy :policy:`CMP0044`."
msgstr ""

#: ../../../release/3.0.rst:454
msgid ""
"The builtin ``edit_cache`` target will no longer select :manual:`ccmake(1)` "
"by default when no interactive terminal will be available (e.g. with :"
"generator:`Ninja` or an IDE generator). Instead :manual:`cmake-gui(1)` will "
"be preferred if available."
msgstr ""

#: ../../../release/3.0.rst:459
msgid ""
"The :module:`ExternalProject` download step learned to re-attempt download "
"in certain cases to be more robust to temporary network failure."
msgstr ""

#: ../../../release/3.0.rst:463
msgid ""
"The :module:`FeatureSummary` no longer lists transitive dependencies since "
"they were not directly requested by the current project."
msgstr ""

#: ../../../release/3.0.rst:467
msgid ""
"The ``cmake-mode.el`` major Emacs editing mode has been cleaned up and "
"enhanced in several ways."
msgstr ""

#: ../../../release/3.0.rst:470
msgid ""
"Include directories specified in the :prop_tgt:"
"`INTERFACE_INCLUDE_DIRECTORIES` of :ref:`Imported Targets` are treated as "
"``SYSTEM`` includes by default when handled as :ref:`usage requirements "
"<Include Directories and Usage Requirements>`."
msgstr ""
