# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPkgConfig.cmake:6
msgid "FindPkgConfig"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:8
msgid "A ``pkg-config`` module for CMake."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:10
msgid ""
"Finds the ``pkg-config`` executable and adds the :command:"
"`pkg_get_variable`, :command:`pkg_check_modules` and :command:"
"`pkg_search_module` commands. The following variables will also be set::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:14
msgid ""
"PKG_CONFIG_FOUND          ... if pkg-config executable was found\n"
"PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n"
"PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n"
"                              (since CMake 2.8.8)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:88
msgid ""
"Retrieves the value of a pkg-config variable ``varName`` and stores it in "
"the result variable ``resultVar`` in the calling scope. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:91
msgid "pkg_get_variable(<resultVar> <moduleName> <varName>)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:93
msgid ""
"If ``pkg-config`` returns multiple values for the specified variable, "
"``resultVar`` will contain a :ref:`;-list <CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:96
msgid "For example:"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:98
msgid "pkg_get_variable(GI_GIRDIR gobject-introspection-1.0 girdir)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:498
msgid ""
"Checks for all the given modules, setting a variety of result variables in "
"the calling scope. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:501
msgid ""
"pkg_check_modules(<prefix>\n"
"                  [REQUIRED] [QUIET]\n"
"                  [NO_CMAKE_PATH]\n"
"                  [NO_CMAKE_ENVIRONMENT_PATH]\n"
"                  [IMPORTED_TARGET]\n"
"                  <moduleSpec> [<moduleSpec>...])"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:508
msgid ""
"When the ``REQUIRED`` argument is given, the command will fail with an error "
"if module(s) could not be found."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:511
msgid ""
"When the ``QUIET`` argument is given, no status messages will be printed."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:513
msgid ""
"By default, if :variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, "
"or if :variable:`PKG_CONFIG_USE_CMAKE_PREFIX_PATH` is set to a boolean "
"``True`` value, then the :variable:`CMAKE_PREFIX_PATH`, :variable:"
"`CMAKE_FRAMEWORK_PATH`, and :variable:`CMAKE_APPBUNDLE_PATH` cache and "
"environment variables will be added to the ``pkg-config`` search path. The "
"``NO_CMAKE_PATH`` and ``NO_CMAKE_ENVIRONMENT_PATH`` arguments disable this "
"behavior for the cache variables and environment variables respectively."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:522
msgid ""
"The ``IMPORTED_TARGET`` argument will create an imported target named "
"``PkgConfig::<prefix>`` that can be passed directly as an argument to :"
"command:`target_link_libraries`."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:526
msgid "Each ``<moduleSpec>`` must be in one of the following formats::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:528
msgid ""
"{moduleName}            ... matches any version\n"
"{moduleName}>={version} ... at least version <version> is required\n"
"{moduleName}={version}  ... exactly version <version> is required\n"
"{moduleName}<={version} ... modules must not be newer than <version>"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:533
msgid ""
"The following variables may be set upon return.  Two sets of values exist, "
"one for the common case (``<XXX> = <prefix>``) and another for the "
"information ``pkg-config`` provides when it is called with the ``--static`` "
"option (``<XXX> = <prefix>_STATIC``)::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:538
msgid ""
"<XXX>_FOUND          ... set to 1 if module(s) exist\n"
"<XXX>_LIBRARIES      ... only the libraries (without the '-l')\n"
"<XXX>_LINK_LIBRARIES ... the libraries and their absolute paths\n"
"<XXX>_LIBRARY_DIRS   ... the paths of the libraries (without the '-L')\n"
"<XXX>_LDFLAGS        ... all required linker flags\n"
"<XXX>_LDFLAGS_OTHER  ... all other linker flags\n"
"<XXX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (without the '-I')\n"
"<XXX>_CFLAGS         ... all required cflags\n"
"<XXX>_CFLAGS_OTHER   ... the other compiler flags"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:548
msgid ""
"All but ``<XXX>_FOUND`` may be a :ref:`;-list <CMake Language Lists>` if the "
"associated variable returned from ``pkg-config`` has multiple values."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:551
msgid ""
"There are some special variables whose prefix depends on the number of "
"``<moduleSpec>`` given.  When there is only one ``<moduleSpec>``, ``<YYY>`` "
"will simply be ``<prefix>``, but if two or more ``<moduleSpec>`` items are "
"given, ``<YYY>`` will be ``<prefix>_<moduleName>``::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:556
msgid ""
"<YYY>_VERSION    ... version of the module\n"
"<YYY>_PREFIX     ... prefix directory of the module\n"
"<YYY>_INCLUDEDIR ... include directory of the module\n"
"<YYY>_LIBDIR     ... lib directory of the module"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:561
#: ../../../../Modules/FindPkgConfig.cmake:630
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:563
msgid "pkg_check_modules (GLIB2 glib-2.0)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:567
msgid ""
"Looks for any version of glib2.  If found, the output variable "
"``GLIB2_VERSION`` will hold the actual version found."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:570
msgid "pkg_check_modules (GLIB2 glib-2.0>=2.10)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:574
msgid ""
"Looks for at least version 2.10 of glib2.  If found, the output variable "
"``GLIB2_VERSION`` will hold the actual version found."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:577
msgid "pkg_check_modules (FOO glib-2.0>=2.10 gtk+-2.0)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:581
msgid ""
"Looks for both glib2-2.0 (at least version 2.10) and any version of "
"gtk2+-2.0.  Only if both are found will ``FOO`` be considered found. The "
"``FOO_glib-2.0_VERSION`` and ``FOO_gtk+-2.0_VERSION`` variables will be set "
"to their respective found module versions."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:586
msgid "pkg_check_modules (XRENDER REQUIRED xrender)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:590
msgid ""
"Requires any version of ``xrender``.  Example output variables set by a "
"successful call::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:593
msgid ""
"XRENDER_LIBRARIES=Xrender;X11\n"
"XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:619
msgid ""
"The behavior of this command is the same as :command:`pkg_check_modules`, "
"except that rather than checking for all the specified modules, it searches "
"for just the first successful match. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:623
msgid ""
"pkg_search_module(<prefix>\n"
"                  [REQUIRED] [QUIET]\n"
"                  [NO_CMAKE_PATH]\n"
"                  [NO_CMAKE_ENVIRONMENT_PATH]\n"
"                  [IMPORTED_TARGET]\n"
"                  <moduleSpec> [<moduleSpec>...])"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:632
msgid "pkg_search_module (BAR libxml-2.0 libxml2 libxml>=2)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:672
msgid "Variables Affecting Behavior"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:676
msgid ""
"This can be set to the path of the pkg-config executable.  If not provided, "
"it will be set by the module as a result of calling :command:`find_program` "
"internally.  The ``PKG_CONFIG`` environment variable can be used as a hint."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:682
msgid ""
"Specifies whether :command:`pkg_check_modules` and :command:"
"`pkg_search_module` should add the paths in the :variable:"
"`CMAKE_PREFIX_PATH`, :variable:`CMAKE_FRAMEWORK_PATH` and :variable:"
"`CMAKE_APPBUNDLE_PATH` cache and environment variables to the ``pkg-config`` "
"search path."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:688
msgid ""
"If this variable is not set, this behavior is enabled by default if :"
"variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, disabled "
"otherwise."
msgstr ""
