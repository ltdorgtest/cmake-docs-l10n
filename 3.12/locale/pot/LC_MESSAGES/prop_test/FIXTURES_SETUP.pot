# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_test/FIXTURES_SETUP.rst:2
msgid "FIXTURES_SETUP"
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:4
msgid ""
"Specifies a list of fixtures for which the test is to be treated as a setup "
"test. These fixture names are distinct from test case names and are not "
"required to have any similarity to the names of tests associated with them."
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:8
msgid ""
"Fixture setup tests are ordinary tests with all of the usual test "
"functionality. Setting the ``FIXTURES_SETUP`` property for a test has two "
"primary effects:"
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:12
msgid ""
"CTest will ensure the test executes before any other test which lists the "
"fixture name(s) in its :prop_test:`FIXTURES_REQUIRED` property."
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:15
msgid ""
"If CTest is asked to run only a subset of tests (e.g. using regular "
"expressions or the ``--rerun-failed`` option) and the setup test is not in "
"the set of tests to run, it will automatically be added if any tests in the "
"set require any fixture listed in ``FIXTURES_SETUP``."
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:20
msgid ""
"A setup test can have multiple fixtures listed in its ``FIXTURES_SETUP`` "
"property. It will execute only once for the whole CTest run, not once for "
"each fixture. A fixture can also have more than one setup test defined. If "
"there are multiple setup tests for a fixture, projects can control their "
"order with the usual :prop_test:`DEPENDS` test property if necessary."
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:26
msgid ""
"A setup test is allowed to require other fixtures, but not any fixture "
"listed in its ``FIXTURES_SETUP`` property. For example:"
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:29
msgid ""
"# Ok: dependent fixture is different to setup\n"
"set_tests_properties(setupFoo PROPERTIES\n"
"  FIXTURES_SETUP    Foo\n"
"  FIXTURES_REQUIRED Bar\n"
")\n"
"\n"
"# Error: cannot require same fixture as setup\n"
"set_tests_properties(setupFoo PROPERTIES\n"
"  FIXTURES_SETUP    Foo\n"
"  FIXTURES_REQUIRED Foo\n"
")"
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:43
msgid ""
"If any of a fixture's setup tests fail, none of the tests listing that "
"fixture in its :prop_test:`FIXTURES_REQUIRED` property will be run. Cleanup "
"tests will, however, still be executed."
msgstr ""

#: ../../../prop_test/FIXTURES_SETUP.rst:47
msgid ""
"See :prop_test:`FIXTURES_REQUIRED` for a more complete discussion of how to "
"use test fixtures."
msgstr ""
