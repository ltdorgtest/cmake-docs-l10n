# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:2
msgid "Step 3: Adding Usage Requirements for a Library"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:5
msgid "Exercise 1 - Adding Usage Requirements for a Library"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:7
msgid ""
":ref:`Usage requirements <Target Usage Requirements>` of a target parameters "
"allow for far better control over a library or executable's link and include "
"line while also giving more control over the transitive property of targets "
"inside CMake. The primary commands that leverage usage requirements are:"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:13
msgid ":command:`target_compile_definitions`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:14
msgid ":command:`target_compile_options`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:15
msgid ":command:`target_include_directories`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:16
msgid ":command:`target_link_directories`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:17
msgid ":command:`target_link_options`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:18
msgid ":command:`target_precompile_headers`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:19
msgid ":command:`target_sources`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:23
msgid "Goal"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:25
msgid "Add usage requirements for a library."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:28
msgid "Helpful Materials"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:30
msgid ":variable:`CMAKE_CURRENT_SOURCE_DIR`"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:33
msgid "Files to Edit"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:35
msgid "``MathFunctions/CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:36
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:39
msgid "Getting Started"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:41
msgid ""
"In this exercise, we will refactor our code from :guide:`tutorial/Adding a "
"Library` to use the modern CMake approach. We will let our library define "
"its own usage requirements so they are passed transitively to other targets "
"as necessary. In this case, ``MathFunctions`` will specify any needed "
"include directories itself. Then, the consuming target ``Tutorial`` simply "
"needs to link to ``MathFunctions`` and not worry about any additional "
"include directories."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:49
msgid ""
"The starting source code is provided in the ``Step3`` directory. In this "
"exercise, complete ``TODO 1`` through ``TODO 3``."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:52
msgid ""
"First, add a call to :command:`target_include_directories` in "
"``MathFunctions/CMakeLists``. Remember that :variable:"
"`CMAKE_CURRENT_SOURCE_DIR` is the path to the source directory currently "
"being processed."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:57
msgid ""
"Then, update (and simplify!) the call to :command:"
"`target_include_directories` in the top-level ``CMakeLists.txt``."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:61
msgid "Build and Run"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:63
msgid ""
"Make a new directory called ``Step3_build``, run the :manual:`cmake "
"<cmake(1)>` executable or the :manual:`cmake-gui <cmake-gui(1)>` to "
"configure the project and then build it with your chosen build tool or by "
"using :option:`cmake --build . <cmake --build>` from the build directory. "
"Here's a refresher of what that looks like from the command line:"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:69
msgid ""
"mkdir Step3_build\n"
"cd Step3_build\n"
"cmake ../Step3\n"
"cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:76
msgid ""
"Next, use the newly built ``Tutorial`` and verify that it is working as "
"expected."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:80
msgid "Solution"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:82
msgid ""
"Let's update the code from the previous step to use the modern CMake "
"approach of usage requirements."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:85
msgid ""
"We want to state that anybody linking to ``MathFunctions`` needs to include "
"the current source directory, while ``MathFunctions`` itself doesn't. This "
"can be expressed with an ``INTERFACE`` usage requirement. Remember "
"``INTERFACE`` means things that consumers require but the producer doesn't."
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:90
msgid ""
"At the end of ``MathFunctions/CMakeLists.txt``, use :command:"
"`target_include_directories` with the ``INTERFACE`` keyword, as follows:"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:94
msgid "<details><summary>TODO 1: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:98
msgid "TODO 1: MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:98
msgid ""
"target_include_directories(MathFunctions\n"
"          INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}\n"
"          )\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:105
#: Library.rst:124 Library.rst:140
msgid "</details>"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:109
msgid ""
"Now that we've specified usage requirements for ``MathFunctions`` we can "
"safely remove our uses of the ``EXTRA_INCLUDES`` variable from the top-level "
"``CMakeLists.txt``, here:"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:113
msgid "<details><summary>TODO 2: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:117
msgid "TODO 2: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:117
msgid ""
"if(USE_MYMATH)\n"
"  add_subdirectory(MathFunctions)\n"
"  list(APPEND EXTRA_LIBS MathFunctions)\n"
"endif()\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:128
msgid "And here:"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:130
msgid "<details><summary>TODO 3: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:134
msgid "TODO 3: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:134
msgid ""
"target_include_directories(Tutorial PUBLIC\n"
"                           \"${PROJECT_BINARY_DIR}\"\n"
"                           )\n"
msgstr ""

#: ../../../guide/tutorial/Adding Usage Requirements for a Library.rst:144
msgid ""
"Notice that with this technique, the only thing our executable target does "
"to use our library is call :command:`target_link_libraries` with the name of "
"the library target. In larger projects, the classic method of specifying "
"library dependencies manually becomes very complicated very quickly."
msgstr ""
