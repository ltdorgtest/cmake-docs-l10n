# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindCxxTest.cmake:6
msgid "FindCxxTest"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:8
msgid "Find CxxTest unit testing framework."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:10
msgid ""
"Find the CxxTest suite and declare a helper macro for creating unit tests "
"and integrating them with CTest.  For more details on CxxTest see https://"
"cxxtest.com"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:14
msgid "INPUT Variables"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:18
msgid ""
"CXXTEST_USE_PYTHON [deprecated since 1.3]\n"
"    Only used in the case both Python & Perl\n"
"    are detected on the system to control\n"
"    which CxxTest code generator is used.\n"
"    Valid only for CxxTest version 3."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:28
msgid ""
"NOTE: In older versions of this Find Module,\n"
"this variable controlled if the Python test\n"
"generator was used instead of the Perl one,\n"
"regardless of which scripting language the\n"
"user had installed."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:38
msgid ""
"CXXTEST_TESTGEN_ARGS (since CMake 2.8.3)\n"
"    Specify a list of options to pass to the CxxTest code\n"
"    generator.  If not defined, --error-printer is\n"
"    passed."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:45
msgid "OUTPUT Variables"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:49
msgid ""
"CXXTEST_FOUND\n"
"    True if the CxxTest framework was found\n"
"CXXTEST_INCLUDE_DIRS\n"
"    Where to find the CxxTest include directory\n"
"CXXTEST_PERL_TESTGEN_EXECUTABLE\n"
"    The perl-based test generator\n"
"CXXTEST_PYTHON_TESTGEN_EXECUTABLE\n"
"    The python-based test generator\n"
"CXXTEST_TESTGEN_EXECUTABLE (since CMake 2.8.3)\n"
"    The test generator that is actually used (chosen using user preferences\n"
"    and interpreters found in the system)\n"
"CXXTEST_TESTGEN_INTERPRETER (since CMake 2.8.3)\n"
"    The full path to the Perl or Python executable on the system, on\n"
"    platforms where the script cannot be executed using its shebang line."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:66
msgid "MACROS for optional use by CMake users:"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:70
msgid ""
"CXXTEST_ADD_TEST(<test_name> <gen_source_file> <input_files_to_testgen...>)\n"
"   Creates a CxxTest runner and adds it to the CTest testing suite\n"
"   Parameters:\n"
"       test_name               The name of the test\n"
"       gen_source_file         The generated source filename to be\n"
"                               generated by CxxTest\n"
"       input_files_to_testgen  The list of header files containing the\n"
"                               CxxTest::TestSuite's to be included in\n"
"                               this runner"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:84
msgid ""
"#==============\n"
"Example Usage:"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:91
msgid ""
"find_package(CxxTest)\n"
"if(CXXTEST_FOUND)\n"
"    include_directories(${CXXTEST_INCLUDE_DIR})\n"
"    enable_testing()"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:100
msgid ""
"    CXXTEST_ADD_TEST(unittest_foo foo_test.cc\n"
"                      ${CMAKE_CURRENT_SOURCE_DIR}/foo_test.h)\n"
"    target_link_libraries(unittest_foo foo) # as needed\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:109
msgid ""
"This will (if CxxTest is found):\n"
"1. Invoke the testgen executable to autogenerate foo_test.cc in the\n"
"   binary tree from \"foo_test.h\" in the current source directory.\n"
"2. Create an executable and test called unittest_foo."
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:118
msgid ""
"#=============\n"
"Example foo_test.h:"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:125
msgid "#include <cxxtest/TestSuite.h>"
msgstr ""

#: ../../../../Modules/FindCxxTest.cmake:131
msgid ""
"class MyTestSuite : public CxxTest::TestSuite\n"
"{\n"
"public:\n"
"   void testAddition( void )\n"
"   {\n"
"      TS_ASSERT( 1 + 1 > 1 );\n"
"      TS_ASSERT_EQUALS( 1 + 1, 2 );\n"
"   }\n"
"};"
msgstr ""
