# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../cpack_gen/rpm.rst:2
msgid "CPack RPM Generator"
msgstr ""

#: ../../../cpack_gen/rpm.rst:4
msgid "The built in (binary) CPack RPM generator (Unix only)"
msgstr ""

#: ../../../cpack_gen/rpm.rst:7
msgid "Variables specific to CPack RPM generator"
msgstr ""

#: ../../../cpack_gen/rpm.rst:9
msgid ""
"The CPack RPM generator may be used to create RPM packages using :module:"
"`CPack`. The CPack RPM generator is a :module:`CPack` generator thus it uses "
"the ``CPACK_XXX`` variables used by :module:`CPack`."
msgstr ""

#: ../../../cpack_gen/rpm.rst:13
msgid ""
"The CPack RPM generator has specific features which are controlled by the "
"specifics ``CPACK_RPM_XXX`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:16
msgid ""
"``CPACK_RPM_<COMPONENT>_XXXX`` variables may be used in order to have "
"**component** specific values.  Note however that ``<COMPONENT>`` refers to "
"the **grouping name** written in upper case. It may be either a component "
"name or a component GROUP name. Usually those variables correspond to RPM "
"spec file entities. One may find information about spec files here https://"
"rpm.org/documentation"
msgstr ""

#: ../../../cpack_gen/rpm.rst:25
msgid ""
"`<COMPONENT>` part of variables is preferred to be in upper case (e.g. if "
"component is named ``foo`` then use ``CPACK_RPM_FOO_XXXX`` variable name "
"format) as is with other ``CPACK_<COMPONENT>_XXXX`` variables. For the "
"purposes of back compatibility (CMake/CPack version 3.5 and lower) support "
"for same cased component (e.g. ``fOo`` would be used as "
"``CPACK_RPM_fOo_XXXX``) is still supported for variables defined in older "
"versions of CMake/CPack but is not guaranteed for variables that will be "
"added in the future. For the sake of back compatibility same cased component "
"variables also override upper cased versions where both are present."
msgstr ""

#: ../../../cpack_gen/rpm.rst:36
msgid ""
"Here are some CPack RPM generator wiki resources that are here for historic "
"reasons and are no longer maintained but may still prove useful:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:39
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration"
msgstr ""

#: ../../../cpack_gen/rpm.rst:40
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/"
"PackageGenerators#rpm-unix-only"
msgstr ""

#: ../../../cpack_gen/rpm.rst:42
msgid "List of CPack RPM generator specific variables:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:46
msgid "Enable component packaging for CPack RPM generator"
msgstr ""

#: ../../../cpack_gen/rpm.rst:48 ../../../cpack_gen/rpm.rst:108
#: ../../../cpack_gen/rpm.rst:172 ../../../cpack_gen/rpm.rst:209
#: ../../../cpack_gen/rpm.rst:232 ../../../cpack_gen/rpm.rst:252
#: ../../../cpack_gen/rpm.rst:267 ../../../cpack_gen/rpm.rst:283
#: ../../../cpack_gen/rpm.rst:299 ../../../cpack_gen/rpm.rst:316
#: ../../../cpack_gen/rpm.rst:335 ../../../cpack_gen/rpm.rst:350
#: ../../../cpack_gen/rpm.rst:365 ../../../cpack_gen/rpm.rst:381
#: ../../../cpack_gen/rpm.rst:394 ../../../cpack_gen/rpm.rst:407
#: ../../../cpack_gen/rpm.rst:420 ../../../cpack_gen/rpm.rst:429
#: ../../../cpack_gen/rpm.rst:447 ../../../cpack_gen/rpm.rst:461
#: ../../../cpack_gen/rpm.rst:474 ../../../cpack_gen/rpm.rst:487
#: ../../../cpack_gen/rpm.rst:498 ../../../cpack_gen/rpm.rst:516
#: ../../../cpack_gen/rpm.rst:540 ../../../cpack_gen/rpm.rst:561
#: ../../../cpack_gen/rpm.rst:580 ../../../cpack_gen/rpm.rst:591
#: ../../../cpack_gen/rpm.rst:610 ../../../cpack_gen/rpm.rst:623
#: ../../../cpack_gen/rpm.rst:648 ../../../cpack_gen/rpm.rst:661
#: ../../../cpack_gen/rpm.rst:672 ../../../cpack_gen/rpm.rst:704
#: ../../../cpack_gen/rpm.rst:717 ../../../cpack_gen/rpm.rst:730
#: ../../../cpack_gen/rpm.rst:755 ../../../cpack_gen/rpm.rst:768
#: ../../../cpack_gen/rpm.rst:835 ../../../cpack_gen/rpm.rst:895
#: ../../../cpack_gen/rpm.rst:906 ../../../cpack_gen/rpm.rst:915
#: ../../../cpack_gen/rpm.rst:938 ../../../cpack_gen/rpm.rst:1006
#: ../../../cpack_gen/rpm.rst:1019 ../../../cpack_gen/rpm.rst:1034
#: ../../../cpack_gen/rpm.rst:1047
msgid "Mandatory : NO"
msgstr ""

#: ../../../cpack_gen/rpm.rst:49 ../../../cpack_gen/rpm.rst:173
#: ../../../cpack_gen/rpm.rst:836 ../../../cpack_gen/rpm.rst:916
#: ../../../cpack_gen/rpm.rst:1007
msgid "Default   : OFF"
msgstr ""

#: ../../../cpack_gen/rpm.rst:51
msgid ""
"If enabled (``ON``) multiple packages are generated. By default a single "
"package containing files of all components is generated."
msgstr ""

#: ../../../cpack_gen/rpm.rst:57
msgid "The RPM package summary."
msgstr ""

#: ../../../cpack_gen/rpm.rst:59 ../../../cpack_gen/rpm.rst:70
#: ../../../cpack_gen/rpm.rst:83 ../../../cpack_gen/rpm.rst:131
#: ../../../cpack_gen/rpm.rst:139 ../../../cpack_gen/rpm.rst:151
#: ../../../cpack_gen/rpm.rst:183 ../../../cpack_gen/rpm.rst:191
#: ../../../cpack_gen/rpm.rst:201 ../../../cpack_gen/rpm.rst:220
#: ../../../cpack_gen/rpm.rst:1027
msgid "Mandatory : YES"
msgstr ""

#: ../../../cpack_gen/rpm.rst:60
msgid "Default   : :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`"
msgstr ""

#: ../../../cpack_gen/rpm.rst:62
msgid "Per-component ``CPACK_RPM_<component>_PACKAGE_SUMMARY`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:68
msgid "The RPM package name."
msgstr ""

#: ../../../cpack_gen/rpm.rst:71
msgid "Default   : :variable:`CPACK_PACKAGE_NAME`"
msgstr ""

#: ../../../cpack_gen/rpm.rst:73
msgid "Per-component ``CPACK_RPM_<component>_PACKAGE_NAME`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:81
msgid "Package file name."
msgstr ""

#: ../../../cpack_gen/rpm.rst:84
msgid "Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm`` with spaces"
msgstr ""

#: ../../../cpack_gen/rpm.rst:83
msgid "<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm with spaces"
msgstr ""

#: ../../../cpack_gen/rpm.rst:85
msgid "replaced by '-'"
msgstr ""

#: ../../../cpack_gen/rpm.rst:87
msgid ""
"This may be set to ``RPM-DEFAULT`` to allow ``rpmbuild`` tool to generate "
"package file name by itself. Alternatively provided package file name must "
"end with ``.rpm`` suffix."
msgstr ""

#: ../../../cpack_gen/rpm.rst:93
msgid ""
"By using user provided spec file, rpm macro extensions such as for "
"generating ``debuginfo`` packages or by simply using multiple components "
"more than one rpm file may be generated, either from a single spec file or "
"from multiple spec files (each component execution produces its own spec "
"file). In such cases duplicate file names may occur as a result of this "
"variable setting or spec file content structure. Duplicate files get "
"overwritten and it is up to the packager to set the variables in a manner "
"that will prevent such errors."
msgstr ""

#: ../../../cpack_gen/rpm.rst:106
msgid "Main component that is packaged without component suffix."
msgstr ""

#: ../../../cpack_gen/rpm.rst:109 ../../../cpack_gen/rpm.rst:122
#: ../../../cpack_gen/rpm.rst:233 ../../../cpack_gen/rpm.rst:253
#: ../../../cpack_gen/rpm.rst:268 ../../../cpack_gen/rpm.rst:284
#: ../../../cpack_gen/rpm.rst:300 ../../../cpack_gen/rpm.rst:317
#: ../../../cpack_gen/rpm.rst:336 ../../../cpack_gen/rpm.rst:351
#: ../../../cpack_gen/rpm.rst:366 ../../../cpack_gen/rpm.rst:382
#: ../../../cpack_gen/rpm.rst:395 ../../../cpack_gen/rpm.rst:408
#: ../../../cpack_gen/rpm.rst:421 ../../../cpack_gen/rpm.rst:448
#: ../../../cpack_gen/rpm.rst:462 ../../../cpack_gen/rpm.rst:475
#: ../../../cpack_gen/rpm.rst:488 ../../../cpack_gen/rpm.rst:499
#: ../../../cpack_gen/rpm.rst:517 ../../../cpack_gen/rpm.rst:541
#: ../../../cpack_gen/rpm.rst:562 ../../../cpack_gen/rpm.rst:581
#: ../../../cpack_gen/rpm.rst:611 ../../../cpack_gen/rpm.rst:624
#: ../../../cpack_gen/rpm.rst:673 ../../../cpack_gen/rpm.rst:859
#: ../../../cpack_gen/rpm.rst:907 ../../../cpack_gen/rpm.rst:1020
#: ../../../cpack_gen/rpm.rst:1035 ../../../cpack_gen/rpm.rst:1048
msgid "Default   : -"
msgstr ""

#: ../../../cpack_gen/rpm.rst:111
msgid ""
"This variable can be set to any component or group name so that component or "
"group rpm package is generated without component suffix in filename and "
"package name."
msgstr ""

#: ../../../cpack_gen/rpm.rst:119
msgid "The RPM package epoch"
msgstr ""

#: ../../../cpack_gen/rpm.rst:121
msgid "Mandatory : No"
msgstr ""

#: ../../../cpack_gen/rpm.rst:124
msgid ""
"Optional number that should be incremented when changing versioning schemas "
"or fixing mistakes in the version numbers of older packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:129
msgid "The RPM package version."
msgstr ""

#: ../../../cpack_gen/rpm.rst:132
msgid "Default   : :variable:`CPACK_PACKAGE_VERSION`"
msgstr ""

#: ../../../cpack_gen/rpm.rst:137
msgid "The RPM package architecture."
msgstr ""

#: ../../../cpack_gen/rpm.rst:140
msgid "Default   : Native architecture output by ``uname -m``"
msgstr ""

#: ../../../cpack_gen/rpm.rst:142
msgid ""
"This may be set to ``noarch`` if you know you are building a ``noarch`` "
"package."
msgstr ""

#: ../../../cpack_gen/rpm.rst:144
msgid "Per-component ``CPACK_RPM_<component>_PACKAGE_ARCHITECTURE`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:149
msgid "The RPM package release."
msgstr ""

#: ../../../cpack_gen/rpm.rst:152
msgid "Default   : 1"
msgstr ""

#: ../../../cpack_gen/rpm.rst:154
msgid ""
"This is the numbering of the RPM package itself, i.e. the version of the "
"packaging and not the version of the content (see :variable:"
"`CPACK_RPM_PACKAGE_VERSION`). One may change the default value if the "
"previous packaging was buggy and/or you want to put here a fancy Linux "
"distro specific numbering."
msgstr ""

#: ../../../cpack_gen/rpm.rst:162
msgid ""
"This is the string that goes into the RPM ``Release:`` field. Some distros "
"(e.g. Fedora, CentOS) require ``1%{?dist}`` format and not just a number. "
"``%{?dist}`` part can be added by setting :variable:"
"`CPACK_RPM_PACKAGE_RELEASE_DIST`."
msgstr ""

#: ../../../cpack_gen/rpm.rst:170
msgid "The dist tag that is added  RPM ``Release:`` field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:175
msgid ""
"This is the reported ``%{dist}`` tag from the current distribution or empty "
"``%{dist}`` if RPM macro is not set. If this variable is set then RPM "
"``Release:`` field value is set to ``${CPACK_RPM_PACKAGE_RELEASE}%{?dist}``."
msgstr ""

#: ../../../cpack_gen/rpm.rst:181
msgid "The RPM package license policy."
msgstr ""

#: ../../../cpack_gen/rpm.rst:184 ../../../cpack_gen/rpm.rst:192
msgid "Default   : \"unknown\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:189
msgid "The RPM package group."
msgstr ""

#: ../../../cpack_gen/rpm.rst:194
msgid "Per-component ``CPACK_RPM_<component>_PACKAGE_GROUP`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:199
msgid "The RPM package vendor."
msgstr ""

#: ../../../cpack_gen/rpm.rst:202
msgid "Default   : CPACK_PACKAGE_VENDOR if set or \"unknown\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:207
msgid "The projects URL."
msgstr ""

#: ../../../cpack_gen/rpm.rst:210
msgid "Default   : :variable:`CMAKE_PROJECT_HOMEPAGE_URL`"
msgstr ""

#: ../../../cpack_gen/rpm.rst:212
msgid "The ``CMAKE_PROJECT_HOMEPAGE_URL`` variable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:218
msgid "RPM package description."
msgstr ""

#: ../../../cpack_gen/rpm.rst:221
msgid ""
"Default : :variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component "
"based installers only) if set, :variable:`CPACK_PACKAGE_DESCRIPTION_FILE` if "
"set or \"no package description available\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:225
msgid "Per-component ``CPACK_RPM_<component>_PACKAGE_DESCRIPTION`` variables."
msgstr ""

#: ../../../cpack_gen/rpm.rst:230
msgid "RPM compression type."
msgstr ""

#: ../../../cpack_gen/rpm.rst:235
msgid ""
"May be used to override RPM compression type to be used to build the RPM. "
"For example some Linux distribution now default to ``lzma`` or ``xz`` "
"compression whereas older cannot use such RPM. Using this one can enforce "
"compression type to be used."
msgstr ""

#: ../../../cpack_gen/rpm.rst:240
msgid "Possible values are:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:242
msgid "lzma"
msgstr ""

#: ../../../cpack_gen/rpm.rst:243
msgid "xz"
msgstr ""

#: ../../../cpack_gen/rpm.rst:244
msgid "bzip2"
msgstr ""

#: ../../../cpack_gen/rpm.rst:245
msgid "gzip"
msgstr ""

#: ../../../cpack_gen/rpm.rst:250
msgid "RPM spec autoreq field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:255
msgid ""
"May be used to enable (``1``, ``yes``) or disable (``0``, ``no``) automatic "
"shared libraries dependency detection. Dependencies are added to requires "
"list."
msgstr ""

#: ../../../cpack_gen/rpm.rst:260
msgid "By default automatic dependency detection is enabled by rpm generator."
msgstr ""

#: ../../../cpack_gen/rpm.rst:265
msgid "RPM spec autoprov field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:270
msgid ""
"May be used to enable (``1``, ``yes``) or disable (``0``, ``no``) automatic "
"listing of shared libraries that are provided by the package. Shared "
"libraries are added to provides list."
msgstr ""

#: ../../../cpack_gen/rpm.rst:276
msgid "By default automatic provides detection is enabled by rpm generator."
msgstr ""

#: ../../../cpack_gen/rpm.rst:281
msgid "RPM spec autoreqprov field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:286
msgid ""
"Variable enables/disables autoreq and autoprov at the same time. See :"
"variable:`CPACK_RPM_PACKAGE_AUTOREQ` and :variable:"
"`CPACK_RPM_PACKAGE_AUTOPROV` for more details."
msgstr ""

#: ../../../cpack_gen/rpm.rst:292
msgid "By default automatic detection feature is enabled by rpm."
msgstr ""

#: ../../../cpack_gen/rpm.rst:297
msgid "RPM spec requires field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:302
msgid ""
"May be used to set RPM dependencies (requires). Note that you must enclose "
"the complete requires string between quotes, for example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:305
msgid "set(CPACK_RPM_PACKAGE_REQUIRES \"python >= 2.5.0, cmake >= 2.8\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:307
msgid "The required package list of an RPM file could be printed with::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:309
msgid "rpm -qp --requires file.rpm"
msgstr ""

#: ../../../cpack_gen/rpm.rst:314
msgid "RPM spec conflicts field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:319
msgid ""
"May be used to set negative RPM dependencies (conflicts). Note that you must "
"enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:322
msgid "set(CPACK_RPM_PACKAGE_CONFLICTS \"libxml2\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:324
msgid "The conflicting package list of an RPM file could be printed with::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:326
msgid "rpm -qp --conflicts file.rpm"
msgstr ""

#: ../../../cpack_gen/rpm.rst:333
msgid "RPM spec requires(pre) field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:338
msgid ""
"May be used to set RPM preinstall dependencies (requires(pre)). Note that "
"you must enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:341
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_PRE \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:348
msgid "RPM spec requires(post) field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:353
msgid ""
"May be used to set RPM postinstall dependencies (requires(post)). Note that "
"you must enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:356
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_POST \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:363
msgid "RPM spec requires(postun) field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:368
msgid ""
"May be used to set RPM postuninstall dependencies (requires(postun)). Note "
"that you must enclose the complete requires string between quotes, for "
"example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:372
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_POSTUN \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:379
msgid "RPM spec requires(preun) field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:384
msgid ""
"May be used to set RPM preuninstall dependencies (requires(preun)). Note "
"that you must enclose the complete requires string between quotes, for "
"example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:387
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_PREUN \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:392
msgid "RPM spec suggest field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:397
msgid ""
"May be used to set weak RPM dependencies (suggests). If ``rpmbuild`` doesn't "
"support the ``Suggests`` tag, CPack will emit a warning and ignore this "
"variable. Note that you must enclose the complete requires string between "
"quotes."
msgstr ""

#: ../../../cpack_gen/rpm.rst:405
msgid "RPM spec provides field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:410
msgid ""
"May be used to set RPM dependencies (provides). The provided package list of "
"an RPM file could be printed with::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:413
msgid "rpm -qp --provides file.rpm"
msgstr ""

#: ../../../cpack_gen/rpm.rst:418
msgid "RPM spec obsoletes field."
msgstr ""

#: ../../../cpack_gen/rpm.rst:423
msgid "May be used to set RPM packages that are obsoleted by this one."
msgstr ""

#: ../../../cpack_gen/rpm.rst:427
msgid "build a relocatable RPM."
msgstr ""

#: ../../../cpack_gen/rpm.rst:430
msgid "Default   : CPACK_PACKAGE_RELOCATABLE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:432
msgid ""
"If this variable is set to TRUE or ON, the CPack RPM generator will try to "
"build a relocatable RPM package. A relocatable RPM may be installed using::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:436
msgid "rpm --prefix or --relocate"
msgstr ""

#: ../../../cpack_gen/rpm.rst:438
msgid ""
"in order to install it at an alternate place see rpm(8). Note that currently "
"this may fail if :variable:`CPACK_SET_DESTDIR` is set to ``ON``. If :"
"variable:`CPACK_SET_DESTDIR` is set then you will get a warning message but "
"if there is file installed with absolute path you'll get unexpected behavior."
msgstr ""

#: ../../../cpack_gen/rpm.rst:445
msgid "Deprecated - use :variable:`CPACK_RPM_SPEC_MORE_DEFINE` instead."
msgstr ""

#: ../../../cpack_gen/rpm.rst:449
msgid "Deprecated: YES"
msgstr ""

#: ../../../cpack_gen/rpm.rst:451
msgid ""
"May be used to override the ``__spec_install_post`` section within the "
"generated spec file.  This affects the install step during package creation, "
"not during package installation.  For adding operations to be performed "
"during package installation, use :variable:"
"`CPACK_RPM_POST_INSTALL_SCRIPT_FILE` instead."
msgstr ""

#: ../../../cpack_gen/rpm.rst:459
msgid "RPM extended spec definitions lines."
msgstr ""

#: ../../../cpack_gen/rpm.rst:464
msgid ""
"May be used to add any ``%define`` lines to the generated spec file.  An "
"example of its use is to prevent stripping of executables (but note that "
"this may also disable other default post install processing)::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:468
msgid ""
"set(CPACK_RPM_SPEC_MORE_DEFINE \"%define __spec_install_post /bin/true\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:472
msgid "Toggle CPack RPM generator debug output."
msgstr ""

#: ../../../cpack_gen/rpm.rst:477
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"CPack RPM run. For example you may launch CPack like this::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:480
msgid "cpack -D CPACK_RPM_PACKAGE_DEBUG=1 -G RPM"
msgstr ""

#: ../../../cpack_gen/rpm.rst:485
msgid "A user provided spec file."
msgstr ""

#: ../../../cpack_gen/rpm.rst:490
msgid ""
"May be set by the user in order to specify a USER binary spec file to be "
"used by the CPack RPM generator instead of generating the file. The "
"specified file will be processed by configure_file( @ONLY)."
msgstr ""

#: ../../../cpack_gen/rpm.rst:496
msgid "Spec file template."
msgstr ""

#: ../../../cpack_gen/rpm.rst:501
msgid ""
"If set CPack will generate a template for USER specified binary spec file "
"and stop with an error. For example launch CPack like this::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:504
msgid "cpack -D CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE=1 -G RPM"
msgstr ""

#: ../../../cpack_gen/rpm.rst:506
msgid ""
"The user may then use this file in order to hand-craft is own binary spec "
"file which may be used with :variable:`CPACK_RPM_USER_BINARY_SPECFILE`."
msgstr ""

#: ../../../cpack_gen/rpm.rst:514
msgid "Path to file containing pre install/uninstall/transaction script."
msgstr ""

#: ../../../cpack_gen/rpm.rst:519
msgid ""
"May be used to embed a pre installation/uninstallation/transaction script in "
"the spec file. The referred script file (or both) will be read and directly "
"put after the ``%pre`` or ``%preun`` section If :variable:"
"`CPACK_RPM_COMPONENT_INSTALL` is set to ON the install/uninstall/transaction "
"script for each component can be overridden with "
"``CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE``, "
"``CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE``, and "
"``CPACK_RPM_<COMPONENT>_PRE_TRANS_SCRIPT_FILE`` One may verify which "
"scriptlet has been included with::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:529 ../../../cpack_gen/rpm.rst:553
msgid "rpm -qp --scripts  package.rpm"
msgstr ""

#: ../../../cpack_gen/rpm.rst:531
msgid "The ``CPACK_RPM_PRE_TRANS_SCRIPT_FILE`` variable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:538
msgid "Path to file containing post install/uninstall/transaction script."
msgstr ""

#: ../../../cpack_gen/rpm.rst:543
msgid ""
"May be used to embed a post installation/uninstallation/transaction script "
"in the spec file. The referred script file (or both) will be read and "
"directly put after the ``%post`` or ``%postun`` section. If :variable:"
"`CPACK_RPM_COMPONENT_INSTALL` is set to ON the install/uninstall/transaction "
"script for each component can be overridden with "
"``CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE``, "
"``CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE``, and "
"``CPACK_RPM_<COMPONENT>_POST_TRANS_SCRIPT_FILE`` One may verify which "
"scriptlet has been included with::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:555
msgid "The ``CPACK_RPM_POST_TRANS_SCRIPT_FILE`` variable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:564
msgid ""
"May be used to explicitly specify ``%(<directive>)`` file line in the spec "
"file. Like ``%config(noreplace)`` or any other directive that be found in "
"the ``%files`` section. Since the CPack RPM generator is generating the list "
"of files (and directories) the user specified files of the "
"``CPACK_RPM_<COMPONENT>_USER_FILELIST`` list will be removed from the "
"generated list. If referring to directories do not add a trailing slash."
msgstr ""

#: ../../../cpack_gen/rpm.rst:572
msgid ""
"You can have multiple directives per line, as in ``%attr(600,root,root) "
"%config(noreplace)``."
msgstr ""

#: ../../../cpack_gen/rpm.rst:578
msgid "RPM changelog file."
msgstr ""

#: ../../../cpack_gen/rpm.rst:583
msgid ""
"May be used to embed a changelog in the spec file. The referred file will be "
"read and directly put after the ``%changelog`` section."
msgstr ""

#: ../../../cpack_gen/rpm.rst:589
msgid "list of path to be excluded."
msgstr ""

#: ../../../cpack_gen/rpm.rst:592 ../../../cpack_gen/rpm.rst:662
#: ../../../cpack_gen/rpm.rst:877
msgid "Default"
msgstr ""

#: ../../../cpack_gen/rpm.rst:-1
msgid "/etc /etc/init.d /usr /usr/bin /usr/include /usr/lib"
msgstr ""

#: ../../../cpack_gen/rpm.rst:593
msgid "/usr/libx32 /usr/lib64 /usr/share /usr/share/aclocal /usr/share/doc"
msgstr ""

#: ../../../cpack_gen/rpm.rst:596
msgid ""
"May be used to exclude path (directories or files) from the auto-generated "
"list of paths discovered by CPack RPM. The default value contains a "
"reasonable set of values if the variable is not defined by the user. If the "
"variable is defined by the user then the CPack RPM generator will NOT any of "
"the default path. If you want to add some path to the default list then you "
"can use :variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION` variable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:603
msgid "Added ``/usr/share/aclocal`` to the default list of excludes."
msgstr ""

#: ../../../cpack_gen/rpm.rst:608
msgid "additional list of path to be excluded."
msgstr ""

#: ../../../cpack_gen/rpm.rst:613
msgid ""
"May be used to add more exclude path (directories or files) from the initial "
"default list of excluded paths. See :variable:"
"`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST`."
msgstr ""

#: ../../../cpack_gen/rpm.rst:621
msgid "Packages relocation paths list."
msgstr ""

#: ../../../cpack_gen/rpm.rst:626
msgid ""
"May be used to specify more than one relocation path per relocatable RPM. "
"Variable contains a list of relocation paths that if relative are prefixed "
"by the value of :variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` or by the "
"value of :variable:`CPACK_PACKAGING_INSTALL_PREFIX` if the component version "
"is not provided. Variable is not component based as its content can be used "
"to set a different path prefix for e.g. binary dir and documentation dir at "
"the same time. Only prefixes that are required by a certain component are "
"added to that component - component must contain at least one file/directory/"
"symbolic link with :variable:`CPACK_RPM_RELOCATION_PATHS` prefix for a "
"certain relocation path to be added. Package will not contain any relocation "
"paths if there are no files/directories/symbolic links on any of the "
"provided prefix locations. Packages that either do not contain any "
"relocation paths or contain files/directories/symbolic links that are "
"outside relocation paths print out an ``AUTHOR_WARNING`` that RPM will be "
"partially relocatable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:646
msgid "Per component relocation path install prefix."
msgstr ""

#: ../../../cpack_gen/rpm.rst:649
msgid "Default   : CPACK_PACKAGING_INSTALL_PREFIX"
msgstr ""

#: ../../../cpack_gen/rpm.rst:651
msgid ""
"May be used to set per component :variable:`CPACK_PACKAGING_INSTALL_PREFIX` "
"for relocatable RPM packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:659
msgid "Removal of default install prefix from relocation paths list."
msgstr ""

#: ../../../cpack_gen/rpm.rst:-1
msgid "CPACK_PACKAGING_INSTALL_PREFIX or CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX"
msgstr ""

#: ../../../cpack_gen/rpm.rst:663
msgid "are treated as one of relocation paths"
msgstr ""

#: ../../../cpack_gen/rpm.rst:665
msgid ""
"May be used to remove CPACK_PACKAGING_INSTALL_PREFIX and "
"CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX from relocatable RPM prefix paths."
msgstr ""

#: ../../../cpack_gen/rpm.rst:675
msgid ""
"May be used to set additional man dirs that could potentially be compressed "
"by brp-compress RPM macro. Variable content must be a list of regular "
"expressions that point to directories containing man files or to man files "
"directly. Note that in order to compress man pages a path must also be "
"present in brp-compress RPM script and that brp-compress script must be "
"added to RPM configuration by the operating system."
msgstr ""

#: ../../../cpack_gen/rpm.rst:682
msgid ""
"Regular expressions that are added by default were taken from brp-compress "
"RPM macro:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:685
msgid "/usr/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:686
msgid "/usr/man/.*/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:687
msgid "/usr/info.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:688
msgid "/usr/share/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:689
msgid "/usr/share/man/.*/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:690
msgid "/usr/share/info.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:691
msgid "/usr/kerberos/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:692
msgid "/usr/X11R6/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:693
msgid "/usr/lib/perl5/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:694
msgid "/usr/share/doc/.*/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:695
msgid "/usr/lib/.*/man/man.*"
msgstr ""

#: ../../../cpack_gen/rpm.rst:702
msgid "default user ownership of RPM content"
msgstr ""

#: ../../../cpack_gen/rpm.rst:705 ../../../cpack_gen/rpm.rst:718
msgid "Default   : root"
msgstr ""

#: ../../../cpack_gen/rpm.rst:707
msgid ""
"Value should be user name and not UID. Note that <compName> must be in upper-"
"case."
msgstr ""

#: ../../../cpack_gen/rpm.rst:715
msgid "default group ownership of RPM content"
msgstr ""

#: ../../../cpack_gen/rpm.rst:720
msgid ""
"Value should be group name and not GID. Note that <compName> must be in "
"upper-case."
msgstr ""

#: ../../../cpack_gen/rpm.rst:728
msgid "default permissions used for packaged files"
msgstr ""

#: ../../../cpack_gen/rpm.rst:731 ../../../cpack_gen/rpm.rst:756
#: ../../../cpack_gen/rpm.rst:769
msgid "Default   : - (system default)"
msgstr ""

#: ../../../cpack_gen/rpm.rst:733
msgid "Accepted values are lists with ``PERMISSIONS``. Valid permissions are:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:736
msgid "OWNER_READ"
msgstr ""

#: ../../../cpack_gen/rpm.rst:737
msgid "OWNER_WRITE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:738
msgid "OWNER_EXECUTE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:739
msgid "GROUP_READ"
msgstr ""

#: ../../../cpack_gen/rpm.rst:740
msgid "GROUP_WRITE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:741
msgid "GROUP_EXECUTE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:742
msgid "WORLD_READ"
msgstr ""

#: ../../../cpack_gen/rpm.rst:743
msgid "WORLD_WRITE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:744
msgid "WORLD_EXECUTE"
msgstr ""

#: ../../../cpack_gen/rpm.rst:746
msgid "Note that <compName> must be in upper-case."
msgstr ""

#: ../../../cpack_gen/rpm.rst:753
msgid "default permissions used for packaged directories"
msgstr ""

#: ../../../cpack_gen/rpm.rst:758
msgid ""
"Accepted values are lists with PERMISSIONS. Valid permissions are the same "
"as for :variable:`CPACK_RPM_DEFAULT_FILE_PERMISSIONS`. Note that <compName> "
"must be in upper-case."
msgstr ""

#: ../../../cpack_gen/rpm.rst:766
msgid "force execute permissions on programs and shared libraries"
msgstr ""

#: ../../../cpack_gen/rpm.rst:771
msgid ""
"Force set owner, group and world execute permissions on programs and shared "
"libraries. This can be used for creating valid rpm packages on systems such "
"as Debian where shared libraries do not have execute permissions set."
msgstr ""

#: ../../../cpack_gen/rpm.rst:777
msgid ""
"Programs and shared libraries without execute permissions are ignored during "
"separation of debug symbols from the binary for debuginfo packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:781
msgid "Packaging of Symbolic Links"
msgstr ""

#: ../../../cpack_gen/rpm.rst:785
msgid "The CPack RPM generator supports packaging of symbolic links::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:787
msgid ""
"execute_process(COMMAND ${CMAKE_COMMAND}\n"
"  -E create_symlink <relative_path_location> <symlink_name>)\n"
"install(FILES ${CMAKE_CURRENT_BINARY_DIR}/<symlink_name>\n"
"  DESTINATION <symlink_location> COMPONENT libraries)"
msgstr ""

#: ../../../cpack_gen/rpm.rst:792
msgid ""
"Symbolic links will be optimized (paths will be shortened if possible) "
"before being added to the package or if multiple relocation paths are "
"detected, a post install symlink relocation script will be generated."
msgstr ""

#: ../../../cpack_gen/rpm.rst:796
msgid ""
"Symbolic links may point to locations that are not packaged by the same "
"package (either a different component or even not packaged at all) but those "
"locations will be treated as if they were a part of the package while "
"determining if symlink should be either created or present in a post install "
"script - depending on relocation paths."
msgstr ""

#: ../../../cpack_gen/rpm.rst:802
msgid ""
"Symbolic links that point to locations outside packaging path produce a "
"warning and are treated as non relocatable permanent symbolic links. "
"Previous versions of CMake produced an error in this case."
msgstr ""

#: ../../../cpack_gen/rpm.rst:807
msgid "Currently there are a few limitations though:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:809
msgid ""
"For component based packaging component interdependency is not checked when "
"processing symbolic links. Symbolic links pointing to content of a different "
"component are treated the same way as if pointing to location that will not "
"be packaged."
msgstr ""

#: ../../../cpack_gen/rpm.rst:814
msgid ""
"Symbolic links pointing to a location through one or more intermediate "
"symbolic links will not be handled differently - if the intermediate "
"symbolic link(s) is also on a relocatable path, relocating it during package "
"installation may cause initial symbolic link to point to an invalid location."
msgstr ""

#: ../../../cpack_gen/rpm.rst:821
msgid "Packaging of debug information"
msgstr ""

#: ../../../cpack_gen/rpm.rst:825
msgid ""
"Debuginfo packages contain debug symbols and sources for debugging packaged "
"binaries."
msgstr ""

#: ../../../cpack_gen/rpm.rst:828
msgid "Debuginfo RPM packaging has its own set of variables:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:833
msgid "Enable generation of debuginfo RPM package(s)."
msgstr ""

#: ../../../cpack_gen/rpm.rst:840
msgid ""
"Binaries must contain debug symbols before packaging so use either ``Debug`` "
"or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable value."
msgstr ""

#: ../../../cpack_gen/rpm.rst:843
msgid ""
"Additionally, if :variable:`CPACK_STRIP_FILES` is set, the files will be "
"stripped before they get to the RPM generator, so will not contain debug "
"symbols and a debuginfo package will not get built. Do not use with :"
"variable:`CPACK_STRIP_FILES`."
msgstr ""

#: ../../../cpack_gen/rpm.rst:849
msgid ""
"Packages generated from packages without binary files, with binary files but "
"without execute permissions or without debug symbols will cause packaging "
"termination."
msgstr ""

#: ../../../cpack_gen/rpm.rst:855
msgid ""
"Provides locations of root directories of source files from which binaries "
"were built."
msgstr ""

#: ../../../cpack_gen/rpm.rst:858 ../../../cpack_gen/rpm.rst:876
msgid "Mandatory : YES if :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is set"
msgstr ""

#: ../../../cpack_gen/rpm.rst:863
msgid ""
"For CMake project :variable:`CPACK_BUILD_SOURCE_DIRS` is set by default to "
"point to :variable:`CMAKE_SOURCE_DIR` and :variable:`CMAKE_BINARY_DIR` paths."
msgstr ""

#: ../../../cpack_gen/rpm.rst:868
msgid ""
"Sources with path prefixes that do not fall under any location provided "
"with :variable:`CPACK_BUILD_SOURCE_DIRS` will not be present in debuginfo "
"package."
msgstr ""

#: ../../../cpack_gen/rpm.rst:874
msgid ""
"Prefix of location where sources will be placed during package installation."
msgstr ""

#: ../../../cpack_gen/rpm.rst:-1
msgid "\"/usr/src/debug/<CPACK_PACKAGE_FILE_NAME>\" and"
msgstr ""

#: ../../../cpack_gen/rpm.rst:878
msgid ""
"for component packaging \"/usr/src/debug/<CPACK_PACKAGE_FILE_NAME>-"
"<component>\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:882
msgid ""
"Each source path prefix is additionally suffixed by ``src_<index>`` where "
"index is index of the path used from :variable:`CPACK_BUILD_SOURCE_DIRS` "
"variable. This produces ``<CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX>/src_<index>`` "
"replacement path. Limitation is that replaced path part must be shorter or "
"of equal length than the length of its replacement. If that is not the case "
"either :variable:`CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX` variable has to be set "
"to a shorter path or source directories must be placed on a longer path."
msgstr ""

#: ../../../cpack_gen/rpm.rst:893
msgid ""
"Directories containing sources that should be excluded from debuginfo "
"packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:896
msgid "Default   : \"/usr /usr/src /usr/src/debug\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:898
msgid ""
"Listed paths are owned by other RPM packages and should therefore not be "
"deleted on debuginfo package uninstallation."
msgstr ""

#: ../../../cpack_gen/rpm.rst:903
msgid ""
"Paths that should be appended to :variable:"
"`CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS` for exclusion."
msgstr ""

#: ../../../cpack_gen/rpm.rst:913
msgid "Create a single debuginfo package even if components packaging is set."
msgstr ""

#: ../../../cpack_gen/rpm.rst:918
msgid ""
"When this variable is enabled it produces a single debuginfo package even if "
"component packaging is enabled."
msgstr ""

#: ../../../cpack_gen/rpm.rst:921
msgid ""
"When using this feature in combination with components packaging and there "
"is more than one component this variable requires :variable:"
"`CPACK_RPM_MAIN_COMPONENT` to be set."
msgstr ""

#: ../../../cpack_gen/rpm.rst:927
msgid ""
"If none of the :variable:`CPACK_RPM_<component>_DEBUGINFO_PACKAGE` variables "
"is set then :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is automatically set to "
"``ON`` when :variable:`CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE` is set."
msgstr ""

#: ../../../cpack_gen/rpm.rst:936
msgid "Debuginfo package file name."
msgstr ""

#: ../../../cpack_gen/rpm.rst:939
msgid "Default   : rpmbuild tool generated package file name"
msgstr ""

#: ../../../cpack_gen/rpm.rst:941
msgid ""
"Alternatively provided debuginfo package file name must end with ``.rpm`` "
"suffix and should differ from file names of other generated packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:944
msgid ""
"Variable may contain ``@cpack_component@`` placeholder which will be "
"replaced by component name if component packaging is enabled otherwise it "
"deletes the placeholder."
msgstr ""

#: ../../../cpack_gen/rpm.rst:948
msgid ""
"Setting the variable to ``RPM-DEFAULT`` may be used to explicitly set "
"filename generation to default."
msgstr ""

#: ../../../cpack_gen/rpm.rst:953
msgid ""
":variable:`CPACK_RPM_FILE_NAME` also supports rpmbuild tool generated "
"package file name - disabled by default but can be enabled by setting the "
"variable to ``RPM-DEFAULT``."
msgstr ""

#: ../../../cpack_gen/rpm.rst:958
msgid "Packaging of sources (SRPM)"
msgstr ""

#: ../../../cpack_gen/rpm.rst:962
msgid ""
"SRPM packaging is enabled by setting :variable:`CPACK_RPM_PACKAGE_SOURCES` "
"variable while usually using :variable:`CPACK_INSTALLED_DIRECTORIES` "
"variable to provide directory containing CMakeLists.txt and source files."
msgstr ""

#: ../../../cpack_gen/rpm.rst:966
msgid "For CMake projects SRPM package would be produced by executing::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:968
msgid "cpack -G RPM --config ./CPackSourceConfig.cmake"
msgstr ""

#: ../../../cpack_gen/rpm.rst:972
msgid ""
"Produced SRPM package is expected to be built with :manual:`cmake(1)` "
"executable and packaged with :manual:`cpack(1)` executable so CMakeLists.txt "
"has to be located in root source directory and must be able to generate "
"binary rpm packages by executing :option:`cpack -G` command. The two "
"executables as well as rpmbuild must also be present when generating binary "
"rpm packages from the produced SRPM package."
msgstr ""

#: ../../../cpack_gen/rpm.rst:979
msgid ""
"Once the SRPM package is generated it can be used to generate binary "
"packages by creating a directory structure for rpm generation and executing "
"rpmbuild tool::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:983
msgid ""
"mkdir -p build_dir/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\n"
"rpmbuild --define \"_topdir <path_to_build_dir>\" --rebuild <SRPM_file_name>"
msgstr ""

#: ../../../cpack_gen/rpm.rst:986
msgid ""
"Generated packages will be located in build_dir/RPMS directory or its sub "
"directories."
msgstr ""

#: ../../../cpack_gen/rpm.rst:991
msgid ""
"SRPM package internally uses CPack/RPM generator to generate binary packages "
"so CMakeScripts.txt can decide during the SRPM to binary rpm generation step "
"what content the package(s) should have as well as how they should be "
"packaged (monolithic or components). CMake can decide this for e.g. by "
"reading environment variables set by the package manager before starting the "
"process of generating binary rpm packages. This way a single SRPM package "
"can be used to produce different binary rpm packages on different platforms "
"depending on the platform's packaging rules."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1000
msgid "Source RPM packaging has its own set of variables:"
msgstr ""

#: ../../../cpack_gen/rpm.rst:1004
msgid "Should the content be packaged as a source rpm (default is binary rpm)."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1011
msgid ""
"For cmake projects :variable:`CPACK_RPM_PACKAGE_SOURCES` variable is set to "
"``OFF`` in CPackConfig.cmake and ``ON`` in CPackSourceConfig.cmake generated "
"files."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1017
msgid ""
"Additional command-line parameters provided to :manual:`cmake(1)` executable."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1024
msgid ""
"Packaging install prefix that would be provided in :variable:"
"`CPACK_PACKAGING_INSTALL_PREFIX` variable for producing binary RPM packages."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1028
msgid "Default   : \"/\""
msgstr ""

#: ../../../cpack_gen/rpm.rst:1032
msgid "List of source rpm build dependencies."
msgstr ""

#: ../../../cpack_gen/rpm.rst:1037
msgid ""
"May be used to set source RPM build dependencies (BuildRequires). Note that "
"you must enclose the complete build requirements string between quotes, for "
"example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:1041
msgid "set(CPACK_RPM_BUILDREQUIRES \"python >= 2.5.0, cmake >= 2.8\")"
msgstr ""

#: ../../../cpack_gen/rpm.rst:1050
msgid ""
"May be used to keep the dependency generator from scanning specific files or "
"directories for dependencies.  Note that you can use a regular expression "
"that matches all of the directories or files, for example::"
msgstr ""

#: ../../../cpack_gen/rpm.rst:1054
msgid "set(CPACK_RPM_REQUIRES_EXCLUDE_FROM \"bin/libqsqloci.*\\\\.so.*\")"
msgstr ""
