# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/add_custom_target.rst:2
msgid "add_custom_target"
msgstr ""

#: ../../../command/add_custom_target.rst:4
msgid "Add a target with no output so it will always be built."
msgstr ""

#: ../../../command/add_custom_target.rst:6
msgid ""
"add_custom_target(Name [ALL] [command1 [args1...]]\n"
"                  [COMMAND command2 [args2...] ...]\n"
"                  [DEPENDS depend depend depend ... ]\n"
"                  [BYPRODUCTS [files...]]\n"
"                  [WORKING_DIRECTORY dir]\n"
"                  [COMMENT comment]\n"
"                  [JOB_POOL job_pool]\n"
"                  [VERBATIM] [USES_TERMINAL]\n"
"                  [COMMAND_EXPAND_LISTS]\n"
"                  [SOURCES src1 [src2...]])"
msgstr ""

#: ../../../command/add_custom_target.rst:19
msgid ""
"Adds a target with the given name that executes the given commands. The "
"target has no output file and is *always considered out of date* even if the "
"commands try to create a file with the name of the target. Use the :command:"
"`add_custom_command` command to generate a file with dependencies.  By "
"default nothing depends on the custom target.  Use the :command:"
"`add_dependencies` command to add dependencies to or from other targets."
msgstr ""

#: ../../../command/add_custom_target.rst:27
msgid "The options are:"
msgstr ""

#: ../../../command/add_custom_target.rst:29
msgid "``ALL``"
msgstr ""

#: ../../../command/add_custom_target.rst:30
msgid ""
"Indicate that this target should be added to the default build target so "
"that it will be run every time (the command cannot be called ``ALL``)."
msgstr ""

#: ../../../command/add_custom_target.rst:34
msgid "``BYPRODUCTS``"
msgstr ""

#: ../../../command/add_custom_target.rst:37
msgid ""
"Specify the files the command is expected to produce but whose modification "
"time may or may not be updated on subsequent builds. If a byproduct name is "
"a relative path it will be interpreted relative to the build tree directory "
"corresponding to the current source directory. Each byproduct file will be "
"marked with the :prop_sf:`GENERATED` source file property automatically."
msgstr ""

#: ../../../command/add_custom_target.rst:45
msgid ""
"*See policy* :policy:`CMP0058` *for the motivation behind this feature.*"
msgstr ""

#: ../../../command/add_custom_target.rst:47
msgid ""
"Explicit specification of byproducts is supported by the :generator:`Ninja` "
"generator to tell the ``ninja`` build tool how to regenerate byproducts when "
"they are missing.  It is also useful when other build rules (e.g. custom "
"commands) depend on the byproducts.  Ninja requires a build rule for any "
"generated file on which another rule depends even if there are order-only "
"dependencies to ensure the byproducts will be available before their "
"dependents build."
msgstr ""

#: ../../../command/add_custom_target.rst:56
msgid ""
"The :ref:`Makefile Generators` will remove ``BYPRODUCTS`` and other :prop_sf:"
"`GENERATED` files during ``make clean``."
msgstr ""

#: ../../../command/add_custom_target.rst:59
msgid ""
"Arguments to ``BYPRODUCTS`` may use a restricted set of :manual:`generator "
"expressions <cmake-generator-expressions(7)>`. :ref:`Target-dependent "
"expressions <Target-Dependent Queries>` are not permitted."
msgstr ""

#: ../../../command/add_custom_target.rst:65
msgid "``COMMAND``"
msgstr ""

#: ../../../command/add_custom_target.rst:66
msgid ""
"Specify the command-line(s) to execute at build time. If more than one "
"``COMMAND`` is specified they will be executed in order, but *not* "
"necessarily composed into a stateful shell or batch script. (To run a full "
"script, use the :command:`configure_file` command or the :command:"
"`file(GENERATE)` command to create it, and then specify a ``COMMAND`` to "
"launch it.)"
msgstr ""

#: ../../../command/add_custom_target.rst:73
msgid ""
"If ``COMMAND`` specifies an executable target name (created by the :command:"
"`add_executable` command), it will automatically be replaced by the location "
"of the executable created at build time if either of the following is true:"
msgstr ""

#: ../../../command/add_custom_target.rst:78
msgid ""
"The target is not being cross-compiled (i.e. the :variable:"
"`CMAKE_CROSSCOMPILING` variable is not set to true)."
msgstr ""

#: ../../../command/add_custom_target.rst:80
msgid ""
"The target is being cross-compiled and an emulator is provided (i.e. its :"
"prop_tgt:`CROSSCOMPILING_EMULATOR` target property is set). In this case, "
"the contents of :prop_tgt:`CROSSCOMPILING_EMULATOR` will be prepended to the "
"command before the location of the target executable."
msgstr ""

#: ../../../command/add_custom_target.rst:86
msgid ""
"If neither of the above conditions are met, it is assumed that the command "
"name is a program to be found on the ``PATH`` at build time."
msgstr ""

#: ../../../command/add_custom_target.rst:89
msgid ""
"Arguments to ``COMMAND`` may use :manual:`generator expressions <cmake-"
"generator-expressions(7)>`. Use the :genex:`TARGET_FILE` generator "
"expression to refer to the location of a target later in the command line (i."
"e. as a command argument rather than as the command to execute)."
msgstr ""

#: ../../../command/add_custom_target.rst:95
msgid ""
"Whenever one of the following target based generator expressions are used as "
"a command to execute or is mentioned in a command argument, a target-level "
"dependency will be added automatically so that the mentioned target will be "
"built before this custom target (see policy :policy:`CMP0112`)."
msgstr ""

#: ../../../command/add_custom_target.rst:100
msgid "``TARGET_FILE``"
msgstr ""

#: ../../../command/add_custom_target.rst:101
msgid "``TARGET_LINKER_FILE``"
msgstr ""

#: ../../../command/add_custom_target.rst:102
msgid "``TARGET_SONAME_FILE``"
msgstr ""

#: ../../../command/add_custom_target.rst:103
msgid "``TARGET_PDB_FILE``"
msgstr ""

#: ../../../command/add_custom_target.rst:105
msgid ""
"The command and arguments are optional and if not specified an empty target "
"will be created."
msgstr ""

#: ../../../command/add_custom_target.rst:108
msgid "``COMMENT``"
msgstr ""

#: ../../../command/add_custom_target.rst:109
msgid ""
"Display the given message before the commands are executed at build time."
msgstr ""

#: ../../../command/add_custom_target.rst:112
msgid "``DEPENDS``"
msgstr ""

#: ../../../command/add_custom_target.rst:113
msgid ""
"Reference files and outputs of custom commands created with :command:"
"`add_custom_command` command calls in the same directory (``CMakeLists.txt`` "
"file).  They will be brought up to date when the target is built."
msgstr ""

#: ../../../command/add_custom_target.rst:118
msgid ""
"A target-level dependency is added if any dependency is a byproduct of a "
"target or any of its build events in the same directory to ensure the "
"byproducts will be available before this target is built."
msgstr ""

#: ../../../command/add_custom_target.rst:123
msgid ""
"Use the :command:`add_dependencies` command to add dependencies on other "
"targets."
msgstr ""

#: ../../../command/add_custom_target.rst:126
msgid "``COMMAND_EXPAND_LISTS``"
msgstr ""

#: ../../../command/add_custom_target.rst:129
msgid ""
"Lists in ``COMMAND`` arguments will be expanded, including those created "
"with :manual:`generator expressions <cmake-generator-expressions(7)>`, "
"allowing ``COMMAND`` arguments such as ``${CC} \"-I$<JOIN:$<TARGET_PROPERTY:"
"foo,INCLUDE_DIRECTORIES>,;-I>\" foo.cc`` to be properly expanded."
msgstr ""

#: ../../../command/add_custom_target.rst:136
msgid "``JOB_POOL``"
msgstr ""

#: ../../../command/add_custom_target.rst:139
msgid ""
"Specify a :prop_gbl:`pool <JOB_POOLS>` for the :generator:`Ninja` generator. "
"Incompatible with ``USES_TERMINAL``, which implies the ``console`` pool. "
"Using a pool that is not defined by :prop_gbl:`JOB_POOLS` causes an error by "
"ninja at build time."
msgstr ""

#: ../../../command/add_custom_target.rst:145
msgid "``SOURCES``"
msgstr ""

#: ../../../command/add_custom_target.rst:146
msgid ""
"Specify additional source files to be included in the custom target. "
"Specified source files will be added to IDE project files for convenience in "
"editing even if they have no build rules."
msgstr ""

#: ../../../command/add_custom_target.rst:150
msgid "``VERBATIM``"
msgstr ""

#: ../../../command/add_custom_target.rst:151
msgid ""
"All arguments to the commands will be escaped properly for the build tool so "
"that the invoked command receives each argument unchanged.  Note that one "
"level of escapes is still used by the CMake language processor before "
"``add_custom_target`` even sees the arguments.  Use of ``VERBATIM`` is "
"recommended as it enables correct behavior.  When ``VERBATIM`` is not given "
"the behavior is platform specific because there is no protection of tool-"
"specific special characters."
msgstr ""

#: ../../../command/add_custom_target.rst:160
msgid "``USES_TERMINAL``"
msgstr ""

#: ../../../command/add_custom_target.rst:163
msgid ""
"The command will be given direct access to the terminal if possible. With "
"the :generator:`Ninja` generator, this places the command in the "
"``console`` :prop_gbl:`pool <JOB_POOLS>`."
msgstr ""

#: ../../../command/add_custom_target.rst:167
msgid "``WORKING_DIRECTORY``"
msgstr ""

#: ../../../command/add_custom_target.rst:168
msgid ""
"Execute the command with the given current working directory. If it is a "
"relative path it will be interpreted relative to the build tree directory "
"corresponding to the current source directory."
msgstr ""

#: ../../../command/add_custom_target.rst:172
msgid ""
"Arguments to ``WORKING_DIRECTORY`` may use :manual:`generator expressions "
"<cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../command/add_custom_target.rst:177
msgid "Ninja Multi-Config"
msgstr ""

#: ../../../command/add_custom_target.rst:181
msgid ""
"``add_custom_target`` supports the :generator:`Ninja Multi-Config` "
"generator's cross-config capabilities. See the generator documentation for "
"more information."
msgstr ""
