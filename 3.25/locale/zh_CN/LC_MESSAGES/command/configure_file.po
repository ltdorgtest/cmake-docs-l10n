# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/configure_file.rst:2
msgid "configure_file"
msgstr ""

#: ../../../command/configure_file.rst:4
msgid "Copy a file to another location and modify its contents."
msgstr ""

#: ../../../command/configure_file.rst:6
msgid ""
"configure_file(<input> <output>\n"
"               [NO_SOURCE_PERMISSIONS | USE_SOURCE_PERMISSIONS |\n"
"                FILE_PERMISSIONS <permissions>...]\n"
"               [COPYONLY] [ESCAPE_QUOTES] [@ONLY]\n"
"               [NEWLINE_STYLE [UNIX|DOS|WIN32|LF|CRLF] ])"
msgstr ""

#: ../../../command/configure_file.rst:14
msgid ""
"Copies an ``<input>`` file to an ``<output>`` file and substitutes variable "
"values referenced as ``@VAR@`` or ``${VAR}`` in the input file content.  "
"Each variable reference will be replaced with the current value of the "
"variable, or the empty string if the variable is not defined.  Furthermore, "
"input lines of the form"
msgstr ""

#: ../../../command/configure_file.rst:20
msgid "#cmakedefine VAR ..."
msgstr ""

#: ../../../command/configure_file.rst:24
#: ../../../command/configure_file.rst:48
msgid "will be replaced with either"
msgstr ""

#: ../../../command/configure_file.rst:26
msgid "#define VAR ..."
msgstr ""

#: ../../../command/configure_file.rst:30
#: ../../../command/configure_file.rst:54
msgid "or"
msgstr ""

#: ../../../command/configure_file.rst:32
msgid "/* #undef VAR */"
msgstr ""

#: ../../../command/configure_file.rst:36
msgid ""
"depending on whether ``VAR`` is set in CMake to any value not considered a "
"false constant by the :command:`if` command.  The \"...\" content on the "
"line after the variable name, if any, is processed as above."
msgstr ""

#: ../../../command/configure_file.rst:40
msgid ""
"Unlike lines of the form ``#cmakedefine VAR ...``, in lines of the form "
"``#cmakedefine01 VAR``, ``VAR`` itself will expand to ``VAR 0`` or ``VAR 1`` "
"rather than being assigned the value ``...``. Therefore, input lines of the "
"form"
msgstr ""

#: ../../../command/configure_file.rst:44
msgid "#cmakedefine01 VAR"
msgstr ""

#: ../../../command/configure_file.rst:50
msgid "#define VAR 0"
msgstr ""

#: ../../../command/configure_file.rst:56
msgid "#define VAR 1"
msgstr ""

#: ../../../command/configure_file.rst:60
msgid ""
"Input lines of the form ``#cmakedefine01 VAR ...`` will expand as "
"``#cmakedefine01 VAR ... 0`` or ``#cmakedefine01 VAR ... 0``, which may lead "
"to undefined behavior."
msgstr ""

#: ../../../command/configure_file.rst:64
msgid ""
"The result lines (with the exception of the ``#undef`` comments) can be "
"indented using spaces and/or tabs between the ``#`` character and the "
"``cmakedefine`` or ``cmakedefine01`` words. This whitespace indentation will "
"be preserved in the output lines:"
msgstr ""

#: ../../../command/configure_file.rst:70
msgid ""
"#  cmakedefine VAR\n"
"#  cmakedefine01 VAR"
msgstr ""

#: ../../../command/configure_file.rst:75
msgid "will be replaced, if ``VAR`` is defined, with"
msgstr ""

#: ../../../command/configure_file.rst:77
msgid ""
"#  define VAR\n"
"#  define VAR 1"
msgstr ""

#: ../../../command/configure_file.rst:82
msgid ""
"If the input file is modified the build system will re-run CMake to re-"
"configure the file and generate the build system again. The generated file "
"is modified and its timestamp updated on subsequent cmake runs only if its "
"content is changed."
msgstr ""

#: ../../../command/configure_file.rst:87
msgid "The arguments are:"
msgstr ""

#: ../../../command/configure_file.rst:89
msgid "``<input>``"
msgstr ""

#: ../../../command/configure_file.rst:90
msgid ""
"Path to the input file.  A relative path is treated with respect to the "
"value of :variable:`CMAKE_CURRENT_SOURCE_DIR`.  The input path must be a "
"file, not a directory."
msgstr ""

#: ../../../command/configure_file.rst:94
msgid "``<output>``"
msgstr ""

#: ../../../command/configure_file.rst:95
msgid ""
"Path to the output file or directory.  A relative path is treated with "
"respect to the value of :variable:`CMAKE_CURRENT_BINARY_DIR`. If the path "
"names an existing directory the output file is placed in that directory with "
"the same file name as the input file. If the path contains non-existent "
"directories, they are created."
msgstr ""

#: ../../../command/configure_file.rst:101
msgid "``NO_SOURCE_PERMISSIONS``"
msgstr ""

#: ../../../command/configure_file.rst:104
msgid ""
"Do not transfer the permissions of the input file to the output file. The "
"copied file permissions default to the standard 644 value (-rw-r--r--)."
msgstr ""

#: ../../../command/configure_file.rst:108
msgid "``USE_SOURCE_PERMISSIONS``"
msgstr ""

#: ../../../command/configure_file.rst:111
msgid ""
"Transfer the permissions of the input file to the output file. This is "
"already the default behavior if none of the three permissions-related "
"keywords are given (``NO_SOURCE_PERMISSIONS``, ``USE_SOURCE_PERMISSIONS`` or "
"``FILE_PERMISSIONS``).  The ``USE_SOURCE_PERMISSIONS`` keyword mostly serves "
"as a way of making the intended behavior clearer at the call site."
msgstr ""

#: ../../../command/configure_file.rst:117
msgid "``FILE_PERMISSIONS <permissions>...``"
msgstr ""

#: ../../../command/configure_file.rst:120
msgid ""
"Ignore the input file's permissions and use the specified ``<permissions>`` "
"for the output file instead."
msgstr ""

#: ../../../command/configure_file.rst:123
msgid "``COPYONLY``"
msgstr ""

#: ../../../command/configure_file.rst:124
msgid ""
"Copy the file without replacing any variable references or other content.  "
"This option may not be used with ``NEWLINE_STYLE``."
msgstr ""

#: ../../../command/configure_file.rst:127
msgid "``ESCAPE_QUOTES``"
msgstr ""

#: ../../../command/configure_file.rst:128
msgid "Escape any substituted quotes with backslashes (C-style)."
msgstr ""

#: ../../../command/configure_file.rst:130
msgid "``@ONLY``"
msgstr ""

#: ../../../command/configure_file.rst:131
msgid ""
"Restrict variable replacement to references of the form ``@VAR@``. This is "
"useful for configuring scripts that use ``${VAR}`` syntax."
msgstr ""

#: ../../../command/configure_file.rst:134
msgid "``NEWLINE_STYLE <style>``"
msgstr ""

#: ../../../command/configure_file.rst:135
msgid ""
"Specify the newline style for the output file.  Specify ``UNIX`` or ``LF`` "
"for ``\\n`` newlines, or specify ``DOS``, ``WIN32``, or ``CRLF`` for "
"``\\r\\n`` newlines. This option may not be used with ``COPYONLY``."
msgstr ""

#: ../../../command/configure_file.rst:141
msgid "Example"
msgstr ""

#: ../../../command/configure_file.rst:143
msgid "Consider a source tree containing a ``foo.h.in`` file:"
msgstr ""

#: ../../../command/configure_file.rst:145
msgid ""
"#cmakedefine FOO_ENABLE\n"
"#cmakedefine FOO_STRING \"@FOO_STRING@\""
msgstr ""

#: ../../../command/configure_file.rst:150
msgid ""
"An adjacent ``CMakeLists.txt`` may use ``configure_file`` to configure the "
"header:"
msgstr ""

#: ../../../command/configure_file.rst:153
msgid ""
"option(FOO_ENABLE \"Enable Foo\" ON)\n"
"if(FOO_ENABLE)\n"
"  set(FOO_STRING \"foo\")\n"
"endif()\n"
"configure_file(foo.h.in foo.h @ONLY)"
msgstr ""

#: ../../../command/configure_file.rst:161
msgid ""
"This creates a ``foo.h`` in the build directory corresponding to this source "
"directory.  If the ``FOO_ENABLE`` option is on, the configured file will "
"contain:"
msgstr ""

#: ../../../command/configure_file.rst:165
msgid ""
"#define FOO_ENABLE\n"
"#define FOO_STRING \"foo\""
msgstr ""

#: ../../../command/configure_file.rst:170
msgid "Otherwise it will contain:"
msgstr ""

#: ../../../command/configure_file.rst:172
msgid ""
"/* #undef FOO_ENABLE */\n"
"/* #undef FOO_STRING */"
msgstr ""

#: ../../../command/configure_file.rst:177
msgid ""
"One may then use the :command:`include_directories` command to specify the "
"output directory as an include directory:"
msgstr ""

#: ../../../command/configure_file.rst:180
msgid "include_directories(${CMAKE_CURRENT_BINARY_DIR})"
msgstr ""

#: ../../../command/configure_file.rst:184
msgid "so that sources may include the header as ``#include <foo.h>``."
msgstr ""
