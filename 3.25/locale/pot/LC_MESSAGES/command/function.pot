# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/function.rst:2
msgid "function"
msgstr ""

#: ../../../command/function.rst:4
msgid "Start recording a function for later invocation as a command."
msgstr ""

#: ../../../command/function.rst:6
msgid ""
"function(<name> [<arg1> ...])\n"
"  <commands>\n"
"endfunction()"
msgstr ""

#: ../../../command/function.rst:12
msgid ""
"Defines a function named ``<name>`` that takes arguments named "
"``<arg1>``, ...  The ``<commands>`` in the function definition are recorded; "
"they are not executed until the function is invoked."
msgstr ""

#: ../../../command/function.rst:16
msgid ""
"Per legacy, the :command:`endfunction` command admits an optional ``<name>`` "
"argument. If used, it must be a verbatim repeat of the argument of the "
"opening ``function`` command."
msgstr ""

#: ../../../command/function.rst:20
msgid ""
"A function opens a new scope: see :command:`set(var PARENT_SCOPE)` for "
"details."
msgstr ""

#: ../../../command/function.rst:23
msgid ""
"See the :command:`cmake_policy()` command documentation for the behavior of "
"policies inside functions."
msgstr ""

#: ../../../command/function.rst:26
msgid ""
"See the :command:`macro()` command documentation for differences between "
"CMake functions and macros."
msgstr ""

#: ../../../command/function.rst:30
msgid "Invocation"
msgstr ""

#: ../../../command/function.rst:32
msgid "The function invocation is case-insensitive. A function defined as"
msgstr ""

#: ../../../command/function.rst:34
msgid ""
"function(foo)\n"
"  <commands>\n"
"endfunction()"
msgstr ""

#: ../../../command/function.rst:40
msgid "can be invoked through any of"
msgstr ""

#: ../../../command/function.rst:42
msgid ""
"foo()\n"
"Foo()\n"
"FOO()\n"
"cmake_language(CALL foo)"
msgstr ""

#: ../../../command/function.rst:49
msgid ""
"and so on. However, it is strongly recommended to stay with the case chosen "
"in the function definition. Typically functions use all-lowercase names."
msgstr ""

#: ../../../command/function.rst:53
msgid ""
"The :command:`cmake_language(CALL ...)` command can also be used to invoke "
"the function."
msgstr ""

#: ../../../command/function.rst:58
msgid "Arguments"
msgstr ""

#: ../../../command/function.rst:60
msgid ""
"When the function is invoked, the recorded ``<commands>`` are first modified "
"by replacing formal parameters (``${arg1}``, ...) with the arguments passed, "
"and then invoked as normal commands."
msgstr ""

#: ../../../command/function.rst:64
msgid ""
"In addition to referencing the formal parameters you can reference the "
"``ARGC`` variable which will be set to the number of arguments passed into "
"the function as well as ``ARGV0``, ``ARGV1``, ``ARGV2``, ...  which will "
"have the actual values of the arguments passed in.  This facilitates "
"creating functions with optional arguments."
msgstr ""

#: ../../../command/function.rst:70
msgid ""
"Furthermore, ``ARGV`` holds the list of all arguments given to the function "
"and ``ARGN`` holds the list of arguments past the last expected argument.  "
"Referencing to ``ARGV#`` arguments beyond ``ARGC`` have undefined behavior.  "
"Checking that ``ARGC`` is greater than ``#`` is the only way to ensure that "
"``ARGV#`` was passed to the function as an extra argument."
msgstr ""

#: ../../../command/function.rst:78
msgid "See Also"
msgstr ""

#: ../../../command/function.rst:80
msgid ":command:`endfunction`"
msgstr ""

#: ../../../command/function.rst:81
msgid ":command:`return`"
msgstr ""
