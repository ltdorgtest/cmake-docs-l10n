# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.15.rst:2
msgid "CMake 3.15 Release Notes"
msgstr ""

#: ../../../release/3.15.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.15.rst:8
msgid "Changes made since CMake 3.14 include the following."
msgstr ""

#: ../../../release/3.15.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.15.rst:14
msgid "Generators"
msgstr ""

#: ../../../release/3.15.rst:16
msgid ""
"The :generator:`Xcode` generator now supports per-target schemes. See the :"
"variable:`CMAKE_XCODE_GENERATE_SCHEME` variable and :prop_tgt:"
"`XCODE_GENERATE_SCHEME` target property."
msgstr ""

#: ../../../release/3.15.rst:20
msgid "The :generator:`Green Hills MULTI` generator has been updated:"
msgstr ""

#: ../../../release/3.15.rst:22
msgid ""
"It now supports the :command:`add_custom_command` and :command:"
"`add_custom_target` commands."
msgstr ""

#: ../../../release/3.15.rst:25
msgid "It is now available on Linux."
msgstr ""

#: ../../../release/3.15.rst:28
msgid "Languages"
msgstr ""

#: ../../../release/3.15.rst:30
msgid ""
"Preliminary support for the ``Swift`` language was added to the :generator:"
"`Ninja` generator:"
msgstr ""

#: ../../../release/3.15.rst:33
msgid "Use the :envvar:`SWIFTC` environment variable to specify a compiler."
msgstr ""

#: ../../../release/3.15.rst:35
msgid ""
"The :prop_tgt:`Swift_DEPENDENCIES_FILE` target property and :prop_sf:"
"`Swift_DEPENDENCIES_FILE` source file property were added to customize "
"dependency files."
msgstr ""

#: ../../../release/3.15.rst:39
msgid ""
"The :prop_tgt:`Swift_MODULE_NAME` target property was added to customize the "
"Swift module name."
msgstr ""

#: ../../../release/3.15.rst:42
msgid ""
"The :prop_sf:`Swift_DIAGNOSTICS_FILE` source property was added to indicate "
"where to write the serialized Swift diagnostics."
msgstr ""

#: ../../../release/3.15.rst:45
msgid ""
"The Swift support is experimental, not considered stable, and may change in "
"future releases of CMake."
msgstr ""

#: ../../../release/3.15.rst:49
msgid "Compilers"
msgstr ""

#: ../../../release/3.15.rst:51
msgid ""
"The ``Clang`` compiler variant on Windows that targets the MSVC ABI but has "
"a GNU-like command line is now supported."
msgstr ""

#: ../../../release/3.15.rst:54
msgid ""
"Support for the Clang-based ARM compiler was added with compiler id "
"``ARMClang``."
msgstr ""

#: ../../../release/3.15.rst:57
msgid ""
"Support was added for the IAR compiler architectures Renesas RX, RL78, RH850 "
"and Texas Instruments MSP430."
msgstr ""

#: ../../../release/3.15.rst:60
msgid "Support was added for the IAR compilers built for Linux (IAR BuildLx)."
msgstr ""

#: ../../../release/3.15.rst:63
msgid "Command-Line"
msgstr ""

#: ../../../release/3.15.rst:65
msgid ""
"The :envvar:`CMAKE_GENERATOR` environment variable was added to specify a "
"default generator to use when :manual:`cmake(1)` is run without a ``-G`` "
"option.  Additionally, environment variables :envvar:"
"`CMAKE_GENERATOR_PLATFORM`, :envvar:`CMAKE_GENERATOR_TOOLSET`, and :envvar:"
"`CMAKE_GENERATOR_INSTANCE` were created to configure the generator."
msgstr ""

#: ../../../release/3.15.rst:72
msgid ""
"The :manual:`cmake(1)` ``--build`` tool ``--target`` parameter gained "
"support for multiple targets, e.g. ``cmake --build . --target Library1 "
"Library2``. It now also has a short form ``-t`` alias, e.g. ``cmake --"
"build . -t Library1 Library2``."
msgstr ""

#: ../../../release/3.15.rst:77
msgid ""
"The :manual:`cmake(1)` command gained a new ``--install`` option. This may "
"be used after building a project to run installation without using the "
"generated build system or the native build tool."
msgstr ""

#: ../../../release/3.15.rst:81
msgid "The :manual:`cmake(1)` command learned a new CLI option ``--loglevel``."
msgstr ""

#: ../../../release/3.15.rst:83
msgid ""
"The :manual:`cmake(1)` ``-E remove_directory`` command-line tool learned to "
"support removing multiple directories."
msgstr ""

#: ../../../release/3.15.rst:86
msgid "The :manual:`cmake(1)` ``-E tar`` tool has been improved:"
msgstr ""

#: ../../../release/3.15.rst:88
msgid ""
"It now continues adding files to an archive even if some of the files are "
"not readable.  This behavior is more consistent with the classic ``tar`` "
"tool."
msgstr ""

#: ../../../release/3.15.rst:92
msgid ""
"It now parses all flags, and if an invalid flag was provided, a warning is "
"issued."
msgstr ""

#: ../../../release/3.15.rst:95
msgid ""
"It now displays an error if no action flag was specified, along with a list "
"of possible actions: ``t`` (list), ``c`` (create) or ``x`` (extract)."
msgstr ""

#: ../../../release/3.15.rst:98
msgid ""
"It now supports extracting (``-x``) or listing (``-t``) only specific files "
"or directories."
msgstr ""

#: ../../../release/3.15.rst:101
msgid ""
"It now supports Zstandard compression with a ``--zstd`` option. Zstandard "
"was designed to give a compression ratio comparable to that of the DEFLATE "
"(zip) algorithm, but faster, especially for decompression."
msgstr ""

#: ../../../release/3.15.rst:106
msgid "Commands"
msgstr ""

#: ../../../release/3.15.rst:108
msgid ""
"The :command:`add_custom_command` and :command:`add_custom_target` commands "
"gained a new ``JOB_POOL`` option that works with the :generator:`Ninja` "
"generator to set the pool variable on the build statement."
msgstr ""

#: ../../../release/3.15.rst:112
msgid ""
"The :command:`add_library` command ``ALIAS`` option learned to support "
"import libraries of the ``UNKNOWN`` type."
msgstr ""

#: ../../../release/3.15.rst:115
msgid ""
"The :command:`cmake_parse_arguments` command gained an additional "
"``<prefix>_KEYWORDS_MISSING_VALUES`` output variable to report keyword "
"arguments that were given by the caller with no values."
msgstr ""

#: ../../../release/3.15.rst:119
msgid ""
"The :command:`execute_process` command gained a ``COMMAND_ECHO`` option and "
"supporting :variable:`CMAKE_EXECUTE_PROCESS_COMMAND_ECHO` variable to enable "
"echoing of the command-line string before execution."
msgstr ""

#: ../../../release/3.15.rst:123
msgid ""
"The :command:`file(INSTALL)` command learned a new argument, "
"``FOLLOW_SYMLINK_CHAIN``, which can be used to recursively resolve and "
"install symlinks."
msgstr ""

#: ../../../release/3.15.rst:127
msgid ""
":command:`list` learned new sub-commands: ``PREPEND``, ``POP_FRONT`` and "
"``POP_BACK``."
msgstr ""

#: ../../../release/3.15.rst:130
msgid ""
"The :command:`message` command learned new types: ``NOTICE``, ``VERBOSE``, "
"``DEBUG`` and ``TRACE``."
msgstr ""

#: ../../../release/3.15.rst:133
msgid "The :command:`string` learned a new sub-command ``REPEAT``."
msgstr ""

#: ../../../release/3.15.rst:136
msgid "Variables"
msgstr ""

#: ../../../release/3.15.rst:138
msgid ""
"The :variable:`CMAKE_CROSSCOMPILING_EMULATOR` variable and corresponding :"
"prop_tgt:`CROSSCOMPILING_EMULATOR` target property learned to support "
"arguments to the emulator."
msgstr ""

#: ../../../release/3.15.rst:142
msgid ""
"The :variable:`CMAKE_FIND_PACKAGE_PREFER_CONFIG` variable was added to tell :"
"command:`find_package` calls to look for a package configuration file first "
"even if a find module is available."
msgstr ""

#: ../../../release/3.15.rst:146
msgid ""
"The :variable:`CMAKE_FRAMEWORK` variable was added to initialize the :"
"prop_tgt:`FRAMEWORK` property on all targets."
msgstr ""

#: ../../../release/3.15.rst:149
msgid ""
"The :variable:`CMAKE_VS_JUST_MY_CODE_DEBUGGING` variable and :prop_tgt:"
"`VS_JUST_MY_CODE_DEBUGGING` target property were added to enable the Just My "
"Code feature of the Visual Studio Debugger when compiling with MSVC cl 19.05 "
"and higher."
msgstr ""

#: ../../../release/3.15.rst:154
msgid ""
"The :variable:`CMAKE_MSVC_RUNTIME_LIBRARY` variable and :prop_tgt:"
"`MSVC_RUNTIME_LIBRARY` target property were introduced to select the runtime "
"library used by compilers targeting the MSVC ABI. See policy :policy:"
"`CMP0091`."
msgstr ""

#: ../../../release/3.15.rst:159
msgid ""
"The :variable:`CMAKE_PROJECT_INCLUDE` and :variable:"
"`CMAKE_PROJECT_INCLUDE_BEFORE` variables were added to allow injection of "
"custom code at the sites of :command:`project` calls without knowing the "
"project name a priori."
msgstr ""

#: ../../../release/3.15.rst:165
msgid "Properties"
msgstr ""

#: ../../../release/3.15.rst:167
msgid ""
"The :prop_tgt:`ADDITIONAL_CLEAN_FILES` target property and :prop_dir:"
"`ADDITIONAL_CLEAN_FILES` directory property were added. They allow to "
"register additional files that should be removed during the clean stage."
msgstr ""

#: ../../../release/3.15.rst:172
msgid ""
"The :prop_tgt:`PUBLIC_HEADER` and :prop_tgt:`PRIVATE_HEADER` properties may "
"now be set on :ref:`Interface Libraries`. The headers specified by those "
"properties can be installed using the :command:`install(TARGETS)` command by "
"passing the ``PUBLIC_HEADER`` and ``PRIVATE_HEADER`` arguments respectively."
msgstr ""

#: ../../../release/3.15.rst:177
msgid ""
"The :prop_tgt:`VS_PACKAGE_REFERENCES` target property was added to tell :ref:"
"`Visual Studio Generators` to add references to ``nuget`` packages."
msgstr ""

#: ../../../release/3.15.rst:181
msgid ""
"The :prop_tgt:`VS_PROJECT_IMPORT` target property was added to allow managed "
"Visual Studio project files to import external ``.props`` files."
msgstr ""

#: ../../../release/3.15.rst:184
msgid ""
"The :prop_tgt:`VS_NO_SOLUTION_DEPLOY` target property was added to tell :ref:"
"`Visual Studio Generators` whether to deploy an artifact to the WinCE or "
"Windows Phone target device."
msgstr ""

#: ../../../release/3.15.rst:189
msgid "Modules"
msgstr ""

#: ../../../release/3.15.rst:191
msgid ""
"The :module:`FindBoost` module was reworked to expose a more consistent user "
"experience between its \"Config\" and \"Module\" modes and with other find "
"modules in general."
msgstr ""

#: ../../../release/3.15.rst:195
msgid ""
"A new imported target ``Boost::headers`` is now defined (same as ``Boost::"
"boost``)."
msgstr ""

#: ../../../release/3.15.rst:198
msgid ""
"New output variables ``Boost_VERSION_MACRO``, ``Boost_VERSION_MAJOR``, "
"``Boost_VERSION_MINOR``, ``Boost_VERSION_PATCH``, and "
"``Boost_VERSION_COUNT`` were added."
msgstr ""

#: ../../../release/3.15.rst:203
msgid ""
"The ``QUIET`` argument passed to :command:`find_package` is no longer "
"ignored in config mode.  Note that the CMake package shipped with Boost "
"``1.70.0`` ignores the ``QUIET`` argument passed to :command:"
"`find_package`.  This is fixed in the next Boost release."
msgstr ""

#: ../../../release/3.15.rst:208
msgid "The input switch ``Boost_DETAILED_FAILURE_MSG`` was removed."
msgstr ""

#: ../../../release/3.15.rst:210
msgid ""
"``Boost_VERSION`` now reports the version in ``x.y.z`` format in module "
"mode.  See policy :policy:`CMP0093`."
msgstr ""

#: ../../../release/3.15.rst:213
msgid "The :module:`FindCups` module now provides imported targets."
msgstr ""

#: ../../../release/3.15.rst:215
msgid ""
"The :module:`FindEnvModules` module was added to use Lua- and TCL-based "
"environment modules in :ref:`CTest Scripts <CTest Script>`."
msgstr ""

#: ../../../release/3.15.rst:218
msgid ""
"The :module:`FindGLEW` module now provides an interface more consistent with "
"what upstream GLEW provides in its own CMake package files."
msgstr ""

#: ../../../release/3.15.rst:221
msgid ""
"The :module:`FindPkgConfig` now populates :prop_tgt:`INTERFACE_LINK_OPTIONS` "
"property of imported targets with other (non-library) linker flags."
msgstr ""

#: ../../../release/3.15.rst:224
msgid ""
"The :module:`FindPostgreSQL` module learned to find debug and release "
"variants separately."
msgstr ""

#: ../../../release/3.15.rst:227
msgid ""
"Modules :module:`FindPython3`, :module:`FindPython2` and :module:"
"`FindPython` gained additional lookup strategies and controls, and a new "
"default. See policy :policy:`CMP0094`."
msgstr ""

#: ../../../release/3.15.rst:231
msgid ""
"Modules :module:`FindPython`, :module:`FindPython2` and :module:"
"`FindPython3` gain a new target (respectively ``Python::Module``, ``Python2::"
"Module`` and ``Python3::Module``) which can be used to develop Python "
"modules."
msgstr ""

#: ../../../release/3.15.rst:235
msgid ""
"Modules :module:`FindPython3`, :module:`FindPython2` and :module:"
"`FindPython` gain capability to control how virtual environments are handled."
msgstr ""

#: ../../../release/3.15.rst:238
msgid ""
"The :module:`UseSWIG` module learned to manage alternate library names by "
"passing ``-interface <library_name>`` for ``python`` language or ``-"
"dllimport <library_name>`` for ``CSharp`` language to the ``SWIG`` compiler."
msgstr ""

#: ../../../release/3.15.rst:244
msgid "Generator Expressions"
msgstr ""

#: ../../../release/3.15.rst:246
msgid ""
"The :manual:`generator expressions <cmake-generator-expressions(7)>` "
"``C_COMPILER_ID``, ``CXX_COMPILER_ID``, ``CUDA_COMPILER_ID``, "
"``Fortran_COMPILER_ID``, ``COMPILE_LANGUAGE``, ``COMPILE_LANG_AND_ID``, and "
"``PLATFORM_ID`` learned to support matching one value from a comma-separated "
"list."
msgstr ""

#: ../../../release/3.15.rst:252
msgid ""
"The ``$<CUDA_COMPILER_ID:...>`` and ``$<CUDA_COMPILER_VERSION:...>`` :manual:"
"`generator expressions <cmake-generator-expressions(7)>` were added."
msgstr ""

#: ../../../release/3.15.rst:255
msgid ""
"The ``$<COMPILE_LANG_AND_ID:...>`` generator expression was introduced to "
"allow specification of compile options for target files based on the :"
"variable:`CMAKE_<LANG>_COMPILER_ID` and :prop_sf:`LANGUAGE` of each source "
"file."
msgstr ""

#: ../../../release/3.15.rst:260
msgid ""
"A ``$<FILTER:list,INCLUDE|EXCLUDE,regex>`` :manual:`generator expression "
"<cmake-generator-expressions(7)>` has been added."
msgstr ""

#: ../../../release/3.15.rst:264
msgid ""
"A ``$<REMOVE_DUPLICATES:list>`` :manual:`generator expression <cmake-"
"generator-expressions(7)>` has been added."
msgstr ""

#: ../../../release/3.15.rst:268
msgid ""
"The ``$<SHELL_PATH:...>`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` gained support for a list of paths."
msgstr ""

#: ../../../release/3.15.rst:271
msgid ""
"New ``$<TARGET_FILE*>`` :manual:`generator expressions <cmake-generator-"
"expressions(7)>` were added to retrieve the prefix, base name, and suffix of "
"the file names of various artifacts:"
msgstr ""

#: ../../../release/3.15.rst:275
msgid "``$<TARGET_FILE_PREFIX:...>``"
msgstr ""

#: ../../../release/3.15.rst:276
msgid "``$<TARGET_FILE_BASE_NAME:...>``"
msgstr ""

#: ../../../release/3.15.rst:277
msgid "``$<TARGET_FILE_SUFFIX:...>``"
msgstr ""

#: ../../../release/3.15.rst:278
msgid "``$<TARGET_LINKER_FILE_PREFIX:...>``"
msgstr ""

#: ../../../release/3.15.rst:279
msgid "``$<TARGET_LINKER_FILE_BASE_NAME:...>``"
msgstr ""

#: ../../../release/3.15.rst:280
msgid "``$<TARGET_LINKER_FILE_SUFFIX:...>``"
msgstr ""

#: ../../../release/3.15.rst:281
msgid "``$<TARGET_PDB_FILE_BASE_NAME:...>``"
msgstr ""

#: ../../../release/3.15.rst:283
msgid ""
"The ``$<TARGET_OBJECTS:...>`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` is now supported on ``SHARED``, ``STATIC``, ``MODULE`` "
"libraries and executables."
msgstr ""

#: ../../../release/3.15.rst:288
msgid "CTest"
msgstr ""

#: ../../../release/3.15.rst:290
msgid ""
"The :command:`ctest_submit` command learned a new option: ``BUILD_ID``. This "
"can be used to store the ID assigned to this build by CDash to a variable."
msgstr ""

#: ../../../release/3.15.rst:294
msgid ""
"The :command:`ctest_update` command learned to honor a new variable: :"
"variable:`CTEST_UPDATE_VERSION_OVERRIDE`. This can be used to specify the "
"current version of your source tree rather than using the update command to "
"discover the current version that is checked out."
msgstr ""

#: ../../../release/3.15.rst:300
msgid "CPack"
msgstr ""

#: ../../../release/3.15.rst:302
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained a new :variable:"
"`CPACK_IFW_PACKAGE_STYLE_SHEET` variable to customize the installer "
"stylesheet."
msgstr ""

#: ../../../release/3.15.rst:307
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.15.rst:309
msgid ""
"The :manual:`cmake-server(7)` mode has been deprecated and will be removed "
"from a future version of CMake.  Please port clients to use the :manual:"
"`cmake-file-api(7)` instead."
msgstr ""

#: ../../../release/3.15.rst:313
msgid ""
"The :prop_dir:`ADDITIONAL_MAKE_CLEAN_FILES` directory property is now "
"deprecated.  Use the :prop_dir:`ADDITIONAL_CLEAN_FILES` directory property "
"instead."
msgstr ""

#: ../../../release/3.15.rst:317
msgid ""
"The variable :variable:`CMAKE_AUTOMOC_RELAXED_MODE` is considered "
"deprecated.  Support still exists but will be removed in future versions."
msgstr ""

#: ../../../release/3.15.rst:320
msgid ""
"The :command:`export(PACKAGE)` command now does nothing unless enabled via :"
"variable:`CMAKE_EXPORT_PACKAGE_REGISTRY`. See policy :policy:`CMP0090`."
msgstr ""

#: ../../../release/3.15.rst:324
msgid "The :generator:`Xcode` generator now requires at least Xcode 5."
msgstr ""

#: ../../../release/3.15.rst:326
msgid ""
"An explicit deprecation diagnostic was added for policy ``CMP0066`` "
"(``CMP0065`` and below were already deprecated). The :manual:`cmake-"
"policies(7)` manual explains that the OLD behaviors of all policies are "
"deprecated and that projects should port to the NEW behaviors."
msgstr ""

#: ../../../release/3.15.rst:333
msgid "Other Changes"
msgstr ""

#: ../../../release/3.15.rst:335
msgid ""
"If a feature specified by :command:`target_compile_features` is available in "
"the compiler's default standard level, CMake 3.14 and below incorrectly "
"added unnecessary ``-std=`` flags that could lower the standard level. This "
"bug has been fixed in CMake 3.15.  This behavior change may expose bugs in "
"existing projects that were relying on undocumented implementation details.  "
"Specifying compile features only ensures that the compiler runs in a mode "
"that has those features, not that any specific standard level is used or "
"explicit ``-std=`` flag passed."
msgstr ""

#: ../../../release/3.15.rst:344
msgid ""
"CMake learned how to compile C++14 with the IBM AIX XL compiler and the "
"SunPro compiler and to compile C++20 with the AppleClang compiler."
msgstr ""

#: ../../../release/3.15.rst:347
msgid ""
"With MSVC-like compilers the value of :variable:`CMAKE_<LANG>_FLAGS` no "
"longer contains warning flags like ``/W3`` by default. See policy :policy:"
"`CMP0092`."
msgstr ""

#: ../../../release/3.15.rst:351
msgid ""
"IBM Clang-based XL compilers that define ``__ibmxl__`` now use the compiler "
"id ``XLClang`` instead of ``XL``.  See policy :policy:`CMP0089`."
msgstr ""

#: ../../../release/3.15.rst:354
msgid ""
"The :command:`file(REMOVE)` and :command:`file(REMOVE_RECURSE)` commands "
"were changed to ignore empty arguments with a warning instead of treating "
"them as a relative path and removing the contents of the current directory."
msgstr ""

#: ../../../release/3.15.rst:359
msgid "Updates"
msgstr ""

#: ../../../release/3.15.rst:361
msgid "Changes made since CMake 3.15.0 include the following."
msgstr ""

#: ../../../release/3.15.rst:364
msgid "3.15.1"
msgstr ""

#: ../../../release/3.15.rst:366
msgid ""
"In CMake 3.15.0 support for the GNU-like ``Clang`` compiler targeting the "
"MSVC ABI implemented :variable:`CMAKE_CXX_STANDARD` values 98 and 11 using "
"the corresponding ``-std=`` flags.  However, these modes do not work with "
"the MSVC standard library.  Therefore CMake 3.15.1 passes C++14 standard "
"flags even for C++98 and C++11.  This is consistent with MSVC itself which "
"always runs in a mode aware of C++14."
msgstr ""

#: ../../../release/3.15.rst:373
msgid "Preliminary Swift support added in 3.15.0 has been updated."
msgstr ""

#: ../../../release/3.15.rst:376
msgid "3.15.2"
msgstr ""

#: ../../../release/3.15.rst:378
msgid ""
"In CMake 3.15.0 and 3.15.1 the :variable:`CMAKE_FIND_PACKAGE_PREFER_CONFIG` "
"variable caused the :command:`find_package` command to fail on a missing "
"package even without the ``REQUIRED`` option.  This has been fixed."
msgstr ""

#: ../../../release/3.15.rst:383
msgid "3.15.3"
msgstr ""

#: ../../../release/3.15.rst:385
msgid ""
"``CrayPrgEnv`` compiler wrapper support has been updated for the 19.06 "
"release of the Cray Programming Environment for which the default linking "
"mode on XC Cray systems is now dynamic instead of static."
msgstr ""

#: ../../../release/3.15.rst:390
msgid "3.15.4"
msgstr ""

#: ../../../release/3.15.rst:392
msgid ""
"In CMake 3.15.0 through 3.15.3, the :prop_dir:`EXCLUDE_FROM_ALL` directory "
"property was regressed from pre-3.14 behavior and caused targets within the "
"directory to be excluded even from its own \"all\". This has been fixed. The "
"bug also existed in 3.14.0 through 3.14.6 and is fixed in 3.14.7."
msgstr ""
