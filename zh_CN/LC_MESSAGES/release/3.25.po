# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.27\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.25.rst:2
msgid "CMake 3.25 Release Notes"
msgstr ""

#: ../../../release/3.25.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.25.rst:8
msgid "Changes made since CMake 3.24 include the following."
msgstr ""

#: ../../../release/3.25.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.25.rst:14
msgid "Presets"
msgstr ""

#: ../../../release/3.25.rst:16
msgid "The :manual:`cmake-presets(7)` schema version has been bumped to ``6``."
msgstr ""

#: ../../../release/3.25.rst:18
msgid ""
"The :manual:`cmake-presets(7)` format now supports a ``packagePresets`` "
"field to specify presets for :option:`cpack --preset`."
msgstr ""

#: ../../../release/3.25.rst:21
msgid ""
"The :manual:`cmake-presets(7)` format now supports a ``workflowPresets`` "
"field to specify presets for :option:`cmake --workflow`."
msgstr ""

#: ../../../release/3.25.rst:24
msgid ""
"The :manual:`cmake-presets(7)` format now supports an ``outputJUnitFile`` "
"field to specify JUnit output in test presets."
msgstr ""

#: ../../../release/3.25.rst:28
msgid "Languages"
msgstr ""

#: ../../../release/3.25.rst:30
msgid ""
"The :manual:`Compile Features <cmake-compile-features(7)>` functionality is "
"now aware of C++26, and defines a ``cxx_std_26`` meta-feature. C++26 "
"compiler modes may also be specified via the :prop_tgt:`CXX_STANDARD`, :"
"prop_tgt:`CUDA_STANDARD`, :prop_tgt:`HIP_STANDARD`, or :prop_tgt:"
"`OBJCXX_STANDARD` target properties."
msgstr ""

#: ../../../release/3.25.rst:36
msgid ""
"``CUDA`` language support now includes device link-time optimization when "
"using ``nvcc``.  The :variable:`CMAKE_INTERPROCEDURAL_OPTIMIZATION` variable "
"and the associated :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target property "
"will activate device LTO."
msgstr ""

#: ../../../release/3.25.rst:42
msgid "Command-Line"
msgstr ""

#: ../../../release/3.25.rst:44
msgid ""
"A :option:`cmake --workflow --preset <cmake--workflow --preset>` mode was "
"added to drive sequences of configure, build, test, and package operations "
"through a single command."
msgstr ""

#: ../../../release/3.25.rst:48
msgid ""
"The :option:`cmake -E capabilities <cmake-E capabilities>` command gained a "
"new ``tls`` field that tells whether or not TLS is enabled."
msgstr ""

#: ../../../release/3.25.rst:51
msgid ""
"The :option:`cmake -E env <cmake-E env>` command-line tool gained a ``--"
"modify`` flag to support :prop_test:`ENVIRONMENT_MODIFICATION` operations."
msgstr ""

#: ../../../release/3.25.rst:55
msgid ""
"The :option:`cmake --debug-trycompile` option now prints log messages "
"reporting the directory in which each try-compile check is done."
msgstr ""

#: ../../../release/3.25.rst:59
msgid "Compilers"
msgstr ""

#: ../../../release/3.25.rst:61
msgid ""
"Support for the `Tasking compiler toolsets`_ (SmartCode, TriCore, "
"Standalone: ARM, MCS, 8051) was added with compiler id ``Tasking``. See the :"
"variable:`CMAKE_TASKING_TOOLSET` variable."
msgstr ""

#: ../../../release/3.25.rst:68
msgid "Commands"
msgstr ""

#: ../../../release/3.25.rst:70
msgid ""
"The :command:`add_subdirectory` command gained a ``SYSTEM`` option to enable "
"the :prop_dir:`SYSTEM` directory property in the subdirectory."
msgstr ""

#: ../../../release/3.25.rst:73
msgid ""
"The :command:`block` and :command:`endblock` commands were added to manage "
"specific scopes (policy or variable) for a contained block of commands."
msgstr ""

#: ../../../release/3.25.rst:76
msgid ""
"The :command:`cmake_language` command gained a new ``GET_MESSAGE_LOG_LEVEL`` "
"sub-command.  It can be used to query the current message logging level."
msgstr ""

#: ../../../release/3.25.rst:80
msgid ""
"The :command:`find_file`, :command:`find_path`, :command:`find_library`, "
"and :command:`find_program` commands gained a ``VALIDATOR`` option to "
"specify a function to be called for each candidate item to validate it."
msgstr ""

#: ../../../release/3.25.rst:84
msgid ""
"The :command:`find_package` command now considers paths of the form "
"``<prefix>/<name>*/(cmake|CMake)/<name>*/`` when searching for package "
"configuration files."
msgstr ""

#: ../../../release/3.25.rst:88
msgid ""
"The :command:`return` command gained a ``PROPAGATE`` option to propagate "
"variables to the scope to which control returns. See policy :policy:"
"`CMP0140`."
msgstr ""

#: ../../../release/3.25.rst:92
msgid ""
"The :command:`try_compile` and :command:`try_run` commands gained new "
"signatures that more consistently use keyword dispatch and do not require a "
"binary directory to be specified.  Additionally, these signatures use a "
"unique directory for each invocation, which allows multiple outputs to be "
"preserved when using :option:`cmake --debug-trycompile`."
msgstr ""

#: ../../../release/3.25.rst:98
msgid ""
"The :command:`try_compile` and :command:`try_run` commands gained the option "
"``NO_CACHE`` to store results in normal variables."
msgstr ""

#: ../../../release/3.25.rst:101
msgid ""
"The :command:`try_run` command gained ``RUN_OUTPUT_STDOUT_VARIABLE`` and "
"``RUN_OUTPUT_STDERR_VARIABLE`` options to capture stdout and stderr "
"separately from the output of the compiled program."
msgstr ""

#: ../../../release/3.25.rst:106
msgid "Variables"
msgstr ""

#: ../../../release/3.25.rst:108
msgid ""
"The :variable:`BSD` and :variable:`CMAKE_HOST_BSD` variables are now set to "
"a string value when the target or host system is BSD, respectively."
msgstr ""

#: ../../../release/3.25.rst:111
msgid ""
"The :variable:`LINUX` and :variable:`CMAKE_HOST_LINUX` variables are now set "
"to true when the target or host system is Linux, respectively."
msgstr ""

#: ../../../release/3.25.rst:114
msgid ""
"The :variable:`CMAKE_MSVC_DEBUG_INFORMATION_FORMAT` variable and :prop_tgt:"
"`MSVC_DEBUG_INFORMATION_FORMAT` target property were introduced to select "
"the debug information format for compilers targeting the MSVC ABI. See "
"policy :policy:`CMP0141`."
msgstr ""

#: ../../../release/3.25.rst:119
msgid ""
"The :variable:`CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION` variable and "
"corresponding :prop_tgt:`XCODE_SCHEME_ENABLE_GPU_API_VALIDATION` target "
"property were added to tell the :generator:`Xcode` generator what to put in "
"the scheme's ``Metal: API Validation`` setting."
msgstr ""

#: ../../../release/3.25.rst:124
msgid ""
"The :variable:`CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION` variable and "
"corresponding :prop_tgt:`XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION` target "
"property were added to tell the :generator:`Xcode` generator what to put in "
"the scheme's ``Metal: Shader Validation`` setting."
msgstr ""

#: ../../../release/3.25.rst:129
msgid ""
"The :variable:`CMAKE_XCODE_SCHEME_LAUNCH_MODE` variable and corresponding :"
"prop_tgt:`XCODE_SCHEME_LAUNCH_MODE` target property were added to tell the :"
"generator:`Xcode` generator what to put in the scheme's \"Launch\" mode "
"setting."
msgstr ""

#: ../../../release/3.25.rst:134
msgid ""
"The :variable:`CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION` variable and "
"corresponding :prop_tgt:`XCODE_SCHEME_LAUNCH_CONFIGURATION` target property "
"were added to tell the :generator:`Xcode` generator what configuration to "
"put in the scheme's Launch action."
msgstr ""

#: ../../../release/3.25.rst:140
msgid "Properties"
msgstr ""

#: ../../../release/3.25.rst:142
msgid ""
"The :prop_tgt:`<LANG>_COMPILER_LAUNCHER` target property now supports :"
"manual:`generator expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.25.rst:145
msgid ""
"The :prop_tgt:`EXPORT_NO_SYSTEM` target property was added to specify that :"
"command:`install(EXPORT)` and :command:`export` commands will generate na "
"imported target with :prop_tgt:`SYSTEM` property ``OFF``."
msgstr ""

#: ../../../release/3.25.rst:150
msgid ""
"The :prop_tgt:`SYSTEM` target property was added to specify whether a target "
"should be treated as a system library (i.e. its include directories are "
"automatically ``SYSTEM`` when compiling consumers).  If not set, the default "
"is the previous behavior: on for imported targets and off for other targets."
msgstr ""

#: ../../../release/3.25.rst:156
msgid ""
"The :prop_dir:`SYSTEM` directory property was added to initialize the :"
"prop_tgt:`SYSTEM` target property for targets created in that directory."
msgstr ""

#: ../../../release/3.25.rst:160
msgid "Modules"
msgstr ""

#: ../../../release/3.25.rst:162
msgid ""
"The :module:`FetchContent` module's :command:`FetchContent_Declare` command "
"gained a ``SYSTEM`` option which sets the :prop_dir:`SYSTEM` directory "
"property on subdirectories created by :command:`FetchContent_MakeAvailable`."
msgstr ""

#: ../../../release/3.25.rst:167
msgid ""
"The :module:`FindCUDAToolkit` module now provides a target for :ref:`nvtx3 "
"<cuda_toolkit_nvtx3>` for CUDA 10.0+, which supersedes :ref:`nvToolsExt "
"<cuda_toolkit_nvToolsExt>`. A deprecation warning is emitted when using "
"``nvToolsExt`` if the project requires CMake 3.25 and CUDA 10.0+ is used."
msgstr ""

#: ../../../release/3.25.rst:173
msgid "The :module:`FindDoxygen` module's version handling has been improved:"
msgstr ""

#: ../../../release/3.25.rst:175
msgid ""
"Multiple candidate installations will now be considered, if needed, to "
"satisfy version constraints.  Previously, only the first one encountered "
"would be considered."
msgstr ""

#: ../../../release/3.25.rst:179
msgid "Version ranges are supported."
msgstr ""

#: ../../../release/3.25.rst:181
msgid ""
"Variations in the version format reported by Doxygen are now tolerated (e.g. "
"a trailing git commit hash)."
msgstr ""

#: ../../../release/3.25.rst:184
msgid "The :module:`FindOpenAL` module now provides an imported target."
msgstr ""

#: ../../../release/3.25.rst:186
msgid "The :module:`FindOpenSP` module was added to find the OpenSP library."
msgstr ""

#: ../../../release/3.25.rst:188
msgid "The :module:`FindVulkan` module gained support for new components:"
msgstr ""

#: ../../../release/3.25.rst:190
msgid "``dxc``"
msgstr ""

#: ../../../release/3.25.rst:191
msgid "DirectX Shader Compiler."
msgstr ""

#: ../../../release/3.25.rst:193
msgid "``volk``"
msgstr ""

#: ../../../release/3.25.rst:194
msgid "Volk open-source vulkan meta-loader."
msgstr ""

#: ../../../release/3.25.rst:197
msgid "CPack"
msgstr ""

#: ../../../release/3.25.rst:199
msgid ""
"The :cpack_gen:`CPack Archive Generator` gained a new :variable:"
"`CPACK_ARCHIVE_FILE_EXTENSION` variable to control the package file name "
"extension."
msgstr ""

#: ../../../release/3.25.rst:203
msgid ""
"The :cpack_gen:`CPack NSIS Generator` gained two new variables :variable:"
"`CPACK_NSIS_EXECUTABLE_PRE_ARGUMENTS` and :variable:"
"`CPACK_NSIS_EXECUTABLE_POST_ARGUMENTS` to provide arguments to the nsis "
"executable invocation."
msgstr ""

#: ../../../release/3.25.rst:208
msgid ""
"The :module:`CPack` module gained the :variable:`CPACK_READELF_EXECUTABLE`, :"
"variable:`CPACK_OBJCOPY_EXECUTABLE`, and :variable:"
"`CPACK_OBJDUMP_EXECUTABLE` variables to control the locations of binutils "
"used by :manual:`cpack(1)`."
msgstr ""

#: ../../../release/3.25.rst:214
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.25.rst:216
msgid ""
"The :prop_tgt:`IMPORTED_NO_SYSTEM` target property has been deprecated in "
"favor of :prop_tgt:`SYSTEM` and :prop_tgt:`EXPORT_NO_SYSTEM`."
msgstr ""

#: ../../../release/3.25.rst:219
msgid "The :generator:`Visual Studio 10 2010` generator has been removed."
msgstr ""

#: ../../../release/3.25.rst:221
msgid ""
"The :generator:`Visual Studio 11 2012` generator is now deprecated and will "
"be removed in a future version of CMake."
msgstr ""

#: ../../../release/3.25.rst:225
msgid "Other Changes"
msgstr ""

#: ../../../release/3.25.rst:227
msgid ""
"The :envvar:`SSL_CERT_FILE` and :envvar:`SSL_CERT_DIR` environment variables "
"can now be used to override where to find certificate authorities for TLS/"
"SSL operations."
msgstr ""

#: ../../../release/3.25.rst:231
msgid ""
"If :prop_tgt:`<LANG>_CLANG_TIDY` includes a ``-p`` argument, the full "
"compiler command line is no longer appended after ``--``."
msgstr ""

#: ../../../release/3.25.rst:234
msgid ""
"The :generator:`Xcode` generator no longer adds the per-config suffix "
"``$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)`` to library search paths. See "
"policy :policy:`CMP0142`."
msgstr ""

#: ../../../release/3.25.rst:239
msgid "Updates"
msgstr ""

#: ../../../release/3.25.rst:241
msgid "Changes made since CMake 3.25.0 include the following."
msgstr ""

#: ../../../release/3.25.rst:244
msgid "3.25.1"
msgstr ""

#: ../../../release/3.25.rst:246
msgid ""
"On Windows, when targeting the MSVC ABI, the :command:`find_library` command "
"no longer accepts ``.a`` file names.  This behavior was added in CMake "
"3.25.0, but has been reverted due finding GNU-ABI libraries in cases we did "
"not previously."
msgstr ""

#: ../../../release/3.25.rst:252
msgid "3.25.2"
msgstr ""

#: ../../../release/3.25.rst:254
msgid ""
"CUDA language level 20 (corresponding to C++20) is now supported with NVCC "
"12.0 and above."
msgstr ""

#: ../../../release/3.25.rst:257
msgid ""
"On Windows, the ``icpx`` compiler now provided by Intel oneAPI 2023.0 and "
"above is no longer selected because its GNU-like command-line is not yet "
"supported by CMake."
msgstr ""

#: ../../../release/3.25.rst:262
msgid "3.25.3"
msgstr ""

#: ../../../release/3.25.rst:264
msgid ""
"This version made no changes to documented features or interfaces. Some "
"implementation updates were made to support ecosystem changes and/or fix "
"regressions."
msgstr ""
