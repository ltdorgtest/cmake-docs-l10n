# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.23.rst:2
msgid "CMake 3.23 Release Notes"
msgstr ""

#: ../../../release/3.23.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.23.rst:8
msgid "Changes made since CMake 3.22 include the following."
msgstr ""

#: ../../../release/3.23.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.23.rst:14
msgid "Presets"
msgstr ""

#: ../../../release/3.23.rst:16
msgid ":manual:`cmake-presets(7)` files now support schema version ``4``."
msgstr ""

#: ../../../release/3.23.rst:18
msgid ""
":manual:`cmake-presets(7)` files now have an optional ``include`` field, "
"which allows the files to include other files."
msgstr ""

#: ../../../release/3.23.rst:21
msgid ""
":manual:`cmake-presets(7)` files now support a ``${fileDir}`` macro, which "
"contains the directory containing the preset file."
msgstr ""

#: ../../../release/3.23.rst:24
msgid ""
":manual:`cmake-presets(7)` gained support for specifying the "
"``resolvePackageReferences`` command line option in a build preset to "
"control restoration behavior of package references from external package "
"managers. Currently this is only supported by the Visual Studio generator to "
"support restoring packages from NuGet. Other generators ignore this option."
msgstr ""

#: ../../../release/3.23.rst:31
msgid "Generators"
msgstr ""

#: ../../../release/3.23.rst:33
msgid ""
"The :ref:`Visual Studio Generators` for VS 2019 and above learned to "
"support .NET SDK-style project files (``.csproj``) for C# projects. See the :"
"prop_tgt:`DOTNET_SDK` target property and corresponding :variable:"
"`CMAKE_DOTNET_SDK` variable.  :command:`add_custom_command` is not yet "
"supported in .NET SDK-style projects."
msgstr ""

#: ../../../release/3.23.rst:39
msgid ""
"The :ref:`Visual Studio Generators` for VS 2017 and above learned to use "
"portable instances of Visual Studio not known to the VS installer. See the :"
"variable:`CMAKE_GENERATOR_INSTANCE` variable."
msgstr ""

#: ../../../release/3.23.rst:44
msgid "Command-Line"
msgstr ""

#: ../../../release/3.23.rst:46
msgid ""
"The :manual:`cmake(1)` ``--build`` command, when used with :ref:`Visual "
"Studio Generators` on projects that set the :prop_tgt:"
"`VS_PACKAGE_REFERENCES` target property, now automatically restores package "
"references from NuGet.  The cache variable :variable:"
"`CMAKE_VS_NUGET_PACKAGE_RESTORE` may be set to toggle this behavior in a "
"build tree.  Use the ``--resolve-package-references=<on|off|only>`` command-"
"line option to control the behavior on one invocation."
msgstr ""

#: ../../../release/3.23.rst:54
msgid ""
"The :manual:`cmake(1)` command line tool gained a ``--debug-find-pkg=`` "
"option to enable debug messages under specific :command:`find_package` calls."
msgstr ""

#: ../../../release/3.23.rst:58
msgid ""
"The :manual:`cmake(1)` command line tool gained a ``--debug-find-var=`` "
"option to enable debug messages for ``find_*`` calls that use specific "
"result variables."
msgstr ""

#: ../../../release/3.23.rst:63
msgid "Compilers"
msgstr ""

#: ../../../release/3.23.rst:65
msgid ""
"The IBM Open XL C/C++ compiler, based on LLVM, is now supported with "
"compiler id ``IBMClang``."
msgstr ""

#: ../../../release/3.23.rst:68
msgid ""
"The MCST LCC compiler is now supported with compiler id ``LCC``. See policy :"
"policy:`CMP0129`."
msgstr ""

#: ../../../release/3.23.rst:72
msgid "File-Based API"
msgstr ""

#: ../../../release/3.23.rst:74
msgid ""
"The :manual:`cmake-file-api(7)` \"codemodel\" version 2 ``version`` field "
"has been updated to ``2.4``."
msgstr ""

#: ../../../release/3.23.rst:77
msgid ""
"The :manual:`cmake-file-api(7)` \"codemodel\" version 2 ``directory`` object "
"``installers`` field gained a new ``fileSet`` installer type."
msgstr ""

#: ../../../release/3.23.rst:81
msgid "Commands"
msgstr ""

#: ../../../release/3.23.rst:83
msgid ""
"The :command:`define_property` command gained a new "
"``INITIALIZE_FROM_VARIABLE`` option to cause a target property to be "
"initialized from a variable when a target is created."
msgstr ""

#: ../../../release/3.23.rst:87
msgid ""
"The :command:`install(TARGETS)` command gained a new ``FILE_SET`` argument, "
"which can be used to install header file sets associated with a target."
msgstr ""

#: ../../../release/3.23.rst:90
msgid ""
"The :command:`string(TIMESTAMP)` and :command:`file(TIMESTAMP)` commands now "
"support the ``%f`` specifier for microseconds."
msgstr ""

#: ../../../release/3.23.rst:93
msgid ""
"The :command:`target_sources` command gained a new ``FILE_SET`` mode, which "
"can be used to add headers as header-only source files of a target."
msgstr ""

#: ../../../release/3.23.rst:97
msgid "Variables"
msgstr ""

#: ../../../release/3.23.rst:99
msgid ""
"The :variable:`CMAKE_CUDA_ARCHITECTURES` variable and associated :prop_tgt:"
"`CUDA_ARCHITECTURES` target property now support the ``all``, and ``all-"
"major`` values for CUDA toolkit 7.0+."
msgstr ""

#: ../../../release/3.23.rst:103
msgid ""
"The :variable:`CMAKE_IGNORE_PREFIX_PATH` and :variable:"
"`CMAKE_SYSTEM_IGNORE_PREFIX_PATH` variables were added to tell the :command:"
"`find_package`, :command:`find_program`, :command:`find_library`, :command:"
"`find_path`, and :command:`find_file` commands to ignore specified prefixes."
msgstr ""

#: ../../../release/3.23.rst:109
msgid ""
"The :variable:`CMAKE_LINK_LIBRARIES_ONLY_TARGETS` variable and "
"corresponding :prop_tgt:`LINK_LIBRARIES_ONLY_TARGETS` target property were "
"added to optionally require that all link items that can be target names are "
"actually names of existing targets."
msgstr ""

#: ../../../release/3.23.rst:115
msgid "Properties"
msgstr ""

#: ../../../release/3.23.rst:117
msgid ""
"The :prop_tgt:`HEADER_SETS` and :prop_tgt:`INTERFACE_HEADER_SETS` read-only "
"target properties were added to list header sets associated with a target."
msgstr ""

#: ../../../release/3.23.rst:120
msgid ""
"The :prop_tgt:`HEADER_SET` and :prop_tgt:`HEADER_SET_<NAME>` target "
"properties were added to list files in the default header set and named "
"header sets, respectively."
msgstr ""

#: ../../../release/3.23.rst:124
msgid ""
"The :prop_tgt:`HEADER_DIRS` and :prop_tgt:`HEADER_DIRS_<NAME>` target "
"properties were added to specify the base directories of the default header "
"set and named header sets, respectively."
msgstr ""

#: ../../../release/3.23.rst:128
msgid ""
"The :prop_tgt:`IMPORTED_NO_SYSTEM` target property was added to specify that "
"an :ref:`Imported Target <Imported Targets>` should not be treated as a "
"system library (i.e. its include directories are not automatically "
"``SYSTEM``)."
msgstr ""

#: ../../../release/3.23.rst:133
msgid ""
"The :prop_tgt:`XCODE_EMBED_PLUGINS <XCODE_EMBED_<type>>` target property was "
"added to tell the :generator:`Xcode` generator what targets to put in the "
"``Embed PlugIns`` build phase."
msgstr ""

#: ../../../release/3.23.rst:137
msgid ""
"The :prop_tgt:`XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE` target property "
"and supporting :variable:`CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE` "
"variable were added to tell the :generator:`Xcode` generator to enable "
"specifying the Xcode scheme option property ``GPU Frame Capture``."
msgstr ""

#: ../../../release/3.23.rst:143
msgid "Modules"
msgstr ""

#: ../../../release/3.23.rst:145
msgid ""
"The :module:`CheckPIESupported` module now supports the ``OBJC``, "
"``OBJCXX``, ``CUDA``, and ``HIP`` languages.  It also now honors :variable:"
"`CMAKE_SYSROOT` and :variable:`CMAKE_OSX_SYSROOT`."
msgstr ""

#: ../../../release/3.23.rst:149
msgid ""
"The :module:`ExternalProject` module's :command:`ExternalProject_Add` "
"command gained support for a ``USES_TERMINAL_PATCH`` option to give the "
"patch step exclusive terminal access."
msgstr ""

#: ../../../release/3.23.rst:153
msgid ""
"The :module:`FindCUDAToolkit` module now provides a target for "
"``libcufft_static_nocallback``, if found."
msgstr ""

#: ../../../release/3.23.rst:156
msgid ""
"The :module:`FindGLUT` module now provides the ``GLUT_INCLUDE_DIRS`` result "
"variable to conform with naming conventions documented in the :manual:`cmake-"
"developer(7)` manual.  This supersedes the legacy ``GLUT_INCLUDE_DIR`` "
"variable."
msgstr ""

#: ../../../release/3.23.rst:161
msgid ""
"The :module:`FindGTest` module now provides a target for GMock, if found."
msgstr ""

#: ../../../release/3.23.rst:163
msgid ""
"The :module:`FindVulkan` module now provides a ``Vulkan_VERSION`` result "
"variable reporting the version number."
msgstr ""

#: ../../../release/3.23.rst:167
msgid "CTest"
msgstr ""

#: ../../../release/3.23.rst:169
msgid ""
":manual:`ctest(1)` gained a new :variable:`CTEST_SUBMIT_INACTIVITY_TIMEOUT` "
"variable, which can be used to specify a timeout for submission inactivity."
msgstr ""

#: ../../../release/3.23.rst:173
msgid "CPack"
msgstr ""

#: ../../../release/3.23.rst:175
msgid ""
"The :cpack_gen:`CPack productbuild Generator` gained the new :variable:"
"`CPACK_PRODUCTBUILD_DOMAINS`, :variable:"
"`CPACK_PRODUCTBUILD_DOMAINS_ANYWHERE`, :variable:"
"`CPACK_PRODUCTBUILD_DOMAINS_USER`, and :variable:"
"`CPACK_PRODUCTBUILD_DOMAINS_ROOT` variables for adding the domains element "
"to the Distribution XML. With these variables, it is now possible to install "
"products to the user's home directory without requiring administrative "
"privileges."
msgstr ""

#: ../../../release/3.23.rst:184
msgid ""
"The :cpack_gen:`CPack productbuild Generator` gained a new variable, :"
"variable:`CPACK_PRODUCTBUILD_IDENTIFIER`, used to customize the unique "
"product identifier associated with the product."
msgstr ""

#: ../../../release/3.23.rst:188
msgid ""
"The ``CPack.distribution.dist.in`` template used by the :cpack_gen:`CPack "
"productbuild Generator` and CPack ``PackageMaker`` generator was updated to "
"use a new ``CPACK_APPLE_PKG_INSTALLER_CONTENT`` variable for its main "
"content. This replaced the previously undocumented and now deprecated "
"``CPACK_PACKAGEMAKER_CHOICES`` variable."
msgstr ""

#: ../../../release/3.23.rst:195
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained the new :variable:"
"`CPACK_IFW_ARCHIVE_FORMAT` and :variable:`CPACK_IFW_ARCHIVE_COMPRESSION` "
"variables for setting the format used when packaging new component data "
"archives, and choosing the compression level used. These features are "
"available for QtIFW 4.2 and newer."
msgstr ""

#: ../../../release/3.23.rst:202
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained new :variable:"
"`CPACK_IFW_PACKAGE_DISABLE_COMMAND_LINE_INTERFACE` variable to prevent the "
"user from passing any consumer command to the installer, like ``install``, "
"``update``, and ``remove``. This feature is available for QtIFW 4.0 and "
"newer."
msgstr ""

#: ../../../release/3.23.rst:208
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained the new :variable:"
"`CPACK_IFW_PACKAGE_PRODUCT_IMAGES` variable for adding a list of images to "
"be shown on the ``PerformInstallationPage``. This feature is available for "
"QtIFW 4.0 and newer."
msgstr ""

#: ../../../release/3.23.rst:213
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained the new :variable:"
"`CPACK_IFW_PACKAGE_RUN_PROGRAM`, :variable:"
"`CPACK_IFW_PACKAGE_RUN_PROGRAM_ARGUMENTS`, and :variable:"
"`CPACK_IFW_PACKAGE_RUN_PROGRAM_DESCRIPTION` variables for executing a "
"command after the installer is done if the user accepts the action.  This "
"feature is available for QtIFW 4.0 and newer."
msgstr ""

#: ../../../release/3.23.rst:220
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained the new :variable:"
"`CPACK_IFW_PACKAGE_SIGNING_IDENTITY` variable for specifying a code signing "
"identity to be used for signing the generated app bundle. This feature is "
"available on macOS only, and for QtIFW 3.0 and newer."
msgstr ""

#: ../../../release/3.23.rst:225
msgid ""
"The :cpack_gen:`CPack WIX Generator` gained a new variable, :variable:"
"`CPACK_WIX_SKIP_WIX_UI_EXTENSION`, to skip the inclusion of WixUIExtensions."
msgstr ""

#: ../../../release/3.23.rst:230
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.23.rst:232
msgid ""
":manual:`cmake(1)` now warns when multiple source paths are specified, as in "
"``cmake -S src1 src2``.  This has never been officially documented or "
"supported, but older versions accidentally accepted multiple source paths "
"and used the last path specified.  Update scripts to avoid passing multiple "
"source path arguments."
msgstr ""

#: ../../../release/3.23.rst:238
msgid ""
"The :manual:`cpack(1)` undocumented ``OSXX11`` generator has been removed."
msgstr ""

#: ../../../release/3.23.rst:240
msgid ""
"The previously undocumented ``CPACK_PACKAGEMAKER_CHOICES`` variable used in "
"the ``CPack.distribution.dist.in`` template has been replaced by a new "
"``CPACK_APPLE_PKG_INSTALLER_CONTENT`` variable. This only affects projects "
"that were providing their own custom ``CPack.distribution.dist.in`` template "
"file, but still relied on ``CPACK_PACKAGEMAKER_CHOICES`` being set. Those "
"custom template files should be updated to use "
"``CPACK_APPLE_PKG_INSTALLER_CONTENT`` instead, or to fully define all the "
"template file's contents without relying on substitution of either variable."
msgstr ""

#: ../../../release/3.23.rst:250
msgid "Other Changes"
msgstr ""

#: ../../../release/3.23.rst:252
msgid ""
"The :cpack_gen:`CPack DragNDrop Generator` no longer attaches :variable:"
"`CPACK_RESOURCE_FILE_LICENSE` as the license agreement in the generated ``."
"dmg`` unless explicitly activated by a :variable:"
"`CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE` option. In CMake projects, the :"
"module:`CPack` module enables the option by default for compatibility."
msgstr ""

#: ../../../release/3.23.rst:259
msgid ""
"``CUDA`` targets may now enable both :prop_tgt:`CUDA_SEPARABLE_COMPILATION` "
"and :prop_tgt:`CUDA_PTX_COMPILATION`."
msgstr ""

#: ../../../release/3.23.rst:262
msgid "``CUDA`` compiler detection now:"
msgstr ""

#: ../../../release/3.23.rst:264
msgid ""
"issues an error in all cases when it's unable to compute the default "
"architecture(s) if required (see :policy:`CMP0104`),"
msgstr ""

#: ../../../release/3.23.rst:267
msgid "handles ``OFF`` for :variable:`CMAKE_CUDA_ARCHITECTURES` on Clang,"
msgstr ""

#: ../../../release/3.23.rst:269
msgid "supports the theoretical case of multiple default architectures, and"
msgstr ""

#: ../../../release/3.23.rst:271
msgid "tries to detect invalid architectures and issue an error."
msgstr ""

#: ../../../release/3.23.rst:273
msgid ""
"``CUDA`` with Clang now implements policy :policy:`CMP0105` and the "
"``$<DEVICE_LINK:...>`` and ``$<HOST_LINK:...>`` :manual:`generator "
"expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.23.rst:277
msgid ""
"The :command:`define_property` command's ``BRIEF_DOCS`` and ``FULL_DOCS`` "
"arguments are now optional."
msgstr ""

#: ../../../release/3.23.rst:280
msgid ""
":manual:`ccmake(1)` may now be enabled on Windows when building CMake from "
"source.  This is experimental, and so is not included in official "
"distributions."
msgstr ""

#: ../../../release/3.23.rst:285
msgid "Updates"
msgstr ""

#: ../../../release/3.23.rst:287
msgid "Changes made since CMake 3.23.0 include the following."
msgstr ""

#: ../../../release/3.23.rst:290
msgid "3.23.1"
msgstr ""

#: ../../../release/3.23.rst:292
msgid ""
"The :command:`target_sources` ``FILE_SET`` feature added in CMake 3.23.0 "
"does not yet place header files properly in Apple :prop_tgt:`FRAMEWORK` "
"targets.  Pending further work in a future version of CMake, it is now an "
"error to add a ``FILE_SET`` of type ``HEADERS`` to such targets on Apple "
"platforms."
msgstr ""

#: ../../../release/3.23.rst:298
msgid ""
"The :prop_tgt:`HEADER_SETS` and :prop_tgt:`INTERFACE_HEADER_SETS` target "
"properties added in CMake 3.23.0 are now read-only records of the header "
"sets created by the :command:`target_sources` command."
msgstr ""

#: ../../../release/3.23.rst:303
msgid "3.23.2"
msgstr ""

#: ../../../release/3.23.rst:305
msgid ""
"The ``CPACK_PACKAGEMAKER_CHOICES`` variable used in the ``CPack.distribution."
"dist.in`` template file was replaced by a new "
"``CPACK_APPLE_PKG_INSTALLER_CONTENT`` variable in CMake 3.23.0. This broke "
"projects that provided their own template file but still expected the "
"``CPACK_PACKAGEMAKER_CHOICES`` variable to be defined. The old "
"``CPACK_PACKAGEMAKER_CHOICES`` variable is now also set to the same content "
"as it was before, but it is formally deprecated."
msgstr ""

#: ../../../release/3.23.rst:314
msgid "3.23.3, 3.23.4, 3.23.5"
msgstr ""

#: ../../../release/3.23.rst:316
msgid ""
"These versions made no changes to documented features or interfaces. Some "
"implementation updates were made to support ecosystem changes and/or fix "
"regressions."
msgstr ""
