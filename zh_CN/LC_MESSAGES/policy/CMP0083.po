# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.29\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0083.rst:2
msgid "CMP0083"
msgstr ""

#: ../../../policy/CMP0083.rst:6
msgid ""
"To control generation of Position Independent Executable (``PIE``) or not, "
"some flags are required at link time."
msgstr ""

#: ../../../policy/CMP0083.rst:9
msgid ""
"CMake 3.13 and lower did not add these link flags when :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` is set."
msgstr ""

#: ../../../policy/CMP0083.rst:12
msgid ""
"The ``OLD`` behavior for this policy is to not manage ``PIE`` link flags. "
"The ``NEW`` behavior is to add link flags if :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` is set:"
msgstr ""

#: ../../../policy/CMP0083.rst:16
msgid ""
"Set to ``TRUE``: flags to produce a position independent executable are "
"passed to the linker step. For example ``-pie`` for ``GCC``."
msgstr ""

#: ../../../policy/CMP0083.rst:18
msgid ""
"Set to ``FALSE``: flags not to produce a position independent executable are "
"passed to the linker step. For example ``-no-pie`` for ``GCC``."
msgstr ""

#: ../../../policy/CMP0083.rst:20
msgid "Not set: no flags are passed to the linker step."
msgstr ""

#: ../../../policy/CMP0083.rst:22
msgid ""
"Since a given linker may not support ``PIE`` flags in all environments in "
"which it is used, it is the project's responsibility to use the :module:"
"`CheckPIESupported` module to check for support to ensure that the :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` target property for executables will be honored "
"at link time."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/CMP0083.rst:34
msgid ""
"Android platform has a special handling of ``PIE`` so it is not required to "
"use the :module:`CheckPIESupported` module to ensure flags are passed to the "
"linker."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""

#: ../../../policy/CMP0083.rst:41
msgid "Examples"
msgstr ""

#: ../../../policy/CMP0083.rst:43
msgid ""
"Behave like CMake 3.13 and do not apply any ``PIE`` flags at link stage."
msgstr ""

#: ../../../policy/CMP0083.rst:45
msgid ""
"cmake_minimum_required(VERSION 3.13)\n"
"project(foo)\n"
"\n"
"# ...\n"
"\n"
"add_executable(foo ...)\n"
"set_property(TARGET foo PROPERTY POSITION_INDEPENDENT_CODE TRUE)"
msgstr ""

#: ../../../policy/CMP0083.rst:55
msgid ""
"Use the :module:`CheckPIESupported` module to detect whether ``PIE`` is "
"supported by the current linker and environment.  Apply ``PIE`` flags only "
"if the linker supports them."
msgstr ""

#: ../../../policy/CMP0083.rst:59
msgid ""
"cmake_minimum_required(VERSION 3.14) # CMP0083 NEW\n"
"project(foo)\n"
"\n"
"include(CheckPIESupported)\n"
"check_pie_supported()\n"
"\n"
"# ...\n"
"\n"
"add_executable(foo ...)\n"
"set_property(TARGET foo PROPERTY POSITION_INDEPENDENT_CODE TRUE)"
msgstr ""
