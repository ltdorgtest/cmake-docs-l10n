# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-07 08:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindQt4.cmake:6
msgid "FindQt4"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:8
msgid ""
"This module finds Qt4, a cross-platform application development framework "
"for creating graphical user interfaces and applications.  It defines a "
"number of imported targets, macros, and variables to use Qt4 in the project."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:14
msgid ""
"This module is for Qt version 4.  As of Qt version 5, the Qt upstream also "
"provides an exported configuration to find Qt.  New code should follow the :"
"manual:`cmake-qt(7)` instead of using this module."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:18
msgid ""
"To detect the Qt4 package, the Qt4 ``qmake`` tool is required and must be "
"available in the system path."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:23
msgid ""
"When using :ref:`Imported Targets`, the ``qtmain.lib`` static library is "
"automatically linked on Windows for :prop_tgt:`WIN32 <WIN32_EXECUTABLE>` "
"executables.  To disable this globally, set the ``QT4_NO_LINK_QTMAIN`` "
"variable before finding Qt4.  To disable this for a particular executable, "
"set the ``QT4_NO_LINK_QTMAIN`` target property to ``TRUE`` on that "
"executable."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:30
msgid "Qt Build Tools"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:32
msgid ""
"Qt relies on some bundled tools for code generation, such as ``moc`` for "
"meta-object code generation, ``uic`` for widget layout and population, and "
"``rcc`` for virtual filesystem content generation.  These tools may be "
"automatically invoked by :manual:`cmake(1)` if the appropriate conditions "
"are met.  See :manual:`cmake-qt(7)` for more."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:39
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:41
msgid ""
"Qt libraries can be linked using their corresponding :ref:`IMPORTED target "
"<Imported Targets>` with the :command:`target_link_libraries` command:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:45
msgid "target_link_libraries(myexe Qt4::QtGui Qt4::QtXml)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:49
msgid ""
"Linking to an imported target automatically applies the correct include "
"directories and compile definitions when building ``myexe``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:52
msgid ""
"Imported targets also manage their dependencies, so listing ``Qt4::QtCore`` "
"is unnecessary if another Qt library depends on it.  Likewise, ``Qt4::"
"QtGui`` is automatically included when linking ``Qt4::QtDeclarative``.  "
"Targets can be checked for existence using :command:`if(TARGET)` command."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:57
msgid ""
"If both debug and release versions of a Qt toolkit library are available, "
"CMake selects the appropriate one based on the :ref:`build configuration "
"<Build Configurations>`."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:61
msgid "This module provides the following imported targets, if found:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:63
msgid "``Qt4::QtCore``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:64
msgid "The QtCore target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:65
msgid "``Qt4::QtGui``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:66
msgid "The QtGui target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:67
msgid "``Qt4::Qt3Support``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:68
msgid "The Qt3Support target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:69
msgid "``Qt4::QtAssistant``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:70
msgid "The QtAssistant target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:71
msgid "``Qt4::QtAssistantClient``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:72
msgid "The QtAssistantClient target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:73
msgid "``Qt4::QAxContainer``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:74
msgid "The QAxContainer target (Windows only)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:75
msgid "``Qt4::QAxServer``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:76
msgid "The QAxServer target (Windows only)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:77
msgid "``Qt4::QtDBus``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:78
msgid "The QtDBus target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:79
msgid "``Qt4::QtDeclarative``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:80
msgid "The QtDeclarative target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:81
msgid "``Qt4::QtDesigner``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:82
msgid "The QtDesigner target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:83
msgid "``Qt4::QtDesignerComponents``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:84
msgid "The QtDesignerComponents target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:85
msgid "``Qt4::QtHelp``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:86
msgid "The QtHelp target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:87
msgid "``Qt4::QtMotif``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:88
msgid "The QtMotif target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:89
msgid "``Qt4::QtMultimedia``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:90
msgid "The QtMultimedia target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:91
msgid "``Qt4::QtNetwork``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:92
msgid "The QtNetwork target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:93
msgid "``Qt4::QtNsPlugin``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:94
msgid "The QtNsPlugin target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:95
msgid "``Qt4::QtOpenGL``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:96
msgid "The QtOpenGL target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:97
msgid "``Qt4::QtScript``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:98
msgid "The QtScript target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:99
msgid "``Qt4::QtScriptTools``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:100
msgid "The QtScriptTools target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:101
msgid "``Qt4::QtSql``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:102
msgid "The QtSql target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:103
msgid "``Qt4::QtSvg``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:104
msgid "The QtSvg target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:105
msgid "``Qt4::QtTest``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:106
msgid "The QtTest target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:107
msgid "``Qt4::QtUiTools``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:108
msgid "The QtUiTools target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:109
msgid "``Qt4::QtWebKit``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:110
msgid "The QtWebKit target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:111
msgid "``Qt4::QtXml``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:112
msgid "The QtXml target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:113
msgid "``Qt4::QtXmlPatterns``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:114
msgid "The QtXmlPatterns target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:115
msgid "``Qt4::phonon``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:116
msgid "The phonon target"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:119
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:121
msgid "This module sets the following variables:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:123
msgid "``Qt4_FOUND``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:124
msgid "Boolean whether Qt4 has been found.  If false, don't try to use Qt4."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:125
msgid "``QT_FOUND``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:126
msgid ""
"Boolean whether Qt4 has been found.  If false, don't try to use Qt4.  This "
"variable is for compatibility with other Qt find modules."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:128
msgid "``QT4_FOUND``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:129
msgid ""
"Boolean whether Qt4 has been found.  If false, don't try to use Qt4.  This "
"variable is for backward compatibility only."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:131
msgid "``QT_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:132
msgid "The major version of Qt found."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:133
msgid "``QT_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:134
msgid "The minor version of Qt found."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:135
msgid "``QT_VERSION_PATCH``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:136
msgid "The patch version of Qt found."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:139
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:141
msgid "``QT4_NO_LINK_QTMAIN``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:142
msgid ""
"If set to boolean true before finding Qt4, it globally disables linking "
"``qtmain.lib`` static library on Windows."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:146
msgid "Macros"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:148
msgid ""
"In some cases it can be necessary or useful to invoke the Qt build tools in "
"a more-manual way.  This module provides the following macros to add targets "
"for such uses:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:154
msgid "Creates build rules for running ``moc`` on a given list of input files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:156
msgid ""
"qt4_wrap_cpp(<variable> <files>... [TARGET <target>] [OPTIONS <options>...])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:160
msgid ""
"This macro creates build rules for processing a list of input files "
"``<files>`` that contain Qt classes with the ``Q_OBJECT`` declaration. Per-"
"directory preprocessor definitions are also added."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:164 ../../../../Modules/FindQt4.cmake:193
#: ../../../../Modules/FindQt4.cmake:217
msgid "``<variable>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:165
msgid "Name of a variable where a list of generated output files is stored."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:167 ../../../../Modules/FindQt4.cmake:196
#: ../../../../Modules/FindQt4.cmake:220
msgid "``<files>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:168
msgid "One or more input source files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:170 ../../../../Modules/FindQt4.cmake:246
#: ../../../../Modules/FindQt4.cmake:405
msgid "``TARGET``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:171 ../../../../Modules/FindQt4.cmake:247
#: ../../../../Modules/FindQt4.cmake:406
msgid ""
"If specified, the ``INTERFACE_INCLUDE_DIRECTORIES`` and "
"``INTERFACE_COMPILE_DEFINITIONS`` target properties from the ``<target>`` "
"are passed to ``moc``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:175 ../../../../Modules/FindQt4.cmake:199
#: ../../../../Modules/FindQt4.cmake:223 ../../../../Modules/FindQt4.cmake:332
#: ../../../../Modules/FindQt4.cmake:366
msgid "``OPTIONS``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:176
msgid ""
"Optional list of options given to ``moc``, such as those found when "
"executing ``moc -help``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:181
msgid ""
"Instead of using ``qt4_wrap_cpp()``, the :variable:`CMAKE_AUTOMOC` variable "
"can be set to process source files with ``moc`` automatically."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:186
msgid ""
"Creates build rules for running ``uic`` on a given list of Qt designer ui "
"input files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:189
msgid "qt4_wrap_ui(<variable> <files>... [OPTIONS <options>...])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:194 ../../../../Modules/FindQt4.cmake:218
msgid ""
"Name of a variable where a list of generated output filenames is stored."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:197
msgid "One or more Qt designer ui input source files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:200
msgid ""
"Optional list of options given to ``uic``, such as those found when "
"executing ``uic -help``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:205
msgid ""
"Instead of using ``qt4_wrap_ui()``, the :variable:`CMAKE_AUTOUIC` variable "
"can be set to process ui files with ``uic`` automatically."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:210
msgid ""
"Creates build rules for running ``rcc`` on a given list of input Qt resource "
"files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:213
msgid "qt4_add_resources(<variable> <files>... [OPTIONS <options>...])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:221
msgid "One or more Qt resource input source files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:224
msgid ""
"Optional list of options given to ``rcc``, such as those found when "
"executing ``rcc -help``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:229
msgid ""
"Instead of using ``qt4_add_resources()``, the :variable:`CMAKE_AUTORCC` "
"variable can be set to process resource files with ``rcc`` automatically."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:234
msgid ""
"Creates a build rule that generates output file by running ``moc`` on a "
"given input file."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:237
msgid "qt4_generate_moc(<input-file> <output-file> [TARGET <target>])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:241
msgid ""
"This macro creates a build rule for ``<input-file>`` to generate ``<output-"
"file>``.  Use this if for some reason ``qt4_wrap_cpp()`` isn't feasible, e."
"g. because a custom filename is needed for the moc file or similar."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:253
msgid ""
"Creates the interface header and implementation files from an interface XML "
"file:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:256
msgid "qt4_add_dbus_interface(<variable> <interface-file> <basename>)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:260
msgid ""
"This macro creates the interface header (``<basename>.h``) and "
"implementation files (``<basename>.{cpp,moc}``) from the given interface XML "
"file ``<interface-file>`` and adds it to the variable which contains a list "
"of sources (specified as variable name ``<variable>``)."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:265
msgid ""
"Additional parameters can be passed to the ``qdbusxml2cpp`` call by setting "
"the following source file properties on the input file ``<interface-file>``:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:268
msgid "``INCLUDE``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:269
msgid "The given file will be included in the generate interface header."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:271
msgid "``CLASSNAME``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:272
msgid "The name of the generated class."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:274
msgid "``NO_NAMESPACE``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:275
msgid "The generated class will not be wrapped in a namespace."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:279
msgid ""
"Creates the interface header and implementation files from multiple "
"interface XML files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:282
msgid "qt4_add_dbus_interfaces(<variable> <interface-files>...)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:286
msgid ""
"This macro creates the interface header and implementation files for all "
"listed interface XML files ``<interface-files>``.  The basename will be "
"automatically determined from the name of the XML file.  The resulting "
"output files list is stored in a variable ``<variable>``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:291
msgid ""
"The source file properties described for ``qt4_add_dbus_interface()`` also "
"apply here."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:296
msgid "Generates an adaptor class for a D-Bus interface:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:298
msgid ""
"qt4_add_dbus_adaptor(<variable> <xmlfile> <parent-header> <parent-"
"classname>\n"
"                     [<basename>] [<classname>])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:303
msgid ""
"Creates a D-Bus adaptor (header and implementation file) from the XML file "
"describing the interface, and adds it to the list of sources.  The adaptor "
"forwards the calls to a parent class, defined in ``<parent-header>`` and "
"named ``<parent-classname>``.  The generated filenames will be "
"``<basename>adaptor.{cpp,h}`` where ``<basename>`` defaults to the basename "
"of the XML file if not given.  If ``<classname>`` is provided, then it will "
"be used as the classname of the adaptor itself.  Generated filenames are "
"stored in a variable ``<variable>``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:314
msgid "Generates a D-Bus XML interface file from a given header file:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:316
msgid ""
"qt4_generate_dbus_interface(<header> [<interface>] [OPTIONS <options>...])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:320
msgid ""
"This macro creates a build rule to extract declaration from the given "
"``<header>`` file to generate a corresponding XML interface file."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:323
msgid "``<header>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:324
msgid "Path to header file from which XML interface file is generated."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:326
msgid "``<interface>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:327
msgid ""
"Path to the generated XML interface file.  If this optional argument is "
"omitted, the name of the interface file is constructed from the basename of "
"the header with the suffix ``.xml`` appended.  A relative path is "
"interpreted as relative to :variable:`CMAKE_CURRENT_BINARY_DIR`."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:333
msgid ""
"A list of options that may be given to ``qdbuscpp2xml``, such as those found "
"when executing ``qdbuscpp2xml --help``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:338
msgid "Creates build rules for generating TS and QM files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:340
msgid ""
"qt4_create_translation(<qm-files-var> <directories>... <sources>...\n"
"                       <ts-files>... [OPTIONS <options>...])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:345
msgid ""
"This macro creates build rules to generate TS (Translation Source files ``."
"ts``) files via ``lupdate`` and QM (Qt Message files ``.qm``) files via "
"``lrelease`` from the given ``<directories>`` and/or ``<sources>``.  The TS "
"files are created and/or updated in the source tree (unless given with full "
"paths).  The QM files are generated in the build tree."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:351
msgid "``<qm-files-var>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:352
msgid ""
"A list of generated QM files is stored in this variable.  Updating the "
"translations can be done by adding the ``<qm-files-var>`` to the source list "
"of the project library/executable, so they are always updated, or by adding "
"a custom target to control when they get updated/generated."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:357
msgid "``<directories>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:358
msgid "A list of directories containing source files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:360
msgid "``<sources>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:361
msgid "A list of source files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:363
msgid "``<ts-files>``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:364
msgid "A list of TS (Translation Source) files."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:367
msgid ""
"Optional list of flags passed to ``lupdate``, such as ``-extensions``, to "
"specify file extensions for directory scanning."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:372
msgid "Creates build rules for generating QM files from the given TS files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:374
msgid "qt4_add_translation(<qm-files-var> <ts-files>...)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:378
msgid ""
"This macro creates build rules for generating QM files from the given TS "
"files and stores a list of generated filenames of QM files in the ``<qm-"
"files-var>`` variable.  The ``<ts-files>`` must exist and are not updated in "
"any way."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:386
msgid "Use feature provided by the :variable:`CMAKE_AUTOMOC` variable instead."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:388
msgid "Runs ``moc`` on input files:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:390
msgid "qt4_automoc(<source-files>... [TARGET <target>])"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:394
msgid ""
"This macro can be used to have ``moc`` automatically handled.  For example, "
"if there are ``foo.h`` and ``foo.cpp`` files, and in ``foo.h`` a class uses "
"the ``Q_OBJECT`` preprocessor macro, ``moc`` has to run on it.  If using "
"``qt4_wrap_cpp()`` isn't wanted (however, it is reliable and mature), the "
"``#include \"foo.moc\"`` can be inserted in ``foo.cpp`` and then ``foo.cpp`` "
"given as argument to ``qt4_automoc()``.  This will scan all listed files "
"``<source-files>`` at configuration phase for such included moc files and if "
"it finds them, a rule is generated to run moc at build time on the "
"accompanying header file ``foo.h``.  If a source file has the :prop_sf:"
"`SKIP_AUTOMOC` property set, file will be ignored by this macro."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:414
msgid ""
"Use :command:`target_link_libraries` with :ref:`Imported Targets` instead."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:416
msgid "Provides Qt modules to a project for linking them to a target:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:418
msgid "qt4_use_modules(<target> [<LINK_PUBLIC|LINK_PRIVATE>] <modules>...)"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:422
msgid ""
"This function makes ``<target>`` use the ``<modules>`` from Qt.  Using a Qt "
"module means to link to the library, add the relevant include directories "
"for the module, and add the relevant compiler defines for using the module. "
"Modules are roughly equivalent to Qt4 components."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:427
msgid "``LINK_PUBLIC`` or ``LINK_PRIVATE``"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:428
msgid ""
"Optional linking mode, used as the corresponding argument in the "
"``target_link_libraries()`` call."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:431
msgid ""
"For example, calling ``qt4_use_modules(myexe Core Gui Declarative)`` will "
"use the ``QtCore``, ``QtGui`` and ``QtDeclarative`` components on the "
"project target ``myexe``."
msgstr ""

#: ../../../../Modules/FindQt4.cmake:436
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:438
msgid "Typical usage to find Qt4, could be something like:"
msgstr ""

#: ../../../../Modules/FindQt4.cmake:440
msgid ""
"set(CMAKE_AUTOMOC ON)\n"
"set(CMAKE_INCLUDE_CURRENT_DIR ON)\n"
"find_package(Qt4 4.4.3 REQUIRED QtGui QtXml)\n"
"add_executable(myexe main.cpp)\n"
"target_link_libraries(myexe PRIVATE Qt4::QtGui Qt4::QtXml)"
msgstr ""
