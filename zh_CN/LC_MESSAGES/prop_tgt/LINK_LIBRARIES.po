# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/LINK_LIBRARIES.rst:2
msgid "LINK_LIBRARIES"
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:4
msgid "List of direct link dependencies."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:6
msgid ""
"This property specifies the list of libraries or targets which will be used "
"for linking.  In addition to accepting values from the :command:"
"`target_link_libraries` command, values may be set directly on any target "
"using the :command:`set_property` command."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:11
msgid ""
"The value of this property is used by the generators to construct the link "
"rule for the target.  The direct link dependencies are linked first, "
"followed by indirect dependencies from the transitive closure of the direct "
"dependencies' :prop_tgt:`INTERFACE_LINK_LIBRARIES` properties. See policy :"
"policy:`CMP0022`."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:17
msgid ""
"Contents of ``LINK_LIBRARIES`` may use :manual:`generator expressions <cmake-"
"generator-expressions(7)>` with the syntax ``$<...>``.  Policy :policy:"
"`CMP0131` affects the behavior of the :genex:`LINK_ONLY` generator "
"expression for this property."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:22
msgid ""
"See the :manual:`cmake-buildsystem(7)` manual for more on defining "
"buildsystem properties."
msgstr ""

#: ../../../prop_tgt/include/LINK_LIBRARIES_INDIRECTION.rst:2
msgid ""
"A call to :command:`target_link_libraries(<target> ...)` may update this "
"property on ``<target>``.  If ``<target>`` was not created in the same "
"directory as the call then :command:`target_link_libraries` will wrap each "
"entry with the form ``::@(directory-id);...;::@``, where the ``::@`` is "
"literal and the ``(directory-id)`` is unspecified. This tells the generators "
"that the named libraries must be looked up in the scope of the caller rather "
"than in the scope in which the ``<target>`` was created.  Valid directory "
"ids are stripped on export by the :command:`install(EXPORT)` and :command:"
"`export` commands."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:27
msgid ""
"In advanced use cases, the list of direct link dependencies specified by "
"this property may be updated by usage requirements from dependencies. See "
"the :prop_tgt:`INTERFACE_LINK_LIBRARIES_DIRECT` and :prop_tgt:"
"`INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE` target properties."
msgstr ""

#: ../../../prop_tgt/LINK_LIBRARIES.rst:32
msgid ""
"See the :variable:`CMAKE_LINK_LIBRARIES_STRATEGY` variable and "
"corresponding :prop_tgt:`LINK_LIBRARIES_STRATEGY` target property for "
"details on how CMake orders direct link dependencies on linker command lines."
msgstr ""

#: ../../../command/include/LINK_LIBRARIES_LINKER.rst:2
msgid "Handling Compiler Driver Differences"
msgstr ""

#: ../../../command/include/LINK_LIBRARIES_LINKER.rst:6
msgid ""
"To pass options to the linker tool, each compiler driver has its own syntax. "
"The ``LINKER:`` prefix and ``,`` separator can be used to specify, in a "
"portable way, options to pass to the linker tool. ``LINKER:`` is replaced by "
"the appropriate driver option and ``,`` by the appropriate driver separator. "
"The driver prefix and driver separator are given by the values of the :"
"variable:`CMAKE_<LANG>_LINKER_WRAPPER_FLAG` and :variable:"
"`CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP` variables."
msgstr ""

#: ../../../command/include/LINK_LIBRARIES_LINKER.rst:14
msgid ""
"For example, ``\"LINKER:-z,defs\"`` becomes ``-Xlinker -z -Xlinker defs`` "
"for ``Clang`` and ``-Wl,-z,defs`` for ``GNU GCC``."
msgstr ""

#: ../../../command/include/LINK_LIBRARIES_LINKER.rst:17
msgid ""
"The ``LINKER:`` prefix supports, as an alternative syntax, specification of "
"arguments using the ``SHELL:`` prefix and space as separator. The previous "
"example then becomes ``\"LINKER:SHELL:-z defs\"``."
msgstr ""

#: ../../../command/include/LINK_LIBRARIES_LINKER.rst:23
msgid ""
"Specifying the ``SHELL:`` prefix anywhere other than at the beginning of the "
"``LINKER:`` prefix is not supported."
msgstr ""
