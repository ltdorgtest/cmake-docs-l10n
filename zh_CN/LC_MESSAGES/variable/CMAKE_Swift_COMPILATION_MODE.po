# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:2
msgid "CMAKE_Swift_COMPILATION_MODE"
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:6
msgid ""
"Specify how Swift compiles a target. This variable is used to initialize "
"the :prop_tgt:`Swift_COMPILATION_MODE` property on targets as they are "
"created."
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:9
msgid "The allowed values are:"
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:1
msgid "``incremental``"
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:2
msgid ""
"Compiles each Swift source in the module separately, resulting in better "
"parallelism in the build. The compiler emits additional information into the "
"build directory improving rebuild performance when small changes are made to "
"the source between rebuilds. This is the best option to use while iterating "
"on changes in a project."
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:8
msgid "``wholemodule``"
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:9
msgid ""
"Whole-module optimizations are slowest to compile, but results in the most "
"optimized library. The entire context is loaded into once instance of the "
"compiler, so there is no parallelism across source files in the module."
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:13
msgid "``singlefile``"
msgstr ""

#: ../../../prop_tgt/include/Swift_COMPILATION_MODE-VALUES.rst:14
msgid ""
"Compiles each source in a Swift modules separately, resulting in better "
"parallelism. Unlike the ``incremental`` build mode, no additional "
"information is emitted by the compiler during the build, so rebuilding after "
"making small changes to the source file will not run faster. This option "
"should be used sparingly, preferring ``incremental`` builds, unless working "
"around a compiler bug."
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:13
msgid ""
"Use :manual:`generator expressions <cmake-generator-expressions(7)>` to "
"support per-configuration specification. For example, the code:"
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:16
msgid ""
"set(CMAKE_Swift_COMPILATION_MODE\n"
"  \"$<IF:$<CONFIG:Release>,wholemodule,incremental>\")"
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:21
msgid ""
"sets the default Swift compilation mode to wholemodule mode when building a "
"release configuration and to incremental mode in other configurations."
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:24
msgid ""
"If this variable is not set then the :prop_tgt:`Swift_COMPILATION_MODE` "
"target property will not be set automatically. If that property is unset "
"then CMake uses the default value ``incremental`` to build the Swift source "
"files."
msgstr ""

#: ../../../variable/CMAKE_Swift_COMPILATION_MODE.rst:30
msgid ""
"This property only has effect when policy :policy:`CMP0157` is set to "
"``NEW`` prior to the first :command:`project` or :command:`enable_language` "
"command that enables the Swift language."
msgstr ""
