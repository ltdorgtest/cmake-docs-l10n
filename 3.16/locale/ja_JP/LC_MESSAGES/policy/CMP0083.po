# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0083.rst:2
msgid "CMP0083"
msgstr ""

#: ../../../policy/CMP0083.rst:4
msgid ""
"To control generation of Position Independent Executable (``PIE``) or not, "
"some flags are required at link time."
msgstr ""

#: ../../../policy/CMP0083.rst:7
msgid ""
"CMake 3.13 and lower did not add these link flags when :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` is set."
msgstr ""

#: ../../../policy/CMP0083.rst:10
msgid ""
"The ``OLD`` behavior for this policy is to not manage ``PIE`` link flags. "
"The ``NEW`` behavior is to add link flags if :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` is set:"
msgstr ""

#: ../../../policy/CMP0083.rst:14
msgid ""
"Set to ``TRUE``: flags to produce a position independent executable are "
"passed to the linker step. For example ``-pie`` for ``GCC``."
msgstr ""

#: ../../../policy/CMP0083.rst:16
msgid ""
"Set to ``FALSE``: flags not to produce a position independent executable are "
"passed to the linker step. For example ``-no-pie`` for ``GCC``."
msgstr ""

#: ../../../policy/CMP0083.rst:18
msgid "Not set: no flags are passed to the linker step."
msgstr ""

#: ../../../policy/CMP0083.rst:20
msgid ""
"Since a given linker may not support ``PIE`` flags in all environments in "
"which it is used, it is the project's responsibility to use the :module:"
"`CheckPIESupported` module to check for support to ensure that the :prop_tgt:"
"`POSITION_INDEPENDENT_CODE` target property for executables will be honored "
"at link time."
msgstr ""

#: ../../../policy/CMP0083.rst:26
msgid ""
"This policy was introduced in CMake version 3.14. Use the :command:"
"`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly. Unlike "
"most policies, CMake version |release| does not warn when this policy is not "
"set and simply uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/CMP0083.rst:33
msgid ""
"Android platform has a special handling of ``PIE`` so it is not required to "
"use the :module:`CheckPIESupported` module to ensure flags are passed to the "
"linker."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""

#: ../../../policy/CMP0083.rst:40
msgid "Examples"
msgstr ""

#: ../../../policy/CMP0083.rst:42
msgid ""
"Behave like CMake 3.13 and do not apply any ``PIE`` flags at link stage."
msgstr ""

#: ../../../policy/CMP0083.rst:44
msgid ""
"cmake_minimum_required(VERSION 3.13)\n"
"project(foo)\n"
"\n"
"# ...\n"
"\n"
"add_executable(foo ...)\n"
"set_property(TARGET foo PROPERTY POSITION_INDEPENDENT_CODE TRUE)"
msgstr ""

#: ../../../policy/CMP0083.rst:54
msgid ""
"Use the :module:`CheckPIESupported` module to detect whether ``PIE`` is "
"supported by the current linker and environment.  Apply ``PIE`` flags only "
"if the linker supports them."
msgstr ""

#: ../../../policy/CMP0083.rst:58
msgid ""
"cmake_minimum_required(VERSION 3.14) # CMP0083 NEW\n"
"project(foo)\n"
"\n"
"include(CheckPIESupported)\n"
"check_pie_supported()\n"
"\n"
"# ...\n"
"\n"
"add_executable(foo ...)\n"
"set_property(TARGET foo PROPERTY POSITION_INDEPENDENT_CODE TRUE)"
msgstr ""
