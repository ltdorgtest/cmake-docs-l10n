# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CPack.cmake:6
msgid "CPack"
msgstr ""

#: ../../../../Modules/CPack.cmake:8
msgid "Build binary and source package installers."
msgstr ""

#: ../../../../Modules/CPack.cmake:11
msgid "Introduction"
msgstr ""

#: ../../../../Modules/CPack.cmake:13
msgid ""
"The CPack module generates a file ``CPackConfig.cmake`` intended for use in "
"a subsequent run of  the :manual:`cpack <cpack(1)>` program where it steers "
"the generation of installers or/and source packages."
msgstr ""

#: ../../../../Modules/CPack.cmake:17
msgid ""
"Inclusion of the CPack module adds two new build targets, ``package`` and "
"``package_source``, which build the binary and source installers "
"respectively.  The generated binary installers contain everything installed "
"via CMake's :command:`install` command (and the deprecated commands :command:"
"`install_files`, :command:`install_programs`, and :command:"
"`install_targets`)."
msgstr ""

#: ../../../../Modules/CPack.cmake:24
msgid ""
"For certain kinds of binary installers (including the graphical installers "
"on macOS and Windows), CPack generates installers that allow users to select "
"individual application components to install. See :module:`CPackComponent` "
"module for further details."
msgstr ""

#: ../../../../Modules/CPack.cmake:30
msgid "CPack Generators"
msgstr ""

#: ../../../../Modules/CPack.cmake:32
msgid ""
"The :variable:`CPACK_GENERATOR` variable has different meanings in different "
"contexts.  In a ``CMakeLists.txt`` file, :variable:`CPACK_GENERATOR` is a "
"*list of generators*: and when :manual:`cpack <cpack(1)>` is run with no "
"other arguments, it will iterate over that list and produce one package for "
"each generator.  In a :variable:`CPACK_PROJECT_CONFIG_FILE`, :variable:"
"`CPACK_GENERATOR` is a *string naming a single generator*.  If you need per-"
"cpack-generator logic to control *other* cpack settings, then you need a :"
"variable:`CPACK_PROJECT_CONFIG_FILE`."
msgstr ""

#: ../../../../Modules/CPack.cmake:41
msgid ""
"The CMake source tree itself contains a :variable:"
"`CPACK_PROJECT_CONFIG_FILE`. See the top level file ``CMakeCPackOptions."
"cmake.in`` for an example."
msgstr ""

#: ../../../../Modules/CPack.cmake:44
msgid ""
"If set, the :variable:`CPACK_PROJECT_CONFIG_FILE` is included automatically "
"on a per-generator basis.  It only need contain overrides."
msgstr ""

#: ../../../../Modules/CPack.cmake:47
msgid "Here's how it works:"
msgstr ""

#: ../../../../Modules/CPack.cmake:49
msgid ":manual:`cpack <cpack(1)>` runs"
msgstr ""

#: ../../../../Modules/CPack.cmake:50
msgid "it includes ``CPackConfig.cmake``"
msgstr ""

#: ../../../../Modules/CPack.cmake:51
msgid ""
"it iterates over the generators given by the ``-G`` command line option, or "
"if no such option was specified, over the list of generators given by the :"
"variable:`CPACK_GENERATOR` variable set in the ``CPackConfig.cmake`` input "
"file."
msgstr ""

#: ../../../../Modules/CPack.cmake:55
msgid "foreach generator, it then"
msgstr ""

#: ../../../../Modules/CPack.cmake:57
msgid "sets :variable:`CPACK_GENERATOR` to the one currently being iterated"
msgstr ""

#: ../../../../Modules/CPack.cmake:58
msgid "includes the :variable:`CPACK_PROJECT_CONFIG_FILE`"
msgstr ""

#: ../../../../Modules/CPack.cmake:59
msgid "produces the package for that generator"
msgstr ""

#: ../../../../Modules/CPack.cmake:61
msgid ""
"This is the key: For each generator listed in :variable:`CPACK_GENERATOR` in "
"``CPackConfig.cmake``, cpack will *reset* :variable:`CPACK_GENERATOR` "
"internally to *the one currently being used* and then include the :variable:"
"`CPACK_PROJECT_CONFIG_FILE`."
msgstr ""

#: ../../../../Modules/CPack.cmake:67
msgid "Variables common to all CPack Generators"
msgstr ""

#: ../../../../Modules/CPack.cmake:69
msgid ""
"Before including this CPack module in your ``CMakeLists.txt`` file, there "
"are a variety of variables that can be set to customize the resulting "
"installers.  The most commonly-used variables are:"
msgstr ""

#: ../../../../Modules/CPack.cmake:75
msgid ""
"The name of the package (or application).  If not specified, it defaults to "
"the project name."
msgstr ""

#: ../../../../Modules/CPack.cmake:80
msgid ""
"The name of the package vendor. (e.g., \"Kitware\").  The default is "
"\"Humanity\"."
msgstr ""

#: ../../../../Modules/CPack.cmake:84
msgid ""
"The directory in which CPack is doing its packaging.  If it is not set then "
"this will default (internally) to the build dir.  This variable may be "
"defined in a CPack config file or from the :manual:`cpack <cpack(1)>` "
"command line option ``-B``.  If set, the command line option overrides the "
"value found in the config file."
msgstr ""

#: ../../../../Modules/CPack.cmake:92
msgid ""
"Package major version.  This variable will always be set, but its default "
"value depends on whether or not version details were given to the :command:"
"`project` command in the top level CMakeLists.txt file.  If version details "
"were given, the default value will be :variable:"
"`CMAKE_PROJECT_VERSION_MAJOR`.  If no version details were given, a default "
"version of 0.1.1 will be assumed, leading to ``CPACK_PACKAGE_VERSION_MAJOR`` "
"having a default value of 0."
msgstr ""

#: ../../../../Modules/CPack.cmake:102
msgid ""
"Package minor version.  The default value is determined based on whether or "
"not version details were given to the :command:`project` command in the top "
"level CMakeLists.txt file.  If version details were given, the default value "
"will be :variable:`CMAKE_PROJECT_VERSION_MINOR`, but if no minor version "
"component was specified then ``CPACK_PACKAGE_VERSION_MINOR`` will be left "
"unset.  If no project version was given at all, a default version of 0.1.1 "
"will be assumed, leading to ``CPACK_PACKAGE_VERSION_MINOR`` having a default "
"value of 1."
msgstr ""

#: ../../../../Modules/CPack.cmake:113
msgid ""
"Package patch version.  The default value is determined based on whether or "
"not version details were given to the :command:`project` command in the top "
"level CMakeLists.txt file.  If version details were given, the default value "
"will be :variable:`CMAKE_PROJECT_VERSION_PATCH`, but if no patch version "
"component was specified then ``CPACK_PACKAGE_VERSION_PATCH`` will be left "
"unset.  If no project version was given at all, a default version of 0.1.1 "
"will be assumed, leading to ``CPACK_PACKAGE_VERSION_PATCH`` having a default "
"value of 1."
msgstr ""

#: ../../../../Modules/CPack.cmake:124
msgid ""
"A description of the project, used in places such as the introduction screen "
"of CPack-generated Windows installers.  If not set, the value of this "
"variable is populated from the file named by :variable:"
"`CPACK_PACKAGE_DESCRIPTION_FILE`."
msgstr ""

#: ../../../../Modules/CPack.cmake:131
msgid ""
"A text file used to describe the project when :variable:"
"`CPACK_PACKAGE_DESCRIPTION` is not explicitly set.  The default value for "
"``CPACK_PACKAGE_DESCRIPTION_FILE`` points to a built-in template file "
"``Templates/CPack.GenericDescription.txt``."
msgstr ""

#: ../../../../Modules/CPack.cmake:138
msgid ""
"Short description of the project (only a few words).  If the :variable:"
"`CMAKE_PROJECT_DESCRIPTION` variable is set, it is used as the default "
"value, otherwise the default will be a string generated by CMake based on :"
"variable:`CMAKE_PROJECT_NAME`."
msgstr ""

#: ../../../../Modules/CPack.cmake:145
msgid ""
"Project homepage URL.  The default value is taken from the :variable:"
"`CMAKE_PROJECT_HOMEPAGE_URL` variable, which is set by the top level :"
"command:`project` command, or else the default will be empty if no URL was "
"provided to :command:`project`."
msgstr ""

#: ../../../../Modules/CPack.cmake:152
msgid ""
"The name of the package file to generate, not including the extension.  For "
"example, ``cmake-2.6.1-Linux-i686``.  The default value is::"
msgstr ""

#: ../../../../Modules/CPack.cmake:156
msgid "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}"
msgstr ""

#: ../../../../Modules/CPack.cmake:160
msgid ""
"Installation directory on the target system. This may be used by some CPack "
"generators like NSIS to create an installation directory e.g., \"CMake 2.5\" "
"below the installation prefix.  All installed elements will be put inside "
"this directory."
msgstr ""

#: ../../../../Modules/CPack.cmake:167
msgid ""
"A branding image that will be displayed inside the installer (used by GUI "
"installers)."
msgstr ""

#: ../../../../Modules/CPack.cmake:172
msgid ""
"An algorithm that will be used to generate an additional file with the "
"checksum of the package.  The output file name will be::"
msgstr ""

#: ../../../../Modules/CPack.cmake:175
msgid "${CPACK_PACKAGE_FILE_NAME}.${CPACK_PACKAGE_CHECKSUM}"
msgstr ""

#: ../../../../Modules/CPack.cmake:177
msgid ""
"Supported algorithms are those listed by the :ref:`string(\\<HASH\\>) "
"<Supported Hash Algorithms>` command."
msgstr ""

#: ../../../../Modules/CPack.cmake:182
msgid ""
"CPack-time project CPack configuration file.  This file is included at cpack "
"time, once per generator after CPack has set :variable:`CPACK_GENERATOR` to "
"the actual generator being used.  It allows per-generator setting of "
"``CPACK_*`` variables at cpack time."
msgstr ""

#: ../../../../Modules/CPack.cmake:189
msgid ""
"License to be embedded in the installer.  It will typically be displayed to "
"the user by the produced installer (often with an explicit \"Accept\" "
"button, for graphical installers) prior to installation.  This license file "
"is NOT added to the installed files but is used by some CPack generators "
"like NSIS.  If you want to install a license file (may be the same as this "
"one) along with your project, you must add an appropriate CMake :command:"
"`install` command in your ``CMakeLists.txt``."
msgstr ""

#: ../../../../Modules/CPack.cmake:199
msgid ""
"ReadMe file to be embedded in the installer.  It typically describes in some "
"detail the purpose of the project during the installation.  Not all CPack "
"generators use this file."
msgstr ""

#: ../../../../Modules/CPack.cmake:205
msgid ""
"Welcome file to be embedded in the installer.  It welcomes users to this "
"installer.  Typically used in the graphical installers on Windows and Mac OS "
"X."
msgstr ""

#: ../../../../Modules/CPack.cmake:211
msgid ""
"Disables the component-based installation mechanism.  When set, the "
"component specification is ignored and all installed items are put in a "
"single \"MONOLITHIC\" package.  Some CPack generators do monolithic "
"packaging by default and may be asked to do component packaging by setting "
"``CPACK_<GENNAME>_COMPONENT_INSTALL`` to ``TRUE``."
msgstr ""

#: ../../../../Modules/CPack.cmake:219
msgid ""
"List of CPack generators to use.  If not specified, CPack will create a set "
"of options following the naming pattern :variable:`CPACK_BINARY_<GENNAME>` "
"(e.g. ``CPACK_BINARY_NSIS``) allowing the user to enable/disable individual "
"generators.  If the ``-G`` option is given on the :manual:`cpack <cpack(1)>` "
"command line, it will override this variable and any "
"``CPACK_BINARY_<GENNAME>`` options."
msgstr ""

#: ../../../../Modules/CPack.cmake:228
msgid ""
"The name of the CPack binary configuration file.  This file is the CPack "
"configuration generated by the CPack module for binary installers. Defaults "
"to ``CPackConfig.cmake``."
msgstr ""

#: ../../../../Modules/CPack.cmake:234
msgid ""
"Lists each of the executables and associated text label to be used to create "
"Start Menu shortcuts.  For example, setting this to the list ``ccmake;"
"CMake`` will create a shortcut named \"CMake\" that will execute the "
"installed executable ``ccmake``.  Not all CPack generators use it (at least "
"NSIS, WIX and OSXX11 do)."
msgstr ""

#: ../../../../Modules/CPack.cmake:242
msgid ""
"List of files to be stripped.  Starting with CMake 2.6.0, "
"``CPACK_STRIP_FILES`` will be a boolean variable which enables stripping of "
"all files (a list of files evaluates to ``TRUE`` in CMake, so this change is "
"compatible)."
msgstr ""

#: ../../../../Modules/CPack.cmake:249
msgid ""
"If set to ``TRUE``, values of variables prefixed with ``CPACK_`` will be "
"escaped before being written to the configuration files, so that the cpack "
"program receives them exactly as they were specified.  If not, characters "
"like quotes and backslashes can cause parsing errors or alter the value "
"received by the cpack program.  Defaults to ``FALSE`` for backwards "
"compatibility."
msgstr ""

#: ../../../../Modules/CPack.cmake:257
msgid "Variables for Source Package Generators"
msgstr ""

#: ../../../../Modules/CPack.cmake:259
msgid ""
"The following CPack variables are specific to source packages, and will not "
"affect binary packages:"
msgstr ""

#: ../../../../Modules/CPack.cmake:264
msgid "The name of the source package.  For example ``cmake-2.6.1``."
msgstr ""

#: ../../../../Modules/CPack.cmake:268
msgid ""
"List of files in the source tree that will be stripped.  Starting with CMake "
"2.6.0, ``CPACK_SOURCE_STRIP_FILES`` will be a boolean variable which enables "
"stripping of all files (a list of files evaluates to ``TRUE`` in CMake, so "
"this change is compatible)."
msgstr ""

#: ../../../../Modules/CPack.cmake:275
msgid ""
"List of generators used for the source packages.  As with :variable:"
"`CPACK_GENERATOR`, if this is not specified then CPack will create a set of "
"options (e.g. ``CPACK_SOURCE_ZIP``) allowing users to select which packages "
"will be generated."
msgstr ""

#: ../../../../Modules/CPack.cmake:282
msgid ""
"The name of the CPack source configuration file.  This file is the CPack "
"configuration generated by the CPack module for source installers. Defaults "
"to ``CPackSourceConfig.cmake``."
msgstr ""

#: ../../../../Modules/CPack.cmake:288
msgid ""
"Pattern of files in the source tree that won't be packaged when building a "
"source package.  This is a list of regular expression patterns (that must be "
"properly escaped), e.g., ``/CVS/;/\\\\.svn/;\\\\.swp$;\\\\.#;/#;.*~;cscope."
"*``"
msgstr ""

#: ../../../../Modules/CPack.cmake:294
msgid "Variables for Advanced Use"
msgstr ""

#: ../../../../Modules/CPack.cmake:296
msgid "The following variables are for advanced uses of CPack:"
msgstr ""

#: ../../../../Modules/CPack.cmake:300
msgid ""
"What CMake generator should be used if the project is a CMake project.  "
"Defaults to the value of :variable:`CMAKE_GENERATOR`.  Few users will want "
"to change this setting."
msgstr ""

#: ../../../../Modules/CPack.cmake:306
msgid ""
"List of four values that specify what project to install.  The four values "
"are: Build directory, Project Name, Project Component, Directory.  If "
"omitted, CPack will build an installer that installs everything."
msgstr ""

#: ../../../../Modules/CPack.cmake:312
msgid ""
"System name, defaults to the value of :variable:`CMAKE_SYSTEM_NAME`, except "
"on Windows where it will be ``win32`` or ``win64``."
msgstr ""

#: ../../../../Modules/CPack.cmake:317
msgid ""
"Package full version, used internally.  By default, this is built from :"
"variable:`CPACK_PACKAGE_VERSION_MAJOR`, :variable:"
"`CPACK_PACKAGE_VERSION_MINOR`, and :variable:`CPACK_PACKAGE_VERSION_PATCH`."
msgstr ""

#: ../../../../Modules/CPack.cmake:324
msgid "Directory for the installed files."
msgstr ""

#: ../../../../Modules/CPack.cmake:328
msgid ""
"Extra commands to install components.  The environment variable "
"``CMAKE_INSTALL_PREFIX`` is set to the temporary install directory during "
"execution."
msgstr ""

#: ../../../../Modules/CPack.cmake:334
msgid ""
"Extra CMake scripts executed by CPack during its local staging installation, "
"which is done right before packaging the files. The scripts are not called "
"by a standalone install (e.g.: ``make install``). For every script, the "
"following variables will be set: :variable:`CMAKE_CURRENT_SOURCE_DIR`, :"
"variable:`CMAKE_CURRENT_BINARY_DIR` and :variable:`CMAKE_INSTALL_PREFIX` "
"(which is set to the staging install directory).  The singular form "
"``CMAKE_INSTALL_SCRIPT`` is supported as an alternative variable for "
"historical reasons, but its value is ignored if ``CMAKE_INSTALL_SCRIPTS`` is "
"set and a warning will be issued."
msgstr ""

#: ../../../../Modules/CPack.cmake:346
msgid "Extra directories to install."
msgstr ""

#: ../../../../Modules/CPack.cmake:350
msgid ""
"Registry key used when installing this project.  This is only used by "
"installers for Windows.  The default value is based on the installation "
"directory."
msgstr ""

#: ../../../../Modules/CPack.cmake:356
msgid ""
"List of desktop links to create.  Each desktop link requires a corresponding "
"start menu shortcut as created by :variable:`CPACK_PACKAGE_EXECUTABLES`."
msgstr ""

#: ../../../../Modules/CPack.cmake:362
msgid ""
"CPack generated options for binary generators.  The ``CPack.cmake`` module "
"generates (when :variable:`CPACK_GENERATOR` is not set) a set of CMake "
"options (see CMake :command:`option` command) which may then be used to "
"select the CPack generator(s) to be used when building the ``package`` "
"target or when running :manual:`cpack <cpack(1)>` without the ``-G`` option."
msgstr ""
