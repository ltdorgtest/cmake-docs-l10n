# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:6
msgid "CMakeFindDependencyMacro"
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:10
msgid ""
"The ``find_dependency()`` macro wraps a :command:`find_package` call for a "
"package dependency:"
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:13
msgid "find_dependency(<dep> [...])"
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:17
msgid ""
"It is designed to be used in a :ref:`Package Configuration File <Config File "
"Packages>` (``<PackageName>Config.cmake``).  ``find_dependency`` forwards "
"the correct parameters for ``QUIET`` and ``REQUIRED`` which were passed to "
"the original :command:`find_package` call.  Any additional arguments "
"specified are forwarded to :command:`find_package`."
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:24
msgid ""
"If the dependency could not be found it sets an informative diagnostic "
"message and calls :command:`return` to end processing of the calling package "
"configuration file and return to the :command:`find_package` command that "
"loaded it."
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:31
msgid ""
"The call to :command:`return` makes this macro unsuitable to call from :ref:"
"`Find Modules`."
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:35
msgid "Package Dependency Search Optimizations"
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:37
msgid ""
"If ``find_dependency`` is called with arguments identical to a previous call "
"in the same directory, perhaps due to diamond-shaped package dependencies, "
"the underlying call to :command:`find_package` is optimized out.  This "
"optimization is important to support large package dependency graphs while "
"avoiding a combinatorial explosion of repeated searches. However, the "
"heuristic cannot account for ambient variables that affect package behavior, "
"such as ``<PackageName>_USE_STATIC_LIBS``, offered by some packages.  "
"Therefore package configuration files should avoid setting such variables "
"before their calls to ``find_dependency``."
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:47
msgid ""
"Previously, the underlying call to :command:`find_package` was always "
"optimized out if the package had already been found.  CMake 3.15 removed the "
"optimization to support cases in which ``find_dependency`` call arguments "
"request different components."
msgstr ""

#: ../../../../Modules/CMakeFindDependencyMacro.cmake:53
msgid ""
"The pre-3.15 optimization was restored, but with the above-described "
"heuristic to account for varying ``find_dependency`` call arguments."
msgstr ""
