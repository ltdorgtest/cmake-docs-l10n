# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.16.rst:2
msgid "CMake 3.16 Release Notes"
msgstr ""

#: ../../../release/3.16.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.16.rst:8
msgid "Changes made since CMake 3.15 include the following."
msgstr ""

#: ../../../release/3.16.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.16.rst:14
msgid "Languages"
msgstr ""

#: ../../../release/3.16.rst:16
msgid ""
"CMake learned to support the Objective C (``OBJC``) and Objective C++ "
"(``OBJCXX``) languages.  They may be enabled via the :command:`project` and :"
"command:`enable_language` commands.  When ``OBJC`` or ``OBJCXX`` is enabled, "
"source files with the ``.m`` or ``.mm``, respectively, will be compiled as "
"Objective C or C++.  Otherwise they will be treated as plain C++ sources as "
"they were before."
msgstr ""

#: ../../../release/3.16.rst:24
msgid "Compilers"
msgstr ""

#: ../../../release/3.16.rst:26
msgid "The ``Clang`` compiler is now supported on ``Solaris``."
msgstr ""

#: ../../../release/3.16.rst:29
msgid "Platforms"
msgstr ""

#: ../../../release/3.16.rst:31
msgid ""
"On AIX, executables using the :prop_tgt:`ENABLE_EXPORTS` target property now "
"produce a linker import file with a ``.imp`` extension in addition to the "
"executable file.  Plugins (created via :command:`add_library` with the "
"``MODULE`` option) that use :command:`target_link_libraries` to link to the "
"executable for its symbols are now linked using the import file. The :"
"command:`install(TARGETS)` command now installs the import file as an "
"``ARCHIVE`` artifact."
msgstr ""

#: ../../../release/3.16.rst:39
msgid ""
"On AIX, runtime linking is no longer enabled by default.  CMake provides the "
"linker enough information to resolve all symbols up front. One may manually "
"enable runtime linking for shared libraries and/or loadable modules by "
"adding ``-Wl,-G`` to their link flags (e.g. in the :variable:"
"`CMAKE_SHARED_LINKER_FLAGS` or :variable:`CMAKE_MODULE_LINKER_FLAGS` "
"variable). One may manually enable runtime linking for executables by adding "
"``-Wl,-brtl`` to their link flags (e.g. in the :variable:"
"`CMAKE_EXE_LINKER_FLAGS` variable)."
msgstr ""

#: ../../../release/3.16.rst:50
msgid "Command-Line"
msgstr ""

#: ../../../release/3.16.rst:52
msgid ""
":manual:`cmake(1)` ``-E`` now supports ``true`` and ``false`` commands, "
"which do nothing while returning exit codes of 0 and 1, respectively."
msgstr ""

#: ../../../release/3.16.rst:55
msgid ""
":manual:`cmake(1)` gained a ``--trace-redirect=<file>`` command line option "
"that can be used to redirect ``--trace`` output to a file instead of "
"``stderr``."
msgstr ""

#: ../../../release/3.16.rst:59
msgid ""
"The :manual:`cmake(1)` ``--loglevel`` command line option has been renamed "
"to ``--log-level`` to make it consistent with the naming of other command "
"line options.  The ``--loglevel`` option is still supported to preserve "
"backward compatibility."
msgstr ""

#: ../../../release/3.16.rst:65
msgid "Commands"
msgstr ""

#: ../../../release/3.16.rst:67
msgid ""
"The :command:`add_test` command learned the option ``COMMAND_EXPAND_LISTS`` "
"which causes lists in the ``COMMAND`` argument to be expanded, including "
"lists created by generator expressions."
msgstr ""

#: ../../../release/3.16.rst:71
msgid ""
"The :command:`file` command learned a new sub-command, "
"``GET_RUNTIME_DEPENDENCIES``, which allows you to recursively get the list "
"of libraries linked by an executable or library. This sub-command is "
"intended as a replacement for :module:`GetPrerequisites`."
msgstr ""

#: ../../../release/3.16.rst:76
msgid ""
"The :command:`find_file`, :command:`find_library`, :command:`find_path`, :"
"command:`find_package`, and :command:`find_program` commands have learned to "
"check the following variables to control the default behavior for groups of "
"search locations:"
msgstr ""

#: ../../../release/3.16.rst:81
msgid ""
":variable:`CMAKE_FIND_USE_PACKAGE_ROOT_PATH` - Controls the default behavior "
"of searching the :variable:`<PackageName>_ROOT` variables."
msgstr ""

#: ../../../release/3.16.rst:84
msgid ""
":variable:`CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH` - Controls the default "
"behavior of searching the CMake-specific environment variables."
msgstr ""

#: ../../../release/3.16.rst:87
msgid ""
":variable:`CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH` - Controls the default "
"behavior of searching the standard system environment variables."
msgstr ""

#: ../../../release/3.16.rst:90
msgid ""
":variable:`CMAKE_FIND_USE_CMAKE_PATH` - Controls the default behavior of "
"searching the CMake-specific cache variables."
msgstr ""

#: ../../../release/3.16.rst:93
msgid ""
":variable:`CMAKE_FIND_USE_CMAKE_SYSTEM_PATH` - Controls the default behavior "
"of searching the platform-specific CMake variables."
msgstr ""

#: ../../../release/3.16.rst:96
msgid ""
"The :command:`find_package` command has learned to check the :variable:"
"`CMAKE_FIND_USE_PACKAGE_REGISTRY` variable to control the default behavior "
"of searching the CMake user package registry and to check the :variable:"
"`CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY` variable to control the default "
"behavior of searching the CMake system package registry."
msgstr ""

#: ../../../release/3.16.rst:102
msgid ""
"The :command:`message` command learned indentation control with the new :"
"variable:`CMAKE_MESSAGE_INDENT` variable."
msgstr ""

#: ../../../release/3.16.rst:105
msgid ""
"The :command:`target_precompile_headers` command was added to specify a list "
"of headers to precompile for faster compilation times."
msgstr ""

#: ../../../release/3.16.rst:109
msgid "Variables"
msgstr ""

#: ../../../release/3.16.rst:111
msgid ""
"The :variable:`CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS` variable has been "
"introduced to optionally initialize the :prop_tgt:"
"`CUDA_RESOLVE_DEVICE_SYMBOLS` target property."
msgstr ""

#: ../../../release/3.16.rst:115
msgid ""
"The :variable:`CMAKE_ECLIPSE_RESOURCE_ENCODING` variable was added to "
"specify the resource encoding for the the :generator:`Eclipse CDT4` extra "
"generator."
msgstr ""

#: ../../../release/3.16.rst:119
msgid ""
"The :variable:`CMAKE_UNITY_BUILD` variable was added to initialize the :"
"prop_tgt:`UNITY_BUILD` target property to tell generators to batch include "
"source files for faster compilation times."
msgstr ""

#: ../../../release/3.16.rst:124
msgid "Properties"
msgstr ""

#: ../../../release/3.16.rst:126
msgid ""
"The :prop_tgt:`BUILD_RPATH` and :prop_tgt:`INSTALL_RPATH` target properties "
"now support :manual:`generator expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.16.rst:129
msgid ""
"The :prop_tgt:`INSTALL_REMOVE_ENVIRONMENT_RPATH` target property was added "
"to remove compiler-defined ``RPATH`` entries from a target. This property is "
"initialized by the :variable:`CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH` "
"variable."
msgstr ""

#: ../../../release/3.16.rst:134
msgid ""
"The :prop_tgt:`PRECOMPILE_HEADERS` target property was added to specify a "
"list of headers to precompile for faster compilation times. Set it using "
"the :command:`target_precompile_headers` command."
msgstr ""

#: ../../../release/3.16.rst:138
msgid ""
"The :prop_tgt:`UNITY_BUILD` target property was added to tell generators to "
"batch include source files for faster compilation times."
msgstr ""

#: ../../../release/3.16.rst:142
msgid ""
"The :prop_tgt:`VS_CONFIGURATION_TYPE` target property now supports :manual:"
"`generator expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.16.rst:145
msgid ""
"The :prop_tgt:`VS_DPI_AWARE` target property was added to tell :ref:`Visual "
"Studio Generators` to set the ``EnableDpiAwareness`` property in ``."
"vcxproj`` files."
msgstr ""

#: ../../../release/3.16.rst:149
msgid ""
"The :prop_tgt:`XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING` target property was "
"added to tell the :generator:`Xcode` generator to set the value of the "
"``Allow debugging when using document Versions Browser`` schema option."
msgstr ""

#: ../../../release/3.16.rst:154
msgid "Modules"
msgstr ""

#: ../../../release/3.16.rst:156
msgid ""
"The :module:`FindDoxygen` module :command:`doxygen_add_docs` command gained "
"a new ``USE_STAMP_FILE`` option.  When this option present, the custom "
"target created by the command will only re-run Doxygen if any of the source "
"files have changed since the last successful run."
msgstr ""

#: ../../../release/3.16.rst:161
msgid "The :module:`FindGnuTLS` module now provides an imported target."
msgstr ""

#: ../../../release/3.16.rst:163
msgid ""
"The :module:`FindPackageHandleStandardArgs` module :command:"
"`find_package_handle_standard_args` command gained a new "
"``REASON_FAILURE_MESSAGE`` option to specify a message giving the reason for "
"the failure."
msgstr ""

#: ../../../release/3.16.rst:168
msgid ""
"The :module:`FindPkgConfig` module :command:`pkg_search_module` macro now "
"defines a ``<prefix>_MODULE_NAME`` result variable containing the first "
"matching module name."
msgstr ""

#: ../../../release/3.16.rst:172
msgid ""
"The :module:`FindPython3` and :module:`FindPython` modules gained options to "
"control which ``ABIs`` will be searched."
msgstr ""

#: ../../../release/3.16.rst:175
msgid ""
"The :module:`FindPython3`, :module:`FindPython2`, and :module:`FindPython` "
"modules now support direct specification of artifacts via cache entries."
msgstr ""

#: ../../../release/3.16.rst:179
msgid "Autogen"
msgstr ""

#: ../../../release/3.16.rst:181
msgid ""
"When using :prop_tgt:`AUTOMOC`, the new :variable:"
"`CMAKE_AUTOMOC_PATH_PREFIX` variable or :prop_tgt:`AUTOMOC_PATH_PREFIX` "
"target property may be enabled to generate the ``-p`` path prefix option for "
"``moc``.  This ensures that ``moc`` output files are identical on different "
"build setups (given, that the headers compiled by ``moc`` are in an :command:"
"`include directory <target_include_directories>`). Also it ensures that "
"``moc`` output files will compile correctly when the source and/or build "
"directory is a symbolic link."
msgstr ""

#: ../../../release/3.16.rst:191
msgid "CTest"
msgstr ""

#: ../../../release/3.16.rst:193
msgid ""
":manual:`ctest(1)` now has the ability to schedule tests based on resource "
"requirements for each test. See :ref:`ctest-resource-allocation` for details."
msgstr ""

#: ../../../release/3.16.rst:197
msgid ""
"A new test property, :prop_test:`SKIP_REGULAR_EXPRESSION`, has been added. "
"This property is similar to :prop_test:`FAIL_REGULAR_EXPRESSION` and :"
"prop_test:`PASS_REGULAR_EXPRESSION`, but with the same meaning as :prop_test:"
"`SKIP_RETURN_CODE`. This is useful, for example, in cases where the user has "
"no control over the return code of the test. For example, in Catch2, the "
"return value is the number of assertion failed, therefore it is impossible "
"to use it for :prop_test:`SKIP_RETURN_CODE`."
msgstr ""

#: ../../../release/3.16.rst:206
msgid "CPack"
msgstr ""

#: ../../../release/3.16.rst:208
msgid ""
":manual:`cpack(1)` learned support for multiple configurations for ``-C`` "
"option."
msgstr ""

#: ../../../release/3.16.rst:211
msgid ""
"The :cpack_gen:`CPack DEB Generator` is now able to format generic text "
"(usually used as the description for multiple CPack generators) according to "
"the `Debian Policy Manual`_.  See the :variable:"
"`CPACK_PACKAGE_DESCRIPTION_FILE` and :variable:"
"`CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` variables."
msgstr ""

#: ../../../release/3.16.rst:217
msgid ""
"The :cpack_gen:`CPack Archive Generator` learned to generate ``.tar.zst`` "
"packages with Zstandard compression."
msgstr ""

#: ../../../release/3.16.rst:223
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.16.rst:225
msgid ""
"An explicit deprecation diagnostic was added for policy ``CMP0067`` "
"(``CMP0066`` and below were already deprecated). The :manual:`cmake-"
"policies(7)` manual explains that the OLD behaviors of all policies are "
"deprecated and that projects should port to the NEW behaviors."
msgstr ""

#: ../../../release/3.16.rst:231
msgid ""
"The :variable:`CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY` variable has been "
"deprecated.  Use the :variable:`CMAKE_FIND_USE_PACKAGE_REGISTRY` variable "
"instead."
msgstr ""

#: ../../../release/3.16.rst:235
msgid ""
"The :module:`GetPrerequisites` module has been deprecated, as it has been "
"superseded by :command:`file(GET_RUNTIME_DEPENDENCIES)`."
msgstr ""

#: ../../../release/3.16.rst:238
msgid ""
"The ``CPACK_INSTALL_SCRIPT`` variable has been deprecated in favor of the "
"new, more accurately named :variable:`CPACK_INSTALL_SCRIPTS` variable."
msgstr ""

#: ../../../release/3.16.rst:242
msgid "Other Changes"
msgstr ""

#: ../../../release/3.16.rst:244
msgid ""
"The :manual:`cmake(1)` ``-C <initial-cache>`` option now evaluates the "
"initial cache script with :variable:`CMAKE_SOURCE_DIR` and :variable:"
"`CMAKE_BINARY_DIR` set to the top-level source and build trees."
msgstr ""

#: ../../../release/3.16.rst:248
msgid ""
"The :manual:`cmake(1)` ``-E remove_directory`` command-line tool, when given "
"the path to a symlink to a directory, now removes just the symlink.  It no "
"longer removes content of the linked directory."
msgstr ""

#: ../../../release/3.16.rst:252
msgid ""
"The :manual:`ctest(1)`  ``--build-makeprogram`` command-line option now "
"specifies the make program used when configuring a project with the :"
"generator:`Ninja` generator or the :ref:`Makefile Generators`."
msgstr ""

#: ../../../release/3.16.rst:256
msgid ""
"The :module:`ExternalProject` module :command:`ExternalProject_Add` command "
"has been updated so that ``GIT_SUBMODULES \"\"`` initializes no submodules. "
"See policy :policy:`CMP0097`."
msgstr ""

#: ../../../release/3.16.rst:260
msgid ""
"The :module:`FindGTest` module has been updated to recognize MSVC build "
"trees generated by GTest 1.8.1."
msgstr ""

#: ../../../release/3.16.rst:263
msgid ""
"The :command:`project` command no longer strips leading zeros in version "
"components.  See policy :policy:`CMP0096`."
msgstr ""

#: ../../../release/3.16.rst:266
msgid ""
"The Qt Compressed Help file is now named ``CMake.qch``, which no longer "
"contains the release version in the file name.  When CMake is upgraded in-"
"place, the name and location of this file will remain constant. Tools such "
"as IDEs, help viewers, etc. should now be able to refer to this file at a "
"fixed location that remains valid across CMake upgrades."
msgstr ""

#: ../../../release/3.16.rst:272
msgid ""
"``RPATH`` entries are properly escaped in the generated CMake scripts used "
"for installation.  See policy :policy:`CMP0095`."
msgstr ""

#: ../../../release/3.16.rst:275
msgid ""
"When using :variable:`CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS` on Windows the auto-"
"generated exports are now updated only when the object files providing the "
"symbols are updated."
msgstr ""

#: ../../../release/3.16.rst:280
msgid "Updates"
msgstr ""

#: ../../../release/3.16.rst:282
msgid "Changes made since CMake 3.16.0 include the following."
msgstr ""

#: ../../../release/3.16.rst:285
msgid "3.16.2"
msgstr ""

#: ../../../release/3.16.rst:287
msgid ""
"CMake 3.16.0 and 3.16.1 processed ``.hh`` files with :prop_tgt:`AUTOMOC`. "
"This was a behavior change from CMake 3.15 and below that can break existing "
"projects, so it has been reverted as of 3.16.2."
msgstr ""

#: ../../../release/3.16.rst:292
msgid "3.16.5"
msgstr ""

#: ../../../release/3.16.rst:294
msgid ""
"The :module:`FindPython`, :module:`FindPython2`, and :module:`FindPython3` "
"modules no longer create cache entries for ``Python{,2,3}_LIBRARY_RELEASE`` "
"and ``Python{,2,3}_LIBRARY_DEBUG``.  Those values are always computed from "
"other results and so should not be cached.  The entries were created by "
"CMake 3.16.0 through 3.16.4 but were always ``FORCE``-set and could not be "
"meaningfully edited by users."
msgstr ""

#: ../../../release/3.16.rst:301
msgid ""
"Additionally, the modules no longer expose their internal ``_Python*`` cache "
"entries publicly.  CMake 3.16.0 through 3.16.4 accidentally made them "
"visible as advanced cache entries."
msgstr ""

#: ../../../release/3.16.rst:306
msgid "3.16.7"
msgstr ""

#: ../../../release/3.16.rst:308
msgid ""
"Selection of the Objective C or C++ compiler now considers the :envvar:`CC` "
"or :envvar:`CXX` environment variable if the :envvar:`OBJC` or :envvar:"
"`OBJCXX` environment variable is not set."
msgstr ""

#: ../../../release/3.16.rst:312
msgid ""
"The :module:`FindPkgConfig` module now extracts include directories prefixed "
"with ``-isystem`` into the ``*_INCLUDE_DIRS`` variables and :prop_tgt:"
"`INTERFACE_INCLUDE_DIRECTORIES` target properties. Previously they would be "
"places in ``*_CFLAGS_OTHER`` variables and :prop_tgt:"
"`INTERFACE_COMPILE_OPTIONS` target properties."
msgstr ""

#: ../../../release/3.16.rst:319
msgid "3.16.9"
msgstr ""

#: ../../../release/3.16.rst:321
msgid ""
"The default value of :variable:`CMAKE_AUTOMOC_PATH_PREFIX` was changed to "
"``OFF`` because this feature can break existing projects that have "
"identically named header files in different include directories. This "
"restores compatibility with behavior of CMake 3.15 and below."
msgstr ""
