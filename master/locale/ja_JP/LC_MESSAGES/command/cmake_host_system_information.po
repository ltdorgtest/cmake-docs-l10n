# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/cmake_host_system_information.rst:2
msgid "cmake_host_system_information"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:4
msgid "Query various host system information."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:7
msgid "Synopsis"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:11
msgid ""
"`Query host system specific information`_\n"
"  cmake_host_system_information(RESULT <variable> QUERY <key> ...)\n"
"\n"
"`Query Windows registry`_\n"
"  cmake_host_system_information(RESULT <variable> QUERY WINDOWS_REGISTRY "
"<key> ...)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:18
msgid "Query host system specific information"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:20
msgid "cmake_host_system_information(RESULT <variable> QUERY <key> ...)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:24
msgid ""
"Queries system information of the host system on which cmake runs. One or "
"more ``<key>`` can be provided to select the information to be queried.  The "
"list of queried values is stored in ``<variable>``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:28
msgid "``<key>`` can be one of the following values:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:30
msgid "``NUMBER_OF_LOGICAL_CORES``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:31
msgid "Number of logical cores"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:33
msgid "``NUMBER_OF_PHYSICAL_CORES``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:34
msgid "Number of physical cores"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:36
msgid "``HOSTNAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:37
msgid "Hostname"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:39
msgid "``FQDN``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:40
msgid "Fully qualified domain name"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:42
msgid "``TOTAL_VIRTUAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:43
msgid "Total virtual memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:45
msgid "``AVAILABLE_VIRTUAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:46
msgid "Available virtual memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:48
msgid "``TOTAL_PHYSICAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:49
msgid "Total physical memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:51
msgid "``AVAILABLE_PHYSICAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:52
msgid "Available physical memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:54
msgid "``IS_64BIT``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:57
msgid "One if processor is 64Bit"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:59
msgid "``HAS_FPU``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:62
msgid "One if processor has floating point unit"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:64
msgid "``HAS_MMX``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:67
msgid "One if processor supports MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:69
msgid "``HAS_MMX_PLUS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:72
msgid "One if processor supports Ext. MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:74
msgid "``HAS_SSE``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:77
msgid "One if processor supports SSE instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:79
msgid "``HAS_SSE2``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:82
msgid "One if processor supports SSE2 instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:84
msgid "``HAS_SSE_FP``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:87
msgid "One if processor supports SSE FP instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:89
msgid "``HAS_SSE_MMX``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:92
msgid "One if processor supports SSE MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:94
msgid "``HAS_AMD_3DNOW``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:97
msgid "One if processor supports 3DNow instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:99
msgid "``HAS_AMD_3DNOW_PLUS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:102
msgid "One if processor supports 3DNow+ instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:104
msgid "``HAS_IA64``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:107
msgid "One if IA64 processor emulating x86"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:109
msgid "``HAS_SERIAL_NUMBER``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:112
msgid "One if processor has serial number"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:114
msgid "``PROCESSOR_SERIAL_NUMBER``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:117
msgid "Processor serial number"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:119
msgid "``PROCESSOR_NAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:122
msgid "Human readable processor name"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:124
msgid "``PROCESSOR_DESCRIPTION``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:127
msgid "Human readable full processor description"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:129
msgid "``OS_NAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:132
msgid "The host operating system name:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:134
msgid "On UNIX platforms, this is ``uname -s``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:136
msgid "On Apple platforms, this is ``sw_vers -productName``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:138
msgid "On Windows, this is ``Windows``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:140
msgid "See also :variable:`CMAKE_HOST_SYSTEM_NAME`."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:142
msgid "``OS_RELEASE``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:145
msgid "The OS sub-type e.g. on Windows ``Professional``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:147
msgid "``OS_VERSION``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:150
msgid "The OS build ID"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:152
msgid "``OS_PLATFORM``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:155
msgid "See :variable:`CMAKE_HOST_SYSTEM_PROCESSOR`"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:157
msgid "``MSYSTEM_PREFIX``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:160
msgid ""
"Available only on Windows hosts.  In a MSYS or MinGW development environment "
"that sets the ``MSYSTEM`` environment variable, this is its installation "
"prefix.  Otherwise, this is the empty string."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:164
msgid "``DISTRIB_INFO``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:167
msgid ""
"Read :file:`/etc/os-release` file and define the given ``<variable>`` into a "
"list of read variables"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:170
msgid "``DISTRIB_<name>``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:173
msgid ""
"Get the ``<name>`` variable (see `man 5 os-release`_) if it exists in the :"
"file:`/etc/os-release` file"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:176
#: ../../../command/cmake_host_system_information.rst:233
msgid "Example:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:178
msgid ""
"cmake_host_system_information(RESULT PRETTY_NAME QUERY DISTRIB_PRETTY_NAME)\n"
"message(STATUS \"${PRETTY_NAME}\")\n"
"\n"
"cmake_host_system_information(RESULT DISTRO QUERY DISTRIB_INFO)\n"
"\n"
"foreach(VAR IN LISTS DISTRO)\n"
"  message(STATUS \"${VAR}=`${${VAR}}`\")\n"
"endforeach()"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:190
msgid "Output::"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:192
msgid ""
"-- Ubuntu 20.04.2 LTS\n"
"-- DISTRO_BUG_REPORT_URL=`https://bugs.launchpad.net/ubuntu/`\n"
"-- DISTRO_HOME_URL=`https://www.ubuntu.com/`\n"
"-- DISTRO_ID=`ubuntu`\n"
"-- DISTRO_ID_LIKE=`debian`\n"
"-- DISTRO_NAME=`Ubuntu`\n"
"-- DISTRO_PRETTY_NAME=`Ubuntu 20.04.2 LTS`\n"
"-- DISTRO_PRIVACY_POLICY_URL=`https://www.ubuntu.com/legal/terms-and-"
"policies/privacy-policy`\n"
"-- DISTRO_SUPPORT_URL=`https://help.ubuntu.com/`\n"
"-- DISTRO_UBUNTU_CODENAME=`focal`\n"
"-- DISTRO_VERSION=`20.04.2 LTS (Focal Fossa)`\n"
"-- DISTRO_VERSION_CODENAME=`focal`\n"
"-- DISTRO_VERSION_ID=`20.04`"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:206
msgid ""
"If :file:`/etc/os-release` file is not found, the command tries to gather OS "
"identification via fallback scripts.  The fallback script can use `various "
"distribution-specific files`_ to collect OS identification data and map it "
"into `man 5 os-release`_ variables."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:212
msgid "Fallback Interface Variables"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:216
msgid ""
"In addition to the scripts shipped with CMake, a user may append full paths "
"of their script(s) to this list.  The script filename has the following "
"format: ``NNN-<name>.cmake``, where ``NNN`` is three digits used to apply "
"collected scripts in a specific order."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:223
msgid ""
"Variables collected by the user provided fallback script ought to be "
"assigned to CMake variables using this naming convention.  Example, the "
"``ID`` variable from the manual becomes "
"``CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:230
msgid ""
"The fallback script ought to store names of all assigned "
"``CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_<varname>`` variables in this list."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:235
msgid ""
"# 000-FallbackScript.cmake\n"
"#\n"
"# Try to detect some old distribution\n"
"# See also\n"
"# - http://linuxmafia.com/faq/Admin/release-files.html\n"
"#\n"
"if(NOT EXISTS \"${CMAKE_SYSROOT}/etc/foobar-release\")\n"
"  return()\n"
"endif()\n"
"# Get the first string only\n"
"file(\n"
"    STRINGS \"${CMAKE_SYSROOT}/etc/foobar-release\" "
"CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT\n"
"    LIMIT_COUNT 1\n"
"  )\n"
"#\n"
"# Example:\n"
"#\n"
"#   Foobar distribution release 1.2.3 (server)\n"
"#\n"
"if(CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT MATCHES \"Foobar distribution "
"release ([0-9\\.]+) .*\")\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_NAME Foobar)\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_PRETTY_NAME "
"\"${CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT}\")\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID foobar)\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION ${CMAKE_MATCH_1})\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION_ID ${CMAKE_MATCH_1})\n"
"  list(\n"
"      APPEND CMAKE_GET_OS_RELEASE_FALLBACK_RESULT\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_NAME\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_PRETTY_NAME\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION_ID\n"
"    )\n"
"endif()\n"
"unset(CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:273
msgid ""
"Then this script can be applied as a fallback to determine the missing host "
"system information:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:276
msgid ""
"list(\n"
"  APPEND\n"
"  CMAKE_GET_OS_RELEASE_FALLBACK_SCRIPTS\n"
"  ${CMAKE_CURRENT_SOURCE_DIR}/000-FallbackScript.cmake\n"
")\n"
"\n"
"cmake_host_system_information(RESULT info QUERY DISTRIB_INFO)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:287
msgid "Footnotes"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:288
msgid "One MiB (mebibyte) is equal to 1024x1024 bytes."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:296
msgid "Query Windows registry"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:300
msgid ""
"cmake_host_system_information(RESULT <variable>\n"
"                              QUERY WINDOWS_REGISTRY <key> [VALUE_NAMES|"
"SUBKEYS|VALUE <name>]\n"
"                              [VIEW (64|32|64_32|32_64|HOST|TARGET|BOTH)]\n"
"                              [SEPARATOR <separator>]\n"
"                              [ERROR_VARIABLE <result>])"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:308
msgid ""
"Performs query operations on local computer registry subkey. Returns a list "
"of subkeys or value names that are located under the specified subkey in the "
"registry or the data of the specified value name. The result of the queried "
"entity is stored in ``<variable>``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:315
msgid ""
"Querying registry for any other platforms than ``Windows``, including "
"``CYGWIN``, will always returns an empty string and sets an error message in "
"the variable specified with sub-option ``ERROR_VARIABLE``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:319
msgid ""
"``<key>`` specify the full path of a subkey on the local computer. The "
"``<key>`` must include a valid root key. Valid root keys for the local "
"computer are:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:323
msgid "``HKLM`` or ``HKEY_LOCAL_MACHINE``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:324
msgid "``HKCU`` or ``HKEY_CURRENT_USER``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:325
msgid "``HKCR`` or ``HKEY_CLASSES_ROOT``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:326
msgid "``HKU`` or ``HKEY_USERS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:327
msgid "``HKCC`` or ``HKEY_CURRENT_CONFIG``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:329
msgid ""
"And, optionally, the path to a subkey under the specified root key. The path "
"separator can be the slash or the backslash. ``<key>`` is not case "
"sensitive. For example:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:333
msgid ""
"cmake_host_system_information(RESULT result QUERY WINDOWS_REGISTRY "
"\"HKLM\")\n"
"cmake_host_system_information(RESULT result QUERY WINDOWS_REGISTRY \"HKLM/"
"SOFTWARE/Kitware\")\n"
"cmake_host_system_information(RESULT result QUERY WINDOWS_REGISTRY \"HKCU\\"
"\\SOFTWARE\\\\Kitware\")"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:339
msgid "``VALUE_NAMES``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:340
msgid ""
"Request the list of value names defined under ``<key>``. If a default value "
"is defined, it will be identified with the special name ``(default)``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:343
msgid "``SUBKEYS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:344
msgid "Request the list of subkeys defined under ``<key>``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:346
msgid "``VALUE <name>``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:347
msgid ""
"Request the data stored in value named ``<name>``. If ``VALUE`` is not "
"specified or argument is the special name ``(default)``, the content of the "
"default value, if any, will be returned."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:351
msgid ""
"# query default value for HKLM/SOFTWARE/Kitware key\n"
"cmake_host_system_information(RESULT result\n"
"                              QUERY WINDOWS_REGISTRY \"HKLM/SOFTWARE/"
"Kitware\")\n"
"\n"
"# query default value for HKLM/SOFTWARE/Kitware key using special value "
"name\n"
"cmake_host_system_information(RESULT result\n"
"                              QUERY WINDOWS_REGISTRY \"HKLM/SOFTWARE/"
"Kitware\"\n"
"                              VALUE \"(default)\")"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:362
msgid "Supported types are:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:364
msgid "``REG_SZ``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:365
msgid "``REG_EXPAND_SZ``. The returned data is expanded."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:366
msgid ""
"``REG_MULTI_SZ``. The returned is expressed as a CMake list. See also "
"``SEPARATOR`` sub-option."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:368
msgid "``REG_DWORD``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:369
msgid "``REG_QWORD``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:371
msgid "For all other types, an empty string is returned."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:373
msgid "``VIEW``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:374
msgid ""
"Specify which registry views must be queried. When not specified, ``BOTH`` "
"view is used."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:377
msgid "``64``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:378
msgid ""
"Query the 64bit registry. On ``32bit Windows``, returns always an empty "
"string."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:381
msgid "``32``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:382
msgid "Query the 32bit registry."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:384
msgid "``64_32``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:385
msgid ""
"For ``VALUE`` sub-option or default value, query the registry using view "
"``64``, and if the request failed, query the registry using view ``32``. For "
"``VALUE_NAMES`` and ``SUBKEYS`` sub-options, query both views (``64`` and "
"``32``) and merge the results (sorted and duplicates removed)."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:390
msgid "``32_64``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:391
msgid ""
"For ``VALUE`` sub-option or default value, query the registry using view "
"``32``, and if the request failed, query the registry using view ``64``. For "
"``VALUE_NAMES`` and ``SUBKEYS`` sub-options, query both views (``32`` and "
"``64``) and merge the results (sorted and duplicates removed)."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:396
msgid "``HOST``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:397
msgid ""
"Query the registry matching the architecture of the host: ``64`` on ``64bit "
"Windows`` and ``32`` on ``32bit Windows``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:400
msgid "``TARGET``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:401
msgid ""
"Query the registry matching the architecture specified by :variable:"
"`CMAKE_SIZEOF_VOID_P` variable. If not defined, fallback to ``HOST`` view."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:405
msgid "``BOTH``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:406
msgid ""
"Query both views (``32`` and ``64``). The order depends of the following "
"rules: If :variable:`CMAKE_SIZEOF_VOID_P` variable is defined. Use the "
"following view depending of the content of this variable:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:410
msgid "``8``: ``64_32``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:411
msgid "``4``: ``32_64``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:413
msgid ""
"If :variable:`CMAKE_SIZEOF_VOID_P` variable is not defined, rely on "
"architecture of the host:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:416
msgid "``64bit``: ``64_32``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:417
msgid "``32bit``: ``32``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:419
msgid "``SEPARATOR``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:420
msgid ""
"Specify the separator character for ``REG_MULTI_SZ`` type. When not "
"specified, the character ``\\0`` is used."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:423
msgid "``ERROR_VARIABLE <result>``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:424
msgid ""
"Returns any error raised during query operation. In case of success, the "
"variable holds an empty string."
msgstr ""
