# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPatch.cmake:6
msgid "FindPatch"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:10
msgid ""
"Finds the ``patch`` command-line executable for applying diff patches to "
"original files."
msgstr ""

#: ../../../../Modules/FindPatch.cmake:14
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:16
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:18
msgid "``Patch::patch``"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:19
msgid ""
"Target encapsulating the ``patch`` command-line executable, available only "
"if ``patch`` is found."
msgstr ""

#: ../../../../Modules/FindPatch.cmake:22
msgid ""
"This imported target is defined only when :prop_gbl:`CMAKE_ROLE` is "
"``PROJECT``."
msgstr ""

#: ../../../../Modules/FindPatch.cmake:27
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:29
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:31
msgid "``Patch_FOUND``"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:32
msgid ""
"Boolean indicating whether the ``patch`` command-line executable is found."
msgstr ""

#: ../../../../Modules/FindPatch.cmake:35
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:37
msgid "The following cache variables may also be set:"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:39
msgid "``Patch_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:40
msgid "The path to the ``patch`` command-line executable."
msgstr ""

#: ../../../../Modules/FindPatch.cmake:43
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:45
msgid "Finding ``patch`` command and executing it in a process:"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:47
msgid ""
"find_package(Patch)\n"
"if(Patch_FOUND)\n"
"  execute_process(\n"
"    COMMAND ${Patch_EXECUTABLE} -p1 -i ${CMAKE_CURRENT_SOURCE_DIR}/src."
"patch\n"
"  )\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:56
msgid ""
"The imported target can be used, for example, inside the :command:"
"`add_custom_command` command, which patches the given file when some build "
"rule depends on its output:"
msgstr ""

#: ../../../../Modules/FindPatch.cmake:60
msgid ""
"find_package(Patch)\n"
"if(TARGET Patch::patch)\n"
"  # Executed when some build rule depends on the src.c file.\n"
"  add_custom_command(\n"
"    OUTPUT src.c\n"
"    COMMAND Patch::patch -p1 -i ${CMAKE_CURRENT_SOURCE_DIR}/src.patch\n"
"    # ...\n"
"  )\n"
"endif()"
msgstr ""
