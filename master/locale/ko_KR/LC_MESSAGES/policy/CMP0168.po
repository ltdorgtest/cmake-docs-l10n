# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0168.rst:2
msgid "CMP0168"
msgstr ""

#: ../../../policy/CMP0168.rst:6
msgid ""
"The :module:`FetchContent` module implements steps directly instead of "
"through a sub-build."
msgstr ""

#: ../../../policy/CMP0168.rst:9
msgid ""
"CMake 3.29 and below implement FetchContent as a separate sub-build. This "
"required configuring that separate project and using a build tool. This "
"approach can be very slow with some generators and operating systems. CMake "
"3.30 and above prefer to implement the download, update, and patch steps "
"directly as part of the main project."
msgstr ""

#: ../../../policy/CMP0168.rst:15
msgid "The ``NEW`` behavior has the following characteristics:"
msgstr ""

#: ../../../policy/CMP0168.rst:17
msgid ""
"No sub-build is used. All operations are implemented directly from the main "
"project's CMake configure step. When running in CMake script mode, no build "
"tool needs to be available."
msgstr ""

#: ../../../policy/CMP0168.rst:20
msgid ""
"Generator expressions and GNU Make variables of the form ``$(SOMEVAR)`` are "
"not supported. They should not be used in any argument to :command:"
"`FetchContent_Declare` or :command:`FetchContent_Populate`."
msgstr ""

#: ../../../policy/CMP0168.rst:23
msgid ""
"All ``LOG_...`` and ``USES_TERMINAL_...`` options, the ``QUIET`` option, and "
"the :variable:`FETCHCONTENT_QUIET` variable are ignored. :module:"
"`FetchContent` output is always part of the main project's configure output. "
"This also means it now respects the message logging level (see :variable:"
"`CMAKE_MESSAGE_LOG_LEVEL` and :option:`--log-level <cmake --log-level>`). "
"The default message log level should be comparable to using ``QUIET`` with "
"the ``OLD`` policy setting, except that warnings will now be shown."
msgstr ""

#: ../../../policy/CMP0168.rst:31
msgid ""
"The ``PREFIX``, ``TMP_DIR``, ``STAMP_DIR``, ``LOG_DIR``, and "
"``DOWNLOAD_DIR`` options and their associated directory properties are "
"ignored. The :module:`FetchContent` module controls those locations "
"internally."
msgstr ""

#: ../../../policy/CMP0168.rst:34
msgid ""
":option:`cmake --fresh` will remove the stamp and script files used for "
"tracking and populating the dependency. This will force the dependency's "
"download, update, and patch steps to be re-executed. The directory used for "
"downloads is not affected by :option:`cmake --fresh`, so any previously "
"downloaded files for the ``URL`` download method can still be reused."
msgstr ""

#: ../../../policy/CMP0168.rst:40
msgid "The ``OLD`` behavior has the following characteristics:"
msgstr ""

#: ../../../policy/CMP0168.rst:42
msgid ""
"A sub-build is always used to implement the download, update, and patch "
"steps. A build tool must be available, even when using :command:"
"`FetchContent_Populate` in CMake script mode."
msgstr ""

#: ../../../policy/CMP0168.rst:45
msgid ""
"Generator expressions and GNU Make variables of the form ``$(SOMEVAR)`` can "
"be used, although such use is almost always inappropriate. They are "
"evaluated in the sub-build, so they do not see any information from the main "
"build."
msgstr ""

#: ../../../policy/CMP0168.rst:48
msgid ""
"All logging, terminal control, and directory options related to the "
"download, update, or patch steps are supported."
msgstr ""

#: ../../../policy/CMP0168.rst:50
msgid ""
"If the ``QUIET`` option is used, or the :variable:`FETCHCONTENT_QUIET` "
"variable is set to true, warnings will not be shown in the output."
msgstr ""

#: ../../../policy/CMP0168.rst:52
msgid ""
":option:`cmake --fresh` has no effect on the dependency's stamp or script "
"files. Previously executed steps will only re-run if details about the "
"dependency have changed."
msgstr ""

#: ../../../policy/CMP0168.rst:56
msgid ""
"There's a reasonably good chance that users can set the :variable:"
"`CMAKE_POLICY_DEFAULT_CMP0168 <CMAKE_POLICY_DEFAULT_CMP<NNNN>>` variable to "
"``NEW`` to globally switch to the ``NEW`` behavior while waiting for the "
"project and its dependencies to be updated use the ``NEW`` policy setting by "
"default. Projects don't typically make use of the features that the ``NEW`` "
"behavior no longer supports, and even those projects that do will often "
"still work fine when those options are ignored. Before setting this behavior "
"globally, check whether any :command:`FetchContent_Declare` or :command:"
"`FetchContent_Populate` calls use the ignored options in a way that would "
"change observable behavior, other than putting temporary or internally-"
"generated files in different locations."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
