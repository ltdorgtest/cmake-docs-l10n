# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/ExternalData.cmake:6
msgid "ExternalData"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:9
msgid "Contents"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:12
msgid "Manage data files stored outside source tree"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:15
msgid "Introduction"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:17
msgid ""
"Use this module to unambiguously reference data files stored outside the "
"source tree and fetch them at build time from arbitrary local and remote "
"content-addressed locations.  Functions provided by this module recognize "
"arguments with the syntax ``DATA{<name>}`` as references to external data, "
"replace them with full paths to local copies of those data, and create build "
"rules to fetch and update the local copies."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:24
msgid "For example:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:26
msgid ""
"include(ExternalData)\n"
"set(ExternalData_URL_TEMPLATES \"file:///local/%(algo)/%(hash)\"\n"
"                               \"file:////host/share/%(algo)/%(hash)\"\n"
"                               \"http://data.org/%(algo)/%(hash)\")\n"
"ExternalData_Add_Test(MyData\n"
"  NAME MyTest\n"
"  COMMAND MyExe DATA{MyInput.png}\n"
"  )\n"
"ExternalData_Add_Target(MyData)"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:38
msgid ""
"When test ``MyTest`` runs the ``DATA{MyInput.png}`` argument will be "
"replaced by the full path to a real instance of the data file ``MyInput."
"png`` on disk.  If the source tree contains a content link such as ``MyInput."
"png.md5`` then the ``MyData`` target creates a real ``MyInput.png`` in the "
"build tree."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:45
msgid "Module Functions"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:49
msgid ""
"The ``ExternalData_Expand_Arguments`` function evaluates ``DATA{}`` "
"references in its arguments and constructs a new list of arguments:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:52
msgid ""
"ExternalData_Expand_Arguments(\n"
"  <target>   # Name of data management target\n"
"  <outVar>   # Output variable\n"
"  [args...]  # Input arguments, DATA{} allowed\n"
"  )"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:60
msgid ""
"It replaces each ``DATA{}`` reference in an argument with the full path of a "
"real data file on disk that will exist after the ``<target>`` builds."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:65
msgid ""
"The ``ExternalData_Add_Test`` function wraps around the CMake :command:"
"`add_test` command but supports ``DATA{}`` references in its arguments:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:69
msgid ""
"ExternalData_Add_Test(\n"
"  <target>   # Name of data management target\n"
"  ...        # Arguments of add_test(), DATA{} allowed\n"
"  )"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:76
msgid ""
"It passes its arguments through ``ExternalData_Expand_Arguments`` and then "
"invokes the :command:`add_test` command using the results."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:79
msgid ""
"If the arguments after ``<target>`` define a test with an executable that is "
"a CMake target, empty values in the :prop_tgt:`TEST_LAUNCHER` and :prop_tgt:"
"`CROSSCOMPILING_EMULATOR` properties of that target are preserved.  See "
"policy :policy:`CMP0178`."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:87
msgid ""
"The ``ExternalData_Add_Target`` function creates a custom target to manage "
"local instances of data files stored externally:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:90
msgid ""
"ExternalData_Add_Target(\n"
"  <target>                  # Name of data management target\n"
"  [SHOW_PROGRESS <ON|OFF>]  # Show progress during the download\n"
"  )"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:97
msgid ""
"It creates custom commands in the target as necessary to make data files "
"available for each ``DATA{}`` reference previously evaluated by other "
"functions provided by this module. Data files may be fetched from one of the "
"URL templates specified in the ``ExternalData_URL_TEMPLATES`` variable, or "
"may be found locally in one of the paths specified in the "
"``ExternalData_OBJECT_STORES`` variable."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:105
msgid ""
"The ``SHOW_PROGRESS`` argument may be passed to suppress progress "
"information during the download of objects. If not provided, it defaults to "
"``OFF`` for :generator:`Ninja` and :generator:`Ninja Multi-Config` "
"generators and ``ON`` otherwise."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:111
msgid ""
"Typically only one target is needed to manage all external data within a "
"project.  Call this function once at the end of configuration after all data "
"references have been processed."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:116
msgid "Module Variables"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:118
msgid ""
"The following variables configure behavior.  They should be set before "
"calling any of the functions provided by this module."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:123
msgid ""
"The ``ExternalData_BINARY_ROOT`` variable may be set to the directory to "
"hold the real data files named by expanded ``DATA{}`` references.  The "
"default is ``CMAKE_BINARY_DIR``.  The directory layout will mirror that of "
"content links under ``ExternalData_SOURCE_ROOT``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:132
msgid ""
"Specify a full path to a ``.cmake`` custom fetch script identified by "
"``<key>`` in entries of the ``ExternalData_URL_TEMPLATES`` list. See `Custom "
"Fetch Scripts`_."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:140
msgid ""
"The ``ExternalData_HTTPHEADERS`` variable may be used to supply a list of "
"headers, each element containing one header with the form ``Key: Value``. "
"See the :command:`file(DOWNLOAD)` command's ``HTTPHEADER`` option."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:146
msgid ""
"The ``ExternalData_LINK_CONTENT`` variable may be set to the name of a "
"supported hash algorithm to enable automatic conversion of real data files "
"referenced by the ``DATA{}`` syntax into content links.  For each such "
"``<file>`` a content link named ``<file><ext>`` is created.  The original "
"file is renamed to the form ``.ExternalData_<algo>_<hash>`` to stage it for "
"future transmission to one of the locations in the list of URL templates (by "
"means outside the scope of this module).  The data fetch rule created for "
"the content link will use the staged object if it cannot be found using any "
"URL template."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:160
msgid ""
"The real data files named by expanded ``DATA{}`` references may be made "
"available under ``ExternalData_BINARY_ROOT`` using symbolic links on some "
"platforms.  The ``ExternalData_NO_SYMLINKS`` variable may be set to disable "
"use of symbolic links and enable use of copies instead."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:167
msgid ""
"The ``ExternalData_OBJECT_STORES`` variable may be set to a list of local "
"directories that store objects using the layout ``<dir>/%(algo)/%(hash)``. "
"These directories will be searched first for a needed object.  If the object "
"is not available in any store then it will be fetched remotely using the URL "
"templates and added to the first local store listed.  If no stores are "
"specified the default is a location inside the build tree."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:181
msgid "See `Referencing File Series`_."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:185
msgid ""
"The ``ExternalData_SOURCE_ROOT`` variable may be set to the highest source "
"directory containing any path named by a ``DATA{}`` reference.  The default "
"is ``CMAKE_SOURCE_DIR``.  ``ExternalData_SOURCE_ROOT`` and "
"``CMAKE_SOURCE_DIR`` must refer to directories within a single source "
"distribution (e.g.  they come together in one tarball)."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:193
msgid ""
"The ``ExternalData_TIMEOUT_ABSOLUTE`` variable sets the download absolute "
"timeout, in seconds, with a default of ``300`` seconds. Set to ``0`` to "
"disable enforcement."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:199
msgid ""
"The ``ExternalData_TIMEOUT_INACTIVITY`` variable sets the download "
"inactivity timeout, in seconds, with a default of ``60`` seconds. Set to "
"``0`` to disable enforcement."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:207
msgid ""
"Specify a custom URL component to be substituted for URL template "
"placeholders of the form ``%(algo:<key>)``, where ``<key>`` is a valid C "
"identifier, when fetching an object referenced via hash algorithm "
"``<algo>``.  If not defined, the default URL component is just ``<algo>`` "
"for any ``<key>``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:215
msgid ""
"The ``ExternalData_URL_TEMPLATES`` may be set to provide a list of URL "
"templates using the placeholders ``%(algo)`` and ``%(hash)`` in each "
"template.  Data fetch rules try each URL template in order by substituting "
"the hash algorithm name for ``%(algo)`` and the hash value for ``%(hash)``.  "
"Alternatively one may use ``%(algo:<key>)`` with "
"``ExternalData_URL_ALGO_<algo>_<key>`` variables to gain more flexibility in "
"remote URLs."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:224
msgid "Referencing Files"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:227
msgid "Referencing Single Files"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:229
msgid ""
"The ``DATA{}`` syntax is literal and the ``<name>`` is a full or relative "
"path within the source tree.  The source tree must contain either a real "
"data file at ``<name>`` or a \"content link\" at ``<name><ext>`` containing "
"a hash of the real file using a hash algorithm corresponding to ``<ext>``. "
"For example, the argument ``DATA{img.png}`` may be satisfied by either a "
"real ``img.png`` file in the current source directory or a ``img.png.md5`` "
"file containing its MD5 sum."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:237
msgid ""
"Multiple content links of the same name with different hash algorithms are "
"supported (e.g. ``img.png.sha256`` and ``img.png.sha1``) so long as they all "
"correspond to the same real file.  This allows objects to be fetched from "
"sources indexed by different hash algorithms."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:244
msgid "Referencing File Series"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:246
msgid ""
"The ``DATA{}`` syntax can be told to fetch a file series using the form "
"``DATA{<name>,:}``, where the ``:`` is literal.  If the source tree contains "
"a group of files or content links named like a series then a reference to "
"one member adds rules to fetch all of them.  Although all members of a "
"series are fetched, only the file originally named by the ``DATA{}`` "
"argument is substituted for it.  The default configuration recognizes file "
"series names ending with ``#.ext``, ``_#.ext``, ``.#.ext``, or ``-#.ext`` "
"where ``#`` is a sequence of decimal digits and ``.ext`` is any single "
"extension.  Configure it with a regex that parses ``<number>`` and "
"``<suffix>`` parts from the end of ``<name>``:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:257
msgid ""
"``ExternalData_SERIES_PARSE`` - regex of the form ``(<number>)(<suffix>)$``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:259
msgid "For more complicated cases set:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:261
msgid "``ExternalData_SERIES_PARSE`` - regex with at least two ``()`` groups."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:262
msgid ""
"``ExternalData_SERIES_PARSE_PREFIX`` - regex group number of the "
"``<prefix>``, if any."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:263
msgid ""
"``ExternalData_SERIES_PARSE_NUMBER`` - regex group number of the "
"``<number>``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:264
msgid ""
"``ExternalData_SERIES_PARSE_SUFFIX`` - regex group number of the "
"``<suffix>``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:266
msgid ""
"Configure series number matching with a regex that matches the ``<number>`` "
"part of series members named ``<prefix><number><suffix>``:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:269
msgid ""
"``ExternalData_SERIES_MATCH`` - regex matching ``<number>`` in all series "
"members"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:272
msgid ""
"Note that the ``<suffix>`` of a series does not include a hash-algorithm "
"extension."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:276
msgid "Referencing Associated Files"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:278
msgid ""
"The ``DATA{}`` syntax can alternatively match files associated with the "
"named file and contained in the same directory.  Associated files may be "
"specified by options using the syntax ``DATA{<name>,<opt1>,<opt2>,...}``.  "
"Each option may specify one file by name or specify a regular expression to "
"match file names using the syntax ``REGEX:<regex>``.  For example, the "
"arguments::"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:285
msgid ""
"DATA{MyData/MyInput.mhd,MyInput.img}                   # File pair\n"
"DATA{MyData/MyFrames00.png,REGEX:MyFrames[0-9]+\\\\.png} # Series"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:288
msgid ""
"will pass ``MyInput.mha`` and ``MyFrames00.png`` on the command line but "
"ensure that the associated files are present next to them."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:292
msgid "Referencing Directories"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:294
msgid ""
"The ``DATA{}`` syntax may reference a directory using a trailing slash and a "
"list of associated files.  The form ``DATA{<name>/,<opt1>,<opt2>,...}`` adds "
"rules to fetch any files in the directory that match one of the associated "
"file options.  For example, the argument ``DATA{MyDataDir/,REGEX:.*}`` will "
"pass the full path to a ``MyDataDir`` directory on the command line and "
"ensure that the directory contains files corresponding to every file or "
"content link in the ``MyDataDir`` source directory."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:303
msgid ""
"In order to match associated files in subdirectories, specify a ``RECURSE:`` "
"option, e.g. ``DATA{MyDataDir/,RECURSE:,REGEX:.*}``."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:308
msgid "Hash Algorithms"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:310
msgid "The following hash algorithms are supported:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:313
msgid "%(algo)"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:313
msgid "<ext>"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:313
msgid "Description"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:315
msgid "``MD5``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:315
msgid "``.md5``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:315
msgid "Message-Digest Algorithm 5, RFC 1321"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:316
msgid "``SHA1``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:316
msgid "``.sha1``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:316
msgid "US Secure Hash Algorithm 1, RFC 3174"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:317
msgid "``SHA224``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:317
msgid "``.sha224``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:317
#: ../../../../Modules/ExternalData.cmake:318
#: ../../../../Modules/ExternalData.cmake:319
#: ../../../../Modules/ExternalData.cmake:320
msgid "US Secure Hash Algorithms, RFC 4634"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:318
msgid "``SHA256``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:318
msgid "``.sha256``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:319
msgid "``SHA384``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:319
msgid "``.sha384``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:320
msgid "``SHA512``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:320
msgid "``.sha512``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:321
msgid "``SHA3_224``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:321
msgid "``.sha3-224``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:321
#: ../../../../Modules/ExternalData.cmake:322
#: ../../../../Modules/ExternalData.cmake:323
#: ../../../../Modules/ExternalData.cmake:324
msgid "Keccak SHA-3"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:322
msgid "``SHA3_256``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:322
msgid "``.sha3-256``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:323
msgid "``SHA3_384``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:323
msgid "``.sha3-384``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:324
msgid "``SHA3_512``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:324
msgid "``.sha3-512``"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:327
msgid "Added the ``SHA3_*`` hash algorithms."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:330
msgid ""
"Note that the hashes are used only for unique data identification and "
"download verification."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:336
msgid "Custom Fetch Scripts"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:340
msgid ""
"When a data file must be fetched from one of the URL templates specified in "
"the ``ExternalData_URL_TEMPLATES`` variable, it is normally downloaded using "
"the :command:`file(DOWNLOAD)` command. One may specify usage of a custom "
"fetch script by using a URL template of the form "
"``ExternalDataCustomScript://<key>/<loc>``. The ``<key>`` must be a C "
"identifier, and the ``<loc>`` must contain the ``%(algo)`` and ``%(hash)`` "
"placeholders. A variable corresponding to the key, "
"``ExternalData_CUSTOM_SCRIPT_<key>``, must be set to the full path to a ``."
"cmake`` script file.  The script will be included to perform the actual "
"fetch, and provided with the following variables:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:354
msgid ""
"When a custom fetch script is loaded, this variable is set to the location "
"part of the URL, which will contain the substituted hash algorithm name and "
"content hash value."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:360
msgid ""
"When a custom fetch script is loaded, this variable is set to the full path "
"to a file in which the script must store the fetched content.  The name of "
"the file is unspecified and should not be interpreted in any way."
msgstr ""

#: ../../../../Modules/ExternalData.cmake:365
msgid ""
"The custom fetch script is expected to store fetched content in the file or "
"set a variable:"
msgstr ""

#: ../../../../Modules/ExternalData.cmake:370
msgid ""
"When a custom fetch script fails to fetch the requested content, it must set "
"this variable to a short one-line message describing the reason for failure."
msgstr ""
