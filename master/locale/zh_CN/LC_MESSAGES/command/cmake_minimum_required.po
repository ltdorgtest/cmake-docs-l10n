# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/cmake_minimum_required.rst:2
msgid "cmake_minimum_required"
msgstr ""

#: ../../../command/cmake_minimum_required.rst:4
msgid "Require a minimum version of cmake."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:6
msgid "cmake_minimum_required(VERSION <min>[...<policy_max>] [FATAL_ERROR])"
msgstr ""

#: ../../../command/cmake_minimum_required.rst:10
msgid "The optional ``<policy_max>`` version behavior; ignored in older CMake."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:13
msgid ""
"Sets the minimum required version of cmake for a project. Also updates the "
"policy settings as explained below."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:16
msgid ""
"``<min>`` and the optional ``<policy_max>`` are each CMake versions of the "
"form ``major.minor[.patch[.tweak]]``, and the ``...`` is literal."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:19
msgid ""
"If the running version of CMake is lower than the ``<min>`` required version "
"it will stop processing the project and report an error. The optional "
"``<policy_max>`` version, if specified, must be at least the ``<min>`` "
"version and sets the `Policy Version`_. If the running version of CMake is "
"older than 3.12, the extra ``...`` dots will be seen as version component "
"separators, resulting in the ``...<max>`` part being ignored and preserving "
"the pre-3.12 behavior of basing policies on ``<min>``."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:28
msgid ""
"This command will set the value of the :variable:"
"`CMAKE_MINIMUM_REQUIRED_VERSION` variable to ``<min>``."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:31
msgid ""
"The ``FATAL_ERROR`` option is accepted but ignored by CMake 2.6 and higher.  "
"It should be specified so CMake versions 2.4 and lower fail with an error "
"instead of just a warning."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:36
msgid ""
"Call the ``cmake_minimum_required()`` command at the beginning of the top-"
"level ``CMakeLists.txt`` file even before calling the :command:`project` "
"command.  It is important to establish version and policy settings before "
"invoking other commands whose behavior they may affect.  See also policy :"
"policy:`CMP0000`."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:42
msgid ""
"Calling ``cmake_minimum_required()`` inside a :command:`function` limits "
"some effects to the function scope when invoked.  For example, the :variable:"
"`CMAKE_MINIMUM_REQUIRED_VERSION` variable won't be set in the calling "
"scope.  Functions do not introduce their own policy scope though, so policy "
"settings of the caller *will* be affected (see below).  Due to this mix of "
"things that do and do not affect the calling scope, calling "
"``cmake_minimum_required()`` inside a function is generally discouraged."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:54
msgid "Policy Version"
msgstr ""

#: ../../../command/cmake_minimum_required.rst:56
msgid "``cmake_minimum_required(VERSION <min>[...<max>])`` implicitly invokes"
msgstr ""

#: ../../../command/cmake_minimum_required.rst:58
msgid "cmake_policy(VERSION <min>[...<max>])"
msgstr ""

#: ../../../command/POLICY_VERSION.txt:1
msgid ""
"This specifies that the current CMake code is written for the given range of "
"CMake versions, ``<min>[...<max>]``. It sets the \"policy version\" to:"
msgstr ""

#: ../../../command/POLICY_VERSION.txt:4
msgid "the range's ``<max>`` version, if specified, or to"
msgstr ""

#: ../../../command/POLICY_VERSION.txt:5
msgid "the ``<min>`` version, or to"
msgstr ""

#: ../../../command/POLICY_VERSION.txt:6
msgid ""
"the value of the :variable:`CMAKE_POLICY_VERSION_MINIMUM` variable if it is "
"higher than the other two versions."
msgstr ""

#: ../../../command/POLICY_VERSION.txt:9
msgid ""
"The policy version effectively requests behavior preferred as of a given "
"CMake version and tells newer CMake versions to warn about their new "
"policies. All policies known to the running version of CMake and introduced "
"in that version or earlier will be set to use ``NEW`` behavior. All policies "
"introduced in later versions will be unset (unless the :variable:"
"`CMAKE_POLICY_DEFAULT_CMP<NNNN>` variable sets a default). This effectively "
"requests behavior preferred as of a given CMake version and tells newer "
"CMake versions to warn about their new policies."
msgstr ""

#: ../../../command/DEPRECATED_POLICY_VERSIONS.txt:3
msgid ""
"Compatibility with versions of CMake older than 3.5 is removed. Calls to :"
"command:`cmake_minimum_required(VERSION)` or :command:"
"`cmake_policy(VERSION)` that do not specify at least 3.5 as their policy "
"version (optionally via ``...<max>``) will produce an error in CMake 4.0 and "
"above."
msgstr ""

#: ../../../command/DEPRECATED_POLICY_VERSIONS.txt:11
msgid ""
"Compatibility with versions of CMake older than 3.10 is deprecated. Calls "
"to :command:`cmake_minimum_required(VERSION)` or :command:"
"`cmake_policy(VERSION)` that do not specify at least 3.10 as their policy "
"version (optionally via ``...<max>``) will produce a deprecation warning in "
"CMake 3.31 and above."
msgstr ""

#: ../../../command/DEPRECATED_POLICY_VERSIONS.txt:19
msgid ""
"Compatibility with versions of CMake older than 3.5 is deprecated. Calls to :"
"command:`cmake_minimum_required(VERSION)` or :command:"
"`cmake_policy(VERSION)` that do not specify at least 3.5 as their policy "
"version (optionally via ``...<max>``) will produce a deprecation warning in "
"CMake 3.27 and above."
msgstr ""

#: ../../../command/DEPRECATED_POLICY_VERSIONS.txt:27
msgid ""
"Compatibility with versions of CMake older than 2.8.12 is deprecated. Calls "
"to :command:`cmake_minimum_required(VERSION)` or :command:"
"`cmake_policy(VERSION)` that do not specify at least 2.8.12 as their policy "
"version (optionally via ``...<max>``) will produce a deprecation warning in "
"CMake 3.19 and above."
msgstr ""

#: ../../../command/cmake_minimum_required.rst:67
msgid "See Also"
msgstr ""

#: ../../../command/cmake_minimum_required.rst:69
msgid ":command:`cmake_policy`"
msgstr ""
