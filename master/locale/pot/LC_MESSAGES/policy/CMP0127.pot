# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-07 08:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0127.rst:2
msgid "CMP0127"
msgstr ""

#: ../../../policy/CMP0127.rst:6
msgid ""
":command:`cmake_dependent_option` supports full :ref:`Condition Syntax`."
msgstr ""

#: ../../../policy/CMP0127.rst:8
msgid ""
"The ``<condition>`` parameter accepts a :ref:`semicolon-separated list "
"<CMake Language Lists>` of conditions.  CMake 3.21 and lower evaluates each "
"``condition`` as ``if(${condition})``, which does not properly handle "
"conditions with nested paren groups.  CMake 3.22 and above instead prefer to "
"evaluate each ``condition`` as ``if(<condition>)``, where ``<condition>`` is "
"re-parsed as if literally written in a call to :command:`if`.  This allows "
"expressions like::"
msgstr ""

#: ../../../policy/CMP0127.rst:16
msgid "\"A AND (B OR C)\""
msgstr ""

#: ../../../policy/CMP0127.rst:18
msgid "but requires expressions like::"
msgstr ""

#: ../../../policy/CMP0127.rst:20
msgid "\"FOO MATCHES (UPPER|lower)\""
msgstr ""

#: ../../../policy/CMP0127.rst:22
msgid "to be re-written as::"
msgstr ""

#: ../../../policy/CMP0127.rst:24
msgid "\"FOO MATCHES \\\"(UPPER|lower)\\\"\""
msgstr ""

#: ../../../policy/CMP0127.rst:26
msgid ""
"Policy ``CMP0127`` provides compatibility for projects that have not been "
"updated to expect the new behavior."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
