# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../guide/tutorial/Adding a Library.rst:2
msgid "Step 2: Adding a Library"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:4
msgid ""
"At this point, we have seen how to create a basic project using CMake. In "
"this step, we will learn how to create and use a library in our project. We "
"will also see how to make the use of our library optional."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:9
msgid "Exercise 1 - Creating a Library"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:11
msgid ""
"To add a library in CMake, use the :command:`add_library` command and "
"specify which source files should make up the library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:14
msgid ""
"Rather than placing all of the source files in one directory, we can "
"organize our project with one or more subdirectories. In this case, we will "
"create a subdirectory specifically for our library. Here, we can add a new "
"``CMakeLists.txt`` file and one or more source files. In the top level "
"``CMakeLists.txt`` file, we will use the :command:`add_subdirectory` command "
"to add the subdirectory to the build."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:21
msgid ""
"Once the library is created, it is connected to our executable target with :"
"command:`target_include_directories` and :command:`target_link_libraries`."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:25 Library.rst:219
msgid "Goal"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:27
msgid "Add and use a library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:30 Library.rst:225
msgid "Helpful Resources"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:32
msgid ":command:`add_library`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:33
msgid ":command:`add_subdirectory`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:34
msgid ":command:`target_include_directories`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:35
msgid ":command:`target_link_libraries`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:36
msgid ":variable:`PROJECT_SOURCE_DIR`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:39 Library.rst:232
msgid "Files to Edit"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:41
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:42
msgid "``tutorial.cxx``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:43 Library.rst:234
msgid "``MathFunctions/CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:46 Library.rst:238
msgid "Getting Started"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:48
msgid ""
"In this exercise, we will add a library to our project that contains our own "
"implementation for computing the square root of a number. The executable can "
"then use this library instead of the standard square root function provided "
"by the compiler."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:53
msgid ""
"For this tutorial we will put the library into a subdirectory called "
"``MathFunctions``. This directory already contains the header files "
"``MathFunctions.h`` and ``mysqrt.h``. Their respective source files "
"``MathFunctions.cxx`` and ``mysqrt.cxx`` are also provided. We will not need "
"to modify any of these files. ``mysqrt.cxx`` has one function called "
"``mysqrt`` that provides similar functionality to the compiler's ``sqrt`` "
"function. ``MathFunctions.cxx`` contains one function ``sqrt`` which serves "
"to hide the implementation details of ``sqrt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:62
msgid ""
"From the ``Help/guide/tutorial/Step2`` directory, start with ``TODO 1`` and "
"complete through ``TODO 6``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:65
msgid ""
"First, fill in the one line ``CMakeLists.txt`` in the ``MathFunctions`` "
"subdirectory."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:68
msgid "Next, edit the top level ``CMakeLists.txt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:70
msgid ""
"Finally, use the newly created ``MathFunctions`` library in ``tutorial.cxx``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:73 Library.rst:255
msgid "Build and Run"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:75
msgid ""
"Run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your chosen "
"build tool."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:79
msgid "Below is a refresher of what that looks like from the command line:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:81
msgid ""
"mkdir Step2_build\n"
"cd Step2_build\n"
"cmake ../Step2\n"
"cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:88
msgid ""
"Try to use the newly built ``Tutorial`` and ensure that it is still "
"producing accurate square root values."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:92 Library.rst:288
msgid "Solution"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:94
msgid ""
"In the ``CMakeLists.txt`` file in the ``MathFunctions`` directory, we create "
"a library target called ``MathFunctions`` with :command:`add_library`. The "
"source files for the library are passed as an argument to :command:"
"`add_library`. This looks like the following line:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:99
msgid "<details><summary>TODO 1: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:103
msgid "TODO 1: MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:103
msgid "add_library(MathFunctions MathFunctions.cxx mysqrt.cxx)"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:109 Library.rst:127
#: Library.rst:144 Library.rst:166 Library.rst:183 Library.rst:200
#: Library.rst:306 Library.rst:330 Library.rst:353 Library.rst:370
#: Library.rst:386 Library.rst:414 Library.rst:432 Library.rst:449
msgid "</details>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:113
msgid ""
"To make use of the new library we will add an :command:`add_subdirectory` "
"call in the top-level ``CMakeLists.txt`` file so that the library will get "
"built."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:117
msgid "<details><summary>TODO 2: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:121
msgid "TODO 2: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:121
msgid "add_subdirectory(MathFunctions)"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:131
msgid ""
"Next, the new library target is linked to the executable target using :"
"command:`target_link_libraries`."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:134
msgid "<details><summary>TODO 3: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:138
msgid "TODO 3: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:138
msgid "target_link_libraries(Tutorial PUBLIC MathFunctions)"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:148
msgid ""
"Finally we need to specify the library's header file location. Modify the "
"existing :command:`target_include_directories` call to add the "
"``MathFunctions`` subdirectory as an include directory so that the "
"``MathFunctions.h`` header file can be found."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:153
msgid "<details><summary>TODO 4: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:157
msgid "TODO 4: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:157
msgid ""
"target_include_directories(Tutorial PUBLIC\n"
"                          \"${PROJECT_BINARY_DIR}\"\n"
"                          \"${PROJECT_SOURCE_DIR}/MathFunctions\"\n"
"                          )"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:170
msgid ""
"Now let's use our library. In ``tutorial.cxx``, include ``MathFunctions.h``:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:172
msgid "<details><summary>TODO 5: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:176
msgid "TODO 5: tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:176
msgid ""
"\n"
"#include \"MathFunctions.h\"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:187
msgid ""
"Lastly, replace ``sqrt`` with the wrapper function ``mathfunctions::sqrt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:189
msgid "<details><summary>TODO 6: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:193
msgid "TODO 6: tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:193
msgid ""
"\n"
"  double const outputValue = mathfunctions::sqrt(inputValue);\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:205
msgid "Exercise 2 - Adding an Option"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:207
msgid ""
"Now let us add an option in the MathFunctions library to allow developers to "
"select either the custom square root implementation or the built in standard "
"implementation. While for the tutorial there really isn't any need to do so, "
"for larger projects this is a common occurrence."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:213
msgid ""
"CMake can do this using the :command:`option` command. This gives users a "
"variable which they can change when configuring their cmake build. This "
"setting will be stored in the cache so that the user does not need to set "
"the value each time they run CMake on a build directory."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:221
msgid "Add the option to build without ``MathFunctions``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:227
msgid ":command:`if`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:228
msgid ":command:`option`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:229
msgid ":command:`target_compile_definitions`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:235
msgid "``MathFunctions/MathFunctions.cxx``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:240
msgid ""
"Start with the resulting files from Exercise 1. Complete ``TODO 7`` through "
"``TODO 14``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:243
msgid ""
"First create a variable ``USE_MYMATH`` using the :command:`option` command "
"in ``MathFunctions/CMakeLists.txt``. In that same file, use that option to "
"pass a compile definition to the ``MathFunctions`` library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:247
msgid ""
"Then, update ``MathFunctions.cxx`` to redirect compilation based on "
"``USE_MYMATH``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:250
msgid ""
"Lastly, prevent ``mysqrt.cxx`` from being compiled when ``USE_MYMATH`` is on "
"by making it its own library inside of the ``USE_MYMATH`` block of "
"``MathFunctions/CMakeLists.txt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:257
msgid ""
"Since we have our build directory already configured from Exercise 1, we can "
"rebuild by simply calling the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:260
msgid ""
"cd ../Step2_build\n"
"cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:265
msgid ""
"Next, run the ``Tutorial`` executable on a few numbers to verify that it's "
"still correct."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:268
msgid ""
"Now let's update the value of ``USE_MYMATH`` to ``OFF``. The easiest way is "
"to use the :manual:`cmake-gui <cmake-gui(1)>` or  :manual:`ccmake "
"<ccmake(1)>` if you're in the terminal. Or, alternatively, if you want to "
"change the option from the command-line, try:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:273
msgid "cmake ../Step2 -DUSE_MYMATH=OFF"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:277
msgid "Now, rebuild the code with the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:279
msgid "cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:283
msgid ""
"Then, run the executable again to ensure that it still works with "
"``USE_MYMATH`` set to ``OFF``. Which function gives better results, ``sqrt`` "
"or ``mysqrt``?"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:290
msgid ""
"The first step is to add an option to ``MathFunctions/CMakeLists.txt``. This "
"option will be displayed in the :manual:`cmake-gui <cmake-gui(1)>` and :"
"manual:`ccmake <ccmake(1)>` with a default value of ``ON`` that can be "
"changed by the user."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:295
msgid "<details><summary>TODO 7: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:299
msgid "TODO 7: MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:299
msgid "option(USE_MYMATH \"Use tutorial provided math implementation\" ON)\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:310
msgid ""
"Next, make building and linking our library with ``mysqrt`` function "
"conditional using this new option."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:313
msgid ""
"Create an :command:`if` statement which checks the value of ``USE_MYMATH``. "
"Inside the :command:`if` block, put the :command:"
"`target_compile_definitions` command with the compile definition "
"``USE_MYMATH``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:318
msgid "<details><summary>TODO 8: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:322
msgid "TODO 8: MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:322
msgid ""
"if (USE_MYMATH)\n"
"  target_compile_definitions(MathFunctions PRIVATE \"USE_MYMATH\")\n"
"endif()"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:334
msgid ""
"When ``USE_MYMATH`` is ``ON``, the compile definition ``USE_MYMATH`` will be "
"set. We can then use this compile definition to enable or disable sections "
"of our source code."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:338
msgid ""
"The corresponding changes to the source code are fairly straightforward. In "
"``MathFunctions.cxx``, we make ``USE_MYMATH`` control which square root "
"function is used:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:342
msgid "<details><summary>TODO 9: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:346
msgid "TODO 9: MathFunctions/MathFunctions.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:346
msgid ""
"#ifdef USE_MYMATH\n"
"  return detail::mysqrt(x);\n"
"#else\n"
"  return std::sqrt(x);\n"
"#endif\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:357
msgid "Next, we need to include ``mysqrt.h`` if ``USE_MYMATH`` is defined."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:359
msgid "<details><summary>TODO 10: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:363
msgid "TODO 10: MathFunctions/MathFunctions.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:363
msgid ""
"\n"
"#ifdef USE_MYMATH\n"
"#  include \"mysqrt.h\"\n"
"#endif\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:374
msgid ""
"Finally, we need to include ``cmath`` now that we are using ``std::sqrt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:376
msgid "<details><summary>TODO 11: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:380
msgid "TODO 11 : MathFunctions/MathFunctions.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:380
msgid "#include <cmath>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:390
msgid ""
"At this point, if ``USE_MYMATH`` is ``OFF``, ``mysqrt.cxx`` would not be "
"used but it will still be compiled because the ``MathFunctions`` target has "
"``mysqrt.cxx`` listed under sources."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:394
msgid ""
"There are a few ways to fix this. The first option is to use :command:"
"`target_sources` to add ``mysqrt.cxx`` from within the ``USE_MYMATH`` block. "
"Another option is to create an additional library within the ``USE_MYMATH`` "
"block which is responsible for compiling ``mysqrt.cxx``. For the sake of "
"this tutorial, we are going to create an additional library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:400
msgid ""
"First, from within ``USE_MYMATH`` create a library called ``SqrtLibrary`` "
"that has sources ``mysqrt.cxx``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:403
msgid "<details><summary>TODO 12: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:407
msgid "TODO 12 : MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:407
msgid ""
"  add_library(SqrtLibrary STATIC\n"
"              mysqrt.cxx\n"
"              )\n"
"\n"
"  # TODO 6: Link SqrtLibrary to tutorial_compiler_flags\n"
"\n"
"  target_link_libraries(MathFunctions PRIVATE SqrtLibrary)\n"
"endif()\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:418
msgid ""
"Next, we link ``SqrtLibrary`` onto ``MathFunctions`` when ``USE_MYMATH`` is "
"enabled."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:421
msgid "<details><summary>TODO 13: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:425
msgid "TODO 13 : MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:425
msgid ""
"\n"
"  target_link_libraries(MathFunctions PRIVATE SqrtLibrary)\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:436
msgid ""
"Finally, we can remove ``mysqrt.cxx`` from our ``MathFunctions`` library "
"source list because it will be pulled in when ``SqrtLibrary`` is included."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:439
msgid "<details><summary>TODO 14: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:443
msgid "TODO 14 : MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:443
msgid ""
"add_library(MathFunctions MathFunctions.cxx)\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:453
msgid ""
"With these changes, the ``mysqrt`` function is now completely optional to "
"whoever is building and using the ``MathFunctions`` library. Users can "
"toggle ``USE_MYMATH`` to manipulate what library is used in the build."
msgstr ""
