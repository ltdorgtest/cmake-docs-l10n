# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:6
msgid "FindPackageHandleStandardArgs"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:8
msgid ""
"This module provides commands intended for use in :ref:`Find Modules` "
"implementing :command:`find_package(<PackageName>)` calls."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:11
msgid "Load this module in a CMake find module with:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:13
#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:254
msgid "``FindFoo.cmake``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:13
msgid "include(FindPackageHandleStandardArgs)"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:19
msgid "Commands"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:21
msgid "This module provides the following commands:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:23
msgid ":command:`find_package_handle_standard_args`"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:24
msgid ":command:`find_package_check_version`"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:28
msgid ""
"Handles the ``REQUIRED``, ``QUIET`` and version-related arguments of :"
"command:`find_package`."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:31
msgid "There are two signatures:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:33
msgid ""
"find_package_handle_standard_args(\n"
"  <PackageName>\n"
"  (DEFAULT_MSG|<custom-failure-message>)\n"
"  <required-vars>...\n"
")\n"
"\n"
"find_package_handle_standard_args(\n"
"  <PackageName>\n"
"  [REQUIRED_VARS <required-vars>...]\n"
"  [VERSION_VAR <version-var>]\n"
"  [HANDLE_VERSION_RANGE]\n"
"  [HANDLE_COMPONENTS]\n"
"  [CONFIG_MODE]\n"
"  [NAME_MISMATCHED]\n"
"  [REASON_FAILURE_MESSAGE <reason-failure-message>]\n"
"  [FAIL_MESSAGE <custom-failure-message>]\n"
"  [FOUND_VAR <result-var>] # Deprecated\n"
")"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:54
msgid ""
"This command sets the ``<PackageName>_FOUND`` variable to ``TRUE`` if all "
"the variables listed in ``<required-vars>...`` contain valid results (e.g., "
"valid filepaths) and any optional constraints are satisfied, and ``FALSE`` "
"otherwise.  A success or failure message may be displayed based on the "
"results and on whether the ``REQUIRED`` and/or ``QUIET`` option was given to "
"the :command:`find_package` call."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:61
#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:167
msgid "The arguments are:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:63
msgid "``<PackageName>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:64
msgid ""
"The name of the package.  For example, as written in the ``Find<PackageName>."
"cmake`` find module filename."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:67
msgid "``(DEFAULT_MSG|<custom-failure-message>)``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:68
msgid ""
"In the simple signature this specifies the failure message. Use "
"``DEFAULT_MSG`` to ask for a default message to be computed (recommended).  "
"Not valid in the full signature."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:72
msgid "``REQUIRED_VARS <required-vars>...``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:73
msgid ""
"Specify the variables which are required for this package. These may be "
"named in the generated failure message asking the user to set the missing "
"variable values.  Therefore these should typically be cache entries such as "
"``Foo_LIBRARY`` and not output variables like ``Foo_LIBRARIES``."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:79
msgid "If ``HANDLE_COMPONENTS`` is specified, this option can be omitted."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:82
msgid "``VERSION_VAR <version-var>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:83
msgid ""
"Specify the name of a variable that holds the version of the package that "
"has been found.  This version will be checked against the (potentially) "
"specified required version given to the :command:`find_package` call, "
"including its ``EXACT`` option. The default messages include information "
"about the required version and the version which has been actually found, "
"both if the version is ok or not."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:91
#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:176
msgid "``HANDLE_VERSION_RANGE``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:94
msgid ""
"Enable handling of a version range, if one is specified. Without this "
"option, a developer warning will be displayed if a version range is "
"specified."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:98
msgid "``HANDLE_COMPONENTS``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:99
msgid ""
"Enable handling of package components.  In this case, the command will "
"report which components have been found and which are missing, and the "
"``<PackageName>_FOUND`` variable will be set to ``FALSE`` if any of the "
"required components (i.e. not the ones listed after the "
"``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are missing."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:106
msgid "``CONFIG_MODE``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:107
msgid ""
"Specify that the calling find module is a wrapper around a call to "
"``find_package(<PackageName> NO_MODULE)``.  This implies a ``VERSION_VAR`` "
"value of ``<PackageName>_VERSION``.  The command will automatically check "
"whether the package configuration file was found."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:113
msgid "``NAME_MISMATCHED``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:116
msgid ""
"Indicate that the ``<PackageName>`` does not match the value of :variable:"
"`CMAKE_FIND_PACKAGE_NAME` variable. This is usually a mistake and raises a "
"warning, but it may be intentional for usage of the command for components "
"of a larger package."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:121
msgid "``REASON_FAILURE_MESSAGE <reason-failure-message>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:124
msgid ""
"Specify a custom message of the reason for the failure which will be "
"appended to the default generated message."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:127
msgid "``FAIL_MESSAGE <custom-failure-message>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:128
msgid ""
"Specify a custom failure message instead of using the default generated "
"message.  Not recommended."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:131
msgid "``FOUND_VAR <result-var>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:132
msgid "This option should no longer be used."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:135
msgid ""
"Specifies either ``<PackageName>_FOUND`` or ``<PACKAGENAME>_FOUND`` as the "
"result variable.  This exists only for backward compatibility with older "
"versions of CMake and is now ignored.  Result variables of both names are "
"now always set for compatibility also with or without this option."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:142
msgid ""
"If ``<PackageName>`` does not match :variable:`CMAKE_FIND_PACKAGE_NAME` for "
"the calling module, a warning that there is a mismatch is given.  The "
"``FPHSA_NAME_MISMATCHED`` variable may be set to bypass the warning if using "
"the old signature and the ``NAME_MISMATCHED`` argument using the new "
"signature.  To avoid forcing the caller to require newer versions of CMake "
"for usage, the variable's value will be used if defined when the "
"``NAME_MISMATCHED`` argument is not passed for the new signature (but using "
"both is an error)."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:155
msgid ""
"Checks if a given version is valid against the version-related arguments of :"
"command:`find_package`:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:158
msgid ""
"find_package_check_version(\n"
"  <version>\n"
"  <result-var>\n"
"  [HANDLE_VERSION_RANGE]\n"
"  [RESULT_MESSAGE_VARIABLE <message-var>]\n"
")"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:169
msgid "``<version>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:170
msgid "The version string to check."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:172
msgid "``<result-var>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:173
msgid ""
"Name of the result variable that will hold a boolean value giving the result "
"of the check."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:177
msgid ""
"Enable handling of a version range, if one is specified.  Without this "
"option, a developer warning will be displayed if a version range is "
"specified."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:181
msgid "``RESULT_MESSAGE_VARIABLE <message-var>``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:182
msgid ""
"Specify a variable to get back a message describing the result of the check."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:185
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:188
msgid "Examples: Full Signature"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:190
msgid ""
"Example for using a full signature of "
"``find_package_handle_standard_args()``:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:192
msgid "``FindLibArchive.cmake``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:192
msgid ""
"include(FindPackageHandleStandardArgs)\n"
"find_package_handle_standard_args(\n"
"  LibArchive\n"
"  REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n"
"  VERSION_VAR LibArchive_VERSION\n"
")"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:202
msgid ""
"In this case, the ``LibArchive`` package is considered to be found if both "
"``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid. Also the "
"version of ``LibArchive`` will be checked by using the version contained in "
"``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given, the default "
"messages will be printed."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:208
msgid ""
"Another example for the full signature of "
"``find_package_handle_standard_args()``:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:211
msgid "``FindAutomoc4.cmake``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:211
msgid ""
"find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n"
"\n"
"include(FindPackageHandleStandardArgs)\n"
"find_package_handle_standard_args(Automoc4 CONFIG_MODE)"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:219
msgid ""
"In this case, a ``FindAutomoc4.cmake`` module wraps a call to "
"``find_package(Automoc4 NO_MODULE)`` and adds an additional search directory "
"for ``automoc4``.  Then the call to ``find_package_handle_standard_args()`` "
"produces a proper success/failure message."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:226
msgid "Example: Simple Signature"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:228
msgid ""
"Example for using a simple signature of "
"``find_package_handle_standard_args()``:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:230
msgid "``FindLibXml2.cmake``"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:230
msgid ""
"include(FindPackageHandleStandardArgs)\n"
"find_package_handle_standard_args(\n"
"  LibXml2\n"
"  DEFAULT_MSG\n"
"  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR\n"
")"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:240
msgid ""
"In this example, the ``LibXml2`` package is considered to be found if both "
"``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` variables are valid.  Then "
"also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found and "
"``REQUIRED`` was used, it fails with a :command:`message(FATAL_ERROR)`, "
"independent whether ``QUIET`` was used or not.  If it is found, success will "
"be reported, including the content of the first required variable specified "
"in ``<required-vars>...``.  On repeated CMake runs, the same message will "
"not be printed again."
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:250
msgid "Example: Checking Version"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:252
msgid "Example for the ``find_package_check_version()`` usage:"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:254
msgid ""
"include(FindPackageHandleStandardArgs)\n"
"find_package_check_version(\n"
"  1.2.3\n"
"  result\n"
"  HANDLE_VERSION_RANGE\n"
"  RESULT_MESSAGE_VARIABLE reason\n"
")\n"
"if(result)\n"
"  message(STATUS \"${reason}\")\n"
"else()\n"
"  # Logic when version check is not successful.\n"
"  message(WARNING \"${reason}\")\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:272
msgid "See Also"
msgstr ""

#: ../../../../Modules/FindPackageHandleStandardArgs.cmake:274
msgid ":ref:`Find Modules` for details how to write a find module."
msgstr ""
