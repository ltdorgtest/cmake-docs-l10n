# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/UsewxWidgets.cmake:6
msgid "UsewxWidgets"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:8
msgid ""
"This module serves as a convenience wrapper for using the wxWidgets library "
"(formerly known as wxWindows) and propagates its usage requirements, such as "
"library directories, include directories, and compiler flags, into the "
"current directory scope for use by targets."
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:13
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:15
msgid "include(UsewxWidgets)"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:19
msgid ""
"This module calls :command:`include_directories` and :command:"
"`link_directories`, sets compile definitions for the current directory and "
"appends some compile flags to use wxWidgets library after calling the :"
"module:`find_package(wxWidgets) <FindwxWidgets>`."
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:25
msgid "Examples"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:27
msgid ""
"Include this module in a project after finding wxWidgets to configure its "
"usage requirements:"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:30
#: ../../../../Modules/UsewxWidgets.cmake:53
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:30
msgid ""
"# Note that for MinGW users the order of libraries is important.\n"
"find_package(wxWidgets COMPONENTS net gl core base)\n"
"\n"
"add_library(example example.cxx)\n"
"\n"
"if(wxWidgets_FOUND)\n"
"  include(UsewxWidgets)\n"
"\n"
"  # Link wxWidgets libraries for each dependent executable/library target.\n"
"  target_link_libraries(example PRIVATE ${wxWidgets_LIBRARIES})\n"
"endif()"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:45
msgid ""
"As of CMake 3.27, a better approach is to link only the :module:`wxWidgets::"
"wxWidgets <FindwxWidgets>` imported target to specific targets that require "
"it, rather than including this module.  Imported targets provide better "
"control of the package usage properties, such as include directories and "
"compile flags, by applying them only to the targets they are linked to, "
"avoiding unnecessary propagation to all targets in the current directory."
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:53
msgid ""
"find_package(wxWidgets COMPONENTS net gl core base)\n"
"\n"
"add_library(example example.cxx)\n"
"\n"
"# Link the imported target for each dependent executable/library target.\n"
"target_link_libraries(example PRIVATE wxWidgets::wxWidgets)"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:64
msgid "See Also"
msgstr ""

#: ../../../../Modules/UsewxWidgets.cmake:66
msgid "The :module:`FindwxWidgets` module to find wxWidgets."
msgstr ""
