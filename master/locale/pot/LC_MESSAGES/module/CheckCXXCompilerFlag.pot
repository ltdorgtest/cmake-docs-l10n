# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:6
msgid "CheckCXXCompilerFlag"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:8
msgid ""
"This module provides a command to check whether the C++ compiler supports a "
"given flag."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:11
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:13
msgid "include(CheckCXXCompilerFlag)"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:18
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:20
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:24
msgid "Checks once whether the C++ compiler supports a given flag:"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:26
msgid "check_cxx_compiler_flag(<flag> <variable>)"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:30
msgid ""
"This command checks once that the ``<flag>`` is accepted by the ``CXX`` "
"compiler without producing a diagnostic message.  Multiple flags can be "
"specified in one argument as a string using a :ref:`semicolon-separated list "
"<CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:35
msgid ""
"The result of the check is stored in the internal cache variable specified "
"by ``<variable>``, with boolean true for success and boolean false for "
"failure."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:39
msgid ""
"A successful result only indicates that the compiler did not report an error "
"when given the flag.  Whether the flag has any effect, or the intended one, "
"is outside the scope of this module."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:45
msgid ""
"Since the underlying :command:`try_compile` command also uses flags from "
"variables like :variable:`CMAKE_<LANG>_FLAGS`, unknown or unsupported flags "
"in those variables may result in a false negative for this check."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:50
msgid "Variables Affecting the Check"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:51
msgid ""
"The following variables may be set before calling this command to modify the "
"way the check is run:"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:2
msgid ""
"A space-separated string of additional flags to pass to the compiler. A :ref:"
"`semicolon-separated list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS` and its associated configuration-"
"specific :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` variables are automatically "
"prepended to the compiler command before the contents of this variable."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of compiler "
"definitions, each of the form ``-DFOO`` or ``-DFOO=bar``.  A definition for "
"the name specified by the result variable argument of the check command is "
"also added automatically."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header search "
"paths to pass to the compiler.  These will be the only header search paths "
"used; the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of options to add "
"to the link command (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of libraries to add "
"to the link command.  These can be the names of system libraries, or they "
"can be :ref:`Imported Targets` (see :command:`try_compile` for further "
"details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of library search "
"paths to pass to the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../module/include/CMAKE_TRY_COMPILE_TARGET_TYPE.rst:1
msgid ":variable:`CMAKE_TRY_COMPILE_TARGET_TYPE`"
msgstr ""

#: ../../../module/include/CMAKE_TRY_COMPILE_TARGET_TYPE.rst:2
msgid ""
"Internally, the :command:`try_compile` command is used to perform the check, "
"and this variable controls the type of target it creates.  If this variable "
"is set to ``EXECUTABLE`` (the default), the check compiles and links the "
"test source code as an executable program.  If set to ``STATIC_LIBRARY``, "
"the test source code is compiled but not linked."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:71
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:73
msgid ""
"The following example demonstrates how to use this module to check the C++ "
"compiler flag ``-fsycl``.  The result of the check is stored in the internal "
"cache variable ``HAVE_FSYCL_FLAG``, and the flag is conditionally enabled "
"using the :command:`target_compile_options` command.  The :genex:"
"`$<COMPILE_LANGUAGE:...> <COMPILE_LANGUAGE:languages>` generator expression "
"ensures that the flag is added only to ``CXX`` source files."
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:80
msgid ""
"include(CheckCXXCompilerFlag)\n"
"check_cxx_compiler_flag(-fsycl HAVE_FSYCL_FLAG)\n"
"\n"
"if(HAVE_FSYCL_FLAG)\n"
"  target_compile_options(\n"
"    example\n"
"    PRIVATE $<$<COMPILE_LANGUAGE:CXX>:-fsycl>\n"
"  )\n"
"endif()"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:93
msgid "See Also"
msgstr ""

#: ../../../../Modules/CheckCXXCompilerFlag.cmake:95
msgid ""
"The :module:`CheckCompilerFlag` module for a more general command to check "
"whether a compiler flag is supported."
msgstr ""
