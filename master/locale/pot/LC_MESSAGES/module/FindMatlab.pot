# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindMatlab.cmake:6
msgid "FindMatlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:8
msgid ""
"Finds MATLAB or MATLAB Compiler Runtime (MCR) and provides its tools, "
"libraries and compilers to CMake:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:11
msgid ""
"find_package(Matlab [<version>] [COMPONENTS <components>...] [REGISTRY_VIEW "
"<view>] [...])"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:15
msgid ""
"The primary purpose of this module is to find the libraries associated with "
"MATLAB or the MCR in order to be able to build MATLAB extensions (MEX "
"files). It can also be used:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:19
msgid "to run specific commands in MATLAB in case MATLAB is available"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:20
msgid "for declaring MATLAB unit tests"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:21
msgid ""
"to retrieve various information from MATLAB (MEX extensions, versions and "
"release queries, ...)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:24
msgid "MATLAB Compiler Runtime (MCR) support."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:27
msgid ""
"Support for specifying a version range to :command:`find_package`, support "
"for specifying ``REGISTRY_VIEW`` argument to :command:`find_package`, :"
"command:`matlab_extract_all_installed_versions_from_registry` and :command:"
"`matlab_get_all_valid_matlab_roots_from_registry` commands. The default "
"behavior remained unchanged, by using the registry view ``TARGET``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:38
msgid ""
"The version given to the :command:`find_package` argument is the MATLAB "
"*version*, which should not be confused with the MATLAB *release name* (e.g. "
"``R2023b``).  The :command:`matlab_get_version_from_release_name` and :"
"command:`matlab_get_release_name_from_version` commands provide a mapping "
"between the release name and the version."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:45
msgid "Components"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:47
msgid ""
"This module supports optional components which can be specified using the :"
"command:`find_package` command:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:50
msgid "find_package(Matlab [COMPONENTS <components>...])"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:54
msgid "Supported components include:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:56
msgid "``ENG_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:59
msgid "Finds the ``ENG`` library of MATLAB."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:61
msgid "``MAT_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:64
msgid "Finds the ``MAT`` library of MATLAB."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:66
msgid "``MAIN_PROGRAM``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:69
msgid ""
"Finds the MATLAB binary program.  Note that this component is not available "
"on the MCR version, and will yield an error if the MCR is found instead of "
"the regular MATLAB installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:73
msgid "``MEX_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:76
msgid "Finds the MEX compiler."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:78
msgid "``MCC_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:81
msgid "Finds the MCC compiler, included with the MATLAB Compiler add-on."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:83
msgid "``SIMULINK``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:86
msgid "Finds the Simulink environment."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:89
msgid "Implicitly Found Components"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:91
msgid ""
"The following components are always found unconditionally, without needing "
"to be specified explicitly:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:94
msgid "``MX_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:95
#: ../../../../Modules/FindMatlab.cmake:103
#: ../../../../Modules/FindMatlab.cmake:111
msgid ""
"This component has been removed and is now always found unconditionally."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:100
msgid "Finds the MATLAB mx library."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:102
msgid "``ENGINE_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:108
msgid "Finds the MATLAB engine library."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:110
msgid "``DATAARRAY_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:116
msgid "Finds the C++ MATLAB data array library."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:118
msgid ""
"If no components are specified, the module looks for the ``MX_LIBRARY``, "
"``ENGINE_LIBRARY``, and ``DATAARRAY_LIBRARY`` by default."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:122
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:124
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:126
msgid "``Matlab::mex``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:129
msgid ""
"Target encapsulating the ``mex`` library usage requirements, always "
"available for MATLAB installations.  Available for MCR installations if "
"provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:133
msgid "``Matlab::mx``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:136
msgid ""
"Target encapsulating the usage requirements of the mx library of MATLAB "
"(arrays), always available for MATLAB installations.  Available for MCR "
"installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:140
msgid "``Matlab::eng``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:143
msgid ""
"Target encapsulating the MATLAB engine library usage requirements. Available "
"only if the ``ENG_LIBRARY`` component is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:146
msgid "``Matlab::mat``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:149
msgid ""
"Target encapsulating the MATLAB matrix library usage requirements. Available "
"only if the ``MAT_LIBRARY`` component is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:152
msgid "``Matlab::MatlabEngine``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:155
msgid ""
"Target encapsulating the MATLAB C++ engine library usage requirements, "
"always available for MATLAB R2018a and newer.  Available for MCR "
"installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:159
msgid "``Matlab::MatlabDataArray``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:162
msgid ""
"Target encapsulating the MATLAB C++ data array library usage requirements, "
"always available for MATLAB R2018a and newer.  Available for MCR "
"installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:167
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:169
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:171
msgid "``Matlab_FOUND``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:174
msgid ""
"Boolean indicating whether the (requested version of) MATLAB installation "
"was found.  All variables below are defined if MATLAB is found."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:177
msgid "``Matlab_VERSION``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:180
msgid ""
"The numerical version (e.g. ``23.2.0``) of MATLAB found.  Not to be confused "
"with MATLAB release name (e.g. ``R2023b``) that can be obtained with :"
"command:`matlab_get_release_name_from_version`."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:184
msgid ""
"When a MATLAB/MCR installation is found automatically and the "
"``Matlab_VERSION`` is not given, the version is queried from MATLAB directly "
"(on Windows this may pop up a MATLAB window) or from the MCR installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:189
#: ../../../../Modules/FindMatlab.cmake:260
#: ../../../../Modules/FindMatlab.cmake:278
msgid "``Matlab_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:192
msgid "The final root of the MATLAB installation determined by this module."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:194
msgid "``Matlab_MAIN_PROGRAM``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:197
msgid ""
"The MATLAB binary program.  Available only if the component ``MAIN_PROGRAM`` "
"is given in the :command:`find_package` argument."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:200
msgid "``Matlab_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:203
msgid "The path of the MATLAB libraries headers."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:205
msgid "``Matlab_MEX_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:206
msgid ""
"Library for MEX, always available for MATLAB installations.  Available for "
"MCR installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:209
msgid "``Matlab_MX_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:210
msgid ""
"The mx library of MATLAB (arrays), always available for MATLAB "
"installations.  Available for MCR installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:213
msgid "``Matlab_ENG_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:214
msgid ""
"MATLAB engine library.  Available only if the component ``ENG_LIBRARY`` is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:217
msgid "``Matlab_MAT_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:220
msgid ""
"Matlab matrix library.  Available only if the component ``MAT_LIBRARY`` is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:223
msgid "``Matlab_ENGINE_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:226
msgid ""
"Matlab C++ engine library, always available for MATLAB R2018a and newer. "
"Available for MCR installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:229
msgid "``Matlab_DATAARRAY_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:232
msgid ""
"Matlab C++ data array library, always available for MATLAB R2018a and "
"newer.  Available for MCR installations if provided by MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:235
msgid "``Matlab_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:236
msgid "The whole set of libraries of MATLAB."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:238
msgid "``Matlab_MEX_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:241
msgid ""
"The MEX compiler of MATLAB.  Currently not used.  Available only if the "
"component ``MEX_COMPILER`` is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:244
msgid "``Matlab_MCC_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:247
msgid ""
"The mcc compiler of MATLAB.  Included with the MATLAB Compiler add-on. "
"Available only if the component ``MCC_COMPILER`` is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:251
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:253
msgid "The following cache variables may also be set:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:255
msgid "``Matlab_MEX_EXTENSION``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:258
msgid ""
"The extension of the MEX files for the current platform (given by MATLAB)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:263
msgid ""
"The location of the root of the MATLAB installation found.  If this value is "
"changed by the user, the result variables are recomputed."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:267
msgid "Input Variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:269
msgid ""
"Users or projects may set the following variables to configure the module "
"behavior before calling ``find_package(Matlab)``:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:272
msgid ":variable:`Matlab_ROOT <<PackageName>_ROOT>`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:275
msgid ""
"Default value for the ``Matlab_ROOT_DIR`` variable, the root of the MATLAB "
"installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:281
msgid ""
"The root folder of the MATLAB installation.  If set before the call to :"
"command:`find_package`, the module will look for the components in that "
"path.  If not set, then an automatic search of MATLAB will be performed. If "
"set, it should point to a valid version of MATLAB."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:286
msgid ""
"This variable may be specified in order to give the path of the desired "
"MATLAB version.  Otherwise, the behavior is platform specific:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:289
msgid ""
"Windows: The installed versions of MATLAB/MCR are retrieved from the Windows "
"registry.  The ``REGISTRY_VIEW`` argument may optionally be specified to "
"manually control whether 32bit or 64bit versions shall be searched for."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:293
msgid ""
"macOS: The installed versions of MATLAB/MCR are given by the MATLAB default "
"installation paths under ``$HOME/Applications`` and ``/Applications``.  If "
"no such application is found, it falls back to the one that might be "
"accessible from the ``PATH``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:297
msgid ""
"Unix: The desired MATLAB should be accessible from the ``PATH``.  This does "
"not work for MCR installation and ``Matlab_ROOT_DIR`` should be specified on "
"this platform."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:301
msgid "``MATLAB_FIND_DEBUG``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:304
msgid ""
"If set to a boolean true, additional debug information is outputted to the "
"console, such as the lookup of MATLAB and the intermediate configuration "
"steps."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:308
msgid "``MATLAB_ADDITIONAL_VERSIONS``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:311
msgid ""
"If set, it specifies additional versions of MATLAB for the automatic "
"retrieval of the installed versions that may be handled and looked for."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:314
msgid ""
"The mapping of the release names and the version of MATLAB is performed by "
"defining pairs (name, version).  The variable should be a list of strings, "
"organized by pairs of release name and versions, such as follows:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:319
msgid ""
"set(\n"
"  MATLAB_ADDITIONAL_VERSIONS\n"
"    \"release_name1=corresponding_version1\"\n"
"    \"release_name2=corresponding_version2\"\n"
"    # ...\n"
")\n"
"\n"
"find_package(Matlab)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:330
msgid "Example:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:332
msgid ""
"set(\n"
"  MATLAB_ADDITIONAL_VERSIONS\n"
"    \"R2013b=8.2\"\n"
"    \"R2013a=8.1\"\n"
"    \"R2012b=8.0\"\n"
"    # ...\n"
")\n"
"\n"
"find_package(Matlab)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:344
msgid ""
"The order of entries in this list matters when several versions of MATLAB "
"are installed.  The priority is set according to the ordering in this list."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:349
msgid "Commands"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:351
msgid "This module provides the following commands:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:353
msgid ":command:`matlab_get_version_from_release_name`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:354
msgid ":command:`matlab_get_release_name_from_version`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:355
msgid ":command:`matlab_get_version_from_matlab_run`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:356
msgid ":command:`matlab_extract_all_installed_versions_from_registry`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:357
msgid ":command:`matlab_get_all_valid_matlab_roots_from_registry`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:358
msgid ":command:`matlab_add_mex`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:359
msgid ":command:`matlab_get_mex_suffix`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:360
msgid ":command:`matlab_add_unit_test`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:366
msgid "Returns the version of MATLAB from a release name:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:368
msgid "matlab_get_version_from_release_name(<release-name> <version-var>)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:372
#: ../../../../Modules/FindMatlab.cmake:395
#: ../../../../Modules/FindMatlab.cmake:419
#: ../../../../Modules/FindMatlab.cmake:442
#: ../../../../Modules/FindMatlab.cmake:464
#: ../../../../Modules/FindMatlab.cmake:510
#: ../../../../Modules/FindMatlab.cmake:561
#: ../../../../Modules/FindMatlab.cmake:636
#: ../../../../Modules/FindMatlab.cmake:687
msgid "The arguments are:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:374
msgid "``<release-name>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:375
msgid "Input release name string (e.g. ``R2023b``)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:377
msgid "``<version-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:378
msgid ""
"The name of the variable in which to store the version of MATLAB.  The "
"output result is e.g. ``23.2.0``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:383
msgid "This command provides correct versions mappings for MATLAB but not MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:389
msgid "Returns the release name from the version of MATLAB:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:391
msgid "matlab_get_release_name_from_version(<version> <release-name-var>)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:397
msgid "``<version>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:398
msgid "Input MATLAB version string (e.g. ``23.2.0``)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:400
msgid "``<release-name-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:401
msgid ""
"The name of the variable in which to store the MATLAB release name.  The "
"output result is e.g. ``R2023b``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:406
msgid "This command provides correct version mappings for MATLAB but not MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:412
msgid ""
"Runs the specified MATLAB program and extracts the version of MATLAB/MCR, "
"given the full directory of the MATLAB/MCR installation path:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:415
msgid ""
"matlab_get_version_from_matlab_run(<matlab-binary> <matlab-versions-var>)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:421
msgid "``<matlab-binary>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:422
msgid "The path to the ``matlab`` binary executable."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:424
msgid "``<matlab-versions-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:425
msgid ""
"The name of the variable in which a list of extracted MATLAB versions are "
"stored."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:428
msgid ""
"If the path provided for the MATLAB installation points to an MCR "
"installation, the version is extracted from the installed files."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:435
msgid "Parses the Windows registry and finds all installed MATLAB versions:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:444
#: ../../../../Modules/FindMatlab.cmake:472
msgid "``<versions-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:445
#: ../../../../Modules/FindMatlab.cmake:473
msgid ""
"The name of the variable in which to store the list of all MATLAB versions "
"found."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:448
#: ../../../../Modules/FindMatlab.cmake:524
msgid "``REGISTRY_VIEW <view>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:451
#: ../../../../Modules/FindMatlab.cmake:527
msgid ""
"Optional registry view argument that provides a more precise interface on "
"how to interact with the Windows Registry.  The argument is passed (or "
"omitted) to :command:`cmake_host_system_information` without further checks "
"or modification.  For example, ``<view>`` value can be one of ``64``, "
"``32``, ``64_32``, ``32_64``, ``HOST``, ``TARGET``, ``BOTH``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:458
msgid "The old signature is:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:466
msgid "``<win64>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:467
msgid ""
"Boolean whether to search for the 64-bit version of MATLAB.  If set to "
"boolean true, 64-bit registry view will be searched.  If set to boolean "
"false, 32-bit registry view will be searched.  For finer control, use the "
"above signature."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:476
msgid ""
"This command is available on Windows only.  The part of the registry parsed "
"is dependent on the host processor."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:479
msgid ""
"The returned list contains all versions under "
"``HKLM\\SOFTWARE\\Mathworks\\MATLAB``, ``HKLM\\SOFTWARE\\Mathworks\\MATLAB "
"Runtime`` and ``HKLM\\SOFTWARE\\Mathworks\\MATLAB Compiler Runtime`` or an "
"empty list in case an error occurred (or nothing found)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:487
msgid ""
"Only the versions are provided.  No check is made over the existence of the "
"installation referenced in the registry."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:494
msgid ""
"Returns all the possible MATLAB or MCR paths, according to a previously "
"given list:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:497
msgid ""
"matlab_get_all_valid_matlab_roots_from_registry(\n"
"  <matlab-versions>\n"
"  <matlab-roots-var>\n"
"  [REGISTRY_VIEW <view>]\n"
")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:505
msgid ""
"This command populates the MATLAB root with valid versions of MATLAB or "
"MATLAB Runtime (MCR) and is mainly useful for the searching of all possible "
"MATLAB installations.  Only the existing/accessible paths are kept."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:512
msgid "``<matlab-versions>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:513
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of each of the "
"MATLAB or MCR installations.  Specify it as a single string value."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:516
msgid "``<matlab-roots-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:517
msgid ""
"The name of the variable in which to store a list of locations of each of "
"the MATLAB or MCR installations."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:520
msgid ""
"The value of this variable is organized in triplets ``(type,version_number,"
"matlab_root_path)``, where ``type`` indicates either ``MATLAB`` or ``MCR``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:538
msgid "Adds a target that compiles MATLAB MEX target file:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:540
msgid ""
"matlab_add_mex(\n"
"  NAME <name>\n"
"  [EXECUTABLE | MODULE | SHARED]\n"
"  SRC <sources>...\n"
"  [OUTPUT_NAME <output-name>]\n"
"  [DOCUMENTATION <file>]\n"
"  [LINK_TO <targets>...]\n"
"  [R2017b | R2018a]\n"
"  [EXCLUDE_FROM_ALL]\n"
"  [NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES]\n"
"  [...]\n"
")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:555
msgid ""
"This commands compiles the given sources with the current tool-chain in "
"order to produce a MEX file.  The final name of the produced output may be "
"specified, as well as additional link libraries, and a documentation entry "
"for the MEX file.  Remaining arguments of the call are passed to the :"
"command:`add_library` or :command:`add_executable` command."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:563
#: ../../../../Modules/FindMatlab.cmake:689
msgid "``NAME <name>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:564
msgid "The name of the target."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:566
msgid "``SRC <sources>...``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:567
msgid "One or more source files to be compiled."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:569
msgid "``LINK_TO <targets>...``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:570
msgid ""
"A list of additional link dependencies.  The target links to ``libmex`` and "
"``libmx`` by default, unless the ``NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES`` "
"option is passed."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:574
msgid "``OUTPUT_NAME <output-name>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:575
msgid ""
"If given, overrides the default name.  The default name is the name of the "
"target without any prefix and with ``Matlab_MEX_EXTENSION`` suffix."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:578
msgid "``DOCUMENTATION <file>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:579
msgid ""
"If given, the ``<file>`` will be considered as being the documentation file "
"for the MEX file.  This file is copied into the same folder without any "
"processing, with the same name as the final MEX file, and with extension ``."
"m``.  In that case, typing ``help <name>`` in MATLAB prints the "
"documentation contained in this file."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:585
msgid ""
"The documentation file is not processed and should be in the following "
"format:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:588
msgid ""
"% This is the documentation\n"
"function ret = mex_target_output_name(input1)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:593
msgid "``R2017b`` or ``R2018a``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:596
msgid ""
"May be given to specify the version of the C API to use: ``R2017b`` "
"specifies the traditional (separate complex) C API, and corresponds to the "
"``-R2017b`` flag for the ``mex`` command. ``R2018a`` specifies the new "
"interleaved complex C API, and corresponds to the ``-R2018a`` flag for the "
"``mex`` command.  Ignored for MATLAB versions prior to R2018a.  Defaults to "
"``R2017b``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:603
msgid "``MODULE`` or ``SHARED``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:606
msgid "May be given to specify the type of library to be created."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:608
msgid "``EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:611
msgid ""
"May be given to create an executable instead of a library.  If no type is "
"given explicitly, the default type is ``SHARED``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:614
msgid "``EXCLUDE_FROM_ALL``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:615
msgid ""
"This option has the same meaning as the :prop_tgt:`EXCLUDE_FROM_ALL` target "
"property and is forwarded to the :command:`add_library`, or :command:"
"`add_executable` command."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:619
msgid "``NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:622
msgid ""
"This option permits to disable the automatic linking of MATLAB libraries, so "
"that only the libraries that are actually required can be linked via the "
"``LINK_TO`` option."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:630
msgid "Returns the extension to be used for the MEX files (the suffix):"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:632
msgid "matlab_get_mex_suffix(<matlab-root> <mex-suffix-var>)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:638
msgid "``<matlab-root>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:639
msgid ""
"The root of MATLAB/MCR installation.  For example, the value of the "
"``Matlab_ROOT_DIR`` variable."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:642
msgid "``<mex-suffix-var>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:643
msgid "The name of the variable in which the suffix will be returned."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:645
msgid ""
"This command is platform and architecture dependent.  It should not be "
"called before the appropriate MATLAB root has been found."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:652
msgid "Adds a MATLAB unit test file to the project's test set of CMake/CTest:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:654
msgid ""
"matlab_add_unit_test(\n"
"  NAME <name>\n"
"  UNITTEST_FILE <matlab-file-containing-unittest.m>\n"
"  [CUSTOM_TEST_COMMAND <matlab-command-to-run-as-test>]\n"
"  [UNITTEST_PRECOMMAND <matlab-command-to-run>]\n"
"  [TIMEOUT <timeout>]\n"
"  [ADDITIONAL_PATH <paths>...]\n"
"  [MATLAB_ADDITIONAL_STARTUP_OPTIONS <options>...]\n"
"  [TEST_ARGS <args>...]\n"
"  [NO_UNITTEST_FRAMEWORK]\n"
"  [WORKING_DIRECTORY <dir>]\n"
")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:669
msgid ""
"By default, the MATLAB unit test framework will be used (>= 2013a) to run "
"the added MATLAB script, but regular ``.m`` files returning an exit code can "
"be used as well (0 indicating a success)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:673
msgid ""
"This command requires the component ``MAIN_PROGRAM`` and hence is not "
"available for an MCR installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:676
msgid ""
"The unit test uses the MATLAB unittest framework (default, available "
"starting MATLAB 2013b+) except if the option ``NO_UNITTEST_FRAMEWORK`` is "
"given."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:680
msgid ""
"The command expects one MATLAB test script file to be given. In the case "
"``NO_UNITTEST_FRAMEWORK`` is given, the unittest script file should contain "
"the script to be run, plus an exit command with the exit value.  This exit "
"value will be passed to the ctest framework (0 success, non 0 failure).  "
"Additional arguments accepted by :command:`add_test` can be passed through "
"``TEST_ARGS`` (e.g. ``CONFIGURATIONS <config> ...``)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:690
msgid "The name of the unittest in ctest."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:692
msgid "``UNITTEST_FILE <matlab-file-containing-unittest.m>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:693
msgid ""
"The MATLAB unittest file.  Its path will be automatically added to the "
"MATLAB path."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:696
msgid "``CUSTOM_TEST_COMMAND <matlab-command-to-run-as-test>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:697
msgid ""
"MATLAB script command to run as the test. If this is not set, then the "
"following is run: ``runtests('matlab_file_name'), exit(max([ans(1,:)."
"Failed]))`` where ``matlab_file_name`` is the ``UNITTEST_FILE`` without the "
"extension."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:702
msgid "``UNITTEST_PRECOMMAND <matlab-command-to-run>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:703
msgid ""
"MATLAB script command to be ran before the file containing the test (e.g. "
"GPU device initialization based on CMake variables)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:707
msgid "``TIMEOUT <timeout>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:708
msgid ""
"The test timeout in seconds.  Defaults to 180 seconds as the MATLAB unit "
"test may hang."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:711
msgid "``ADDITIONAL_PATH <paths>...``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:712
msgid ""
"A list of paths to add to the MATLAB path prior to running the unit test."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:715
msgid "``MATLAB_ADDITIONAL_STARTUP_OPTIONS <options>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:716
msgid ""
"A list of additional option in order to run MATLAB from the command line.  "
"The ``-nosplash``, ``-nodesktop``, and ``-nodisplay`` options are always "
"added automatically."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:720
msgid "``TEST_ARGS <args>...``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:721
msgid ""
"Additional options provided to the add_test command.  These options are "
"added to the default options (e.g. ``CONFIGURATIONS Release``)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:724
msgid "``NO_UNITTEST_FRAMEWORK``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:725
msgid ""
"When set, indicates that the test should not use the unittest framework of "
"MATLAB (available for versions >= R2013a)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:728
msgid "``WORKING_DIRECTORY <dir>``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:729
msgid ""
"This will be the working directory for the test.  If specified it will also "
"be the output directory used for the log file of the test run. If not "
"specified the temporary directory ``${CMAKE_BINARY_DIR}/Matlab`` will be "
"used as the working directory and the log location."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:735
msgid "Known Issues"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:737
msgid "**Symbol clash in a MEX target**"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:738
msgid ""
"By default, every symbol inside a MEX file defined with the command :command:"
"`matlab_add_mex` have hidden visibility, except for the entry point.  This "
"is the default behavior of the MEX compiler, which lowers the risk of symbol "
"collision between the libraries shipped with MATLAB, and the libraries to "
"which the MEX file is linking to.  This is also the default on Windows "
"platforms."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:745
msgid ""
"However, this is not sufficient in certain case, where for instance the MEX "
"file is linking against libraries that are already loaded by MATLAB, even if "
"those libraries have different SONAMES. A possible solution is to hide the "
"symbols of the libraries to which the MEX target is linking to.  This can be "
"achieved in GNU GCC compilers with the linker option ``-Wl,--exclude-libs,"
"ALL``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:752
msgid "**Tests using GPU resources**"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:753
msgid ""
"In case the MEX file is using the GPU and in order to be able to run unit "
"tests on this MEX file, the GPU resources should be properly released by "
"MATLAB.  A possible solution is to make MATLAB aware of the use of the GPU "
"resources in the session, which can be performed by a command, such as ``D = "
"gpuDevice()``, at the beginning of the test script (or via a fixture)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:761
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:763
msgid "Finding MATLAB and linking imported target to a project target:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:765
msgid ""
"find_package(Matlab)\n"
"target_link_libraries(example PRIVATE Matlab::mx)"
msgstr ""
