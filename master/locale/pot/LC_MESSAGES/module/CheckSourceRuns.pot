# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckSourceRuns.cmake:7
msgid "CheckSourceRuns"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:11
msgid ""
"This module provides a command to check whether a source code can be built "
"and run."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:14
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:16
msgid "include(CheckSourceRuns)"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:21
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:23
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:27
msgid ""
"Checks once whether the given source code compiles and links into an "
"executable that can subsequently be run:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:30
msgid "check_source_runs(<lang> <code> <variable> [SRC_EXT <extension>])"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:34
msgid ""
"This command checks once that the ``<lang>`` source code supplied in "
"``<code>`` can be built, linked as an executable, and then run.  The result "
"of the check is stored in the internal cache variable specified by "
"``<variable>``."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:39
msgid "The arguments are:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:41
msgid "``<lang>``"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:42
msgid ""
"The programming language of the source ``<code>`` to check.  Supported "
"languages are: ``C``, ``CXX``, ``CUDA``, ``Fortran``, ``HIP``, ``OBJC``, and "
"``OBJCXX``."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:46
msgid "Support for ``HIP`` language."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:49
msgid "``<code>``"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:50
msgid ""
"The source code to be tested.  It must contain a valid source program. For "
"example, it must contain at least a ``main()`` function (in C/C++), or a "
"``program`` unit (in Fortran)."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:54
msgid "``<variable>``"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:55
msgid ""
"Name of the internal cache variable with the result of the check.  If the "
"code builds and runs with exit code ``0``, success is indicated by a boolean "
"true value.  Failure to build or run is indicated by a boolean false value, "
"such as an empty string or an error message."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:60
msgid "``SRC_EXT <extension>``"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:61
msgid ""
"By default, the internal test source file used for the check will be given a "
"file extension that matches the requested language (e.g., ``.c`` for C, ``."
"cxx`` for C++, ``.F90`` for Fortran, etc.).  This option can be used to "
"override this with the ``.<extension>`` instead."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:67
msgid "Variables Affecting the Check"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:68
msgid ""
"The following variables may be set before calling this command to modify the "
"way the check is run:"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:2
msgid ""
"A space-separated string of additional flags to pass to the compiler. A :ref:"
"`semicolon-separated list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS` and its associated configuration-"
"specific :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` variables are automatically "
"prepended to the compiler command before the contents of this variable."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of compiler "
"definitions, each of the form ``-DFOO`` or ``-DFOO=bar``.  A definition for "
"the name specified by the result variable argument of the check command is "
"also added automatically."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header search "
"paths to pass to the compiler.  These will be the only header search paths "
"used; the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of options to add "
"to the link command (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of libraries to add "
"to the link command.  These can be the names of system libraries, or they "
"can be :ref:`Imported Targets` (see :command:`try_compile` for further "
"details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of library search "
"paths to pass to the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:86
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:89
msgid "Example: Basic Usage"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:91
msgid ""
"The following example demonstrates how to use this module to check whether "
"the C source code is supported and operational at runtime.  The result of "
"the check is stored in the internal cache variable ``HAVE_NORETURN``."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:95
msgid ""
"include(CheckSourceRuns)\n"
"\n"
"check_source_runs(C \"\n"
"  #include <stdlib.h>\n"
"  #include <stdnoreturn.h>\n"
"  noreturn void f(){ exit(0); }\n"
"  int main(void) { f(); return 1; }\n"
"\" HAVE_NORETURN)"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:107
msgid "Example: Checking Fortran Code"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:109
msgid "Checking if Fortran source code runs successfully:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:111
msgid ""
"include(CheckSourceRuns)\n"
"\n"
"check_source_runs(Fortran \"\n"
"  program test\n"
"  real :: x[*]\n"
"  call co_sum(x)\n"
"  end program\n"
"\" HAVE_COARRAY)"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:123
msgid "Example: Checking C++ Code With Bracket Argument"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:125
msgid ""
"The following example demonstrates how to check whether the C++ standard "
"library is functional and ``std::vector`` works at runtime.  If the source "
"compiles, links, and runs successfully, internal cache variable "
"``HAVE_WORKING_STD_VECTOR`` will be set to boolean true value.  Code is "
"supplied using :ref:`Bracket Argument` for easier embedded quotes handling:"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:131
msgid ""
"include(CheckSourceRuns)\n"
"\n"
"check_source_runs(CXX [[\n"
"  #include <iostream>\n"
"  #include <vector>\n"
"\n"
"  int main()\n"
"  {\n"
"    std::vector<int> v = {1, 2, 3};\n"
"    if (v.size() != 3) return 1;\n"
"    std::cout << \"Vector works correctly.\" << std::endl;\n"
"    return 0;\n"
"  }\n"
"]] HAVE_WORKING_STD_VECTOR)"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:150
msgid "Example: Isolated Check"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:152
msgid ""
"In the following example, this module is used in combination with the :"
"module:`CMakePushCheckState` module to modify required compile definitions "
"and libraries when checking whether the C function ``sched_getcpu()`` is "
"supported and operational at runtime.  For example, on some systems, the "
"``sched_getcpu()`` function may be available at compile time but not "
"actually implemented by the kernel.  In such cases, it returns ``-1`` and "
"sets ``errno`` to ``ENOSYS``.  This check verifies that ``sched_getcpu()`` "
"runs successfully and stores a boolean result in the internal cache variable "
"``HAVE_SCHED_GETCPU``."
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:162
msgid ""
"include(CheckSourceRuns)\n"
"include(CMakePushCheckState)\n"
"\n"
"cmake_push_check_state(RESET)\n"
"  set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)\n"
"\n"
"  if(CMAKE_SYSTEM_NAME STREQUAL \"Haiku\")\n"
"    set(CMAKE_REQUIRED_LIBRARIES gnu)\n"
"  endif()\n"
"\n"
"  check_source_runs(C \"\n"
"    #include <sched.h>\n"
"    int main(void)\n"
"    {\n"
"      if (sched_getcpu() == -1) {\n"
"        return 1;\n"
"      }\n"
"      return 0;\n"
"    }\n"
"  \" HAVE_SCHED_GETCPU)\n"
"cmake_pop_check_state()"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:187
msgid "See Also"
msgstr ""

#: ../../../../Modules/CheckSourceRuns.cmake:189
msgid ""
"The :module:`CheckSourceCompiles` module to check whether a source code can "
"be built."
msgstr ""
