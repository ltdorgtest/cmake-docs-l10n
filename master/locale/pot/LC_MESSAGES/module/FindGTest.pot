# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindGTest.cmake:6
msgid "FindGTest"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:8
msgid "Finds GoogleTest, the Google C++ testing and mocking framework:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:10
msgid "find_package(GTest [...])"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:14
msgid ""
"The GoogleTest framework also includes GoogleMock, a library for writing and "
"using C++ mock classes.  On some systems, GoogleMock may be distributed as a "
"separate package."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:18
msgid ""
"When both debug and release (optimized) variants of the GoogleTest and "
"GoogleMock libraries are available, this module selects the appropriate "
"variants based on the current :ref:`Build Configuration <Build "
"Configurations>`."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:22
msgid ""
"If GoogleTest is built and installed using its CMake-based build system, it "
"provides a :ref:`package configuration file <Config File Packages>` "
"(``GTestConfig.cmake``) that can be used with :command:`find_package` in :"
"ref:`Config mode`.  By default, this module now searches for that "
"configuration file and, if found, returns the results without further "
"action.  If the upstream configuration file is not found, this module falls "
"back to :ref:`Module mode` and searches standard locations."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:32
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:34
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:36
msgid "``GTest::gtest``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:39
msgid ""
"Target encapsulating the usage requirements of the GoogleTest ``gtest`` "
"library, available if GoogleTest is found.  The ``gtest`` library provides "
"the core GoogleTest testing framework functionality."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:43
msgid "``GTest::gtest_main``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:46
msgid ""
"Target encapsulating the usage requirements of the GoogleTest ``gtest_main`` "
"library, available if GoogleTest is found.  The ``gtest_main`` library "
"provides a ``main()`` function, allowing tests to be run without defining "
"one manually."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:51
msgid ""
"Only link to ``GTest::gtest_main`` if GoogleTest should supply the "
"``main()`` function for the executable.  If the project is supplying its own "
"``main()`` implementation, link only to ``GTest::gtest``."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:55
msgid "``GTest::gmock``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:58
msgid ""
"Target encapsulating the usage requirements of the GoogleMock ``gmock`` "
"library, available if GoogleTest and its Mock library are found.  The "
"``gmock`` library provides facilities for writing and using mock classes in "
"C++."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:63
msgid "``GTest::gmock_main``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:66
msgid ""
"Target encapsulating the usage requirements of the GoogleMock ``gmock_main`` "
"library, available if GoogleTest and ``gmock_main`` are found.  The "
"``gmock_main`` library provides a ``main()`` function, allowing GoogleMock "
"tests to be run without defining one manually."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:71
msgid ""
"Only link to ``GTest::gmock_main`` if GoogleTest should supply the "
"``main()`` function for the executable.  If project is supplying its own "
"``main()`` implementation, link only to ``GTest::gmock``."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:76
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:78
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:80
msgid "``GTest_FOUND``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:83
#: ../../../../Modules/FindGTest.cmake:159
msgid "Boolean indicating whether GoogleTest was found."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:86
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:88
msgid ""
"This module accepts the following variables before calling "
"``find_package(GTest)``:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:91
msgid "``GTEST_ROOT``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:92
msgid ""
"The root directory of the GoogleTest installation (may also be set as an "
"environment variable).  This variable is used only when GoogleTest is found "
"in :ref:`Module mode`."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:96
msgid "``GTEST_MSVC_SEARCH``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:97
msgid ""
"When compiling with MSVC, this variable controls which GoogleTest build "
"variant to search for, based on the runtime library linkage model.  This "
"variable is used only when GoogleTest is found in :ref:`Module mode` and "
"accepts one of the following values:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:102
msgid "``MD``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:103
msgid ""
"(Default) Searches for shared library variants of GoogleTest that are built "
"to link against the dynamic C runtime.  These libraries are typically "
"compiled with the MSVC runtime flags ``/MD`` or ``/MDd`` (for Release or "
"Debug, respectively)."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:108
msgid "``MT``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:109
msgid ""
"Searches for static library variants of GoogleTest that are built to link "
"against the static C runtime.  These libraries are typically compiled with "
"the MSVC runtime flags ``/MT`` or ``/MTd``."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:114
msgid "Deprecated Items"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:117
msgid "Deprecated Variables"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:119
msgid "The following variables are provided for backward compatibility:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:121
msgid "``GTEST_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:122
msgid ""
"Use the ``GTest::gtest`` imported target instead, which exposes the required "
"include directories through its :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` "
"target property."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:127
msgid ""
"Result variable that provides include directories containing headers needed "
"to use GoogleTest.  This variable is only guaranteed to be available when "
"GoogleTest is found in :ref:`Module mode`."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:131
msgid "``GTEST_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:132
#: ../../../../Modules/FindGTest.cmake:168
msgid "Use the ``GTest::gtest`` imported target instead."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:135
msgid ""
"Result variable providing libraries needed to link against to use the "
"GoogleTest ``gtest`` library.  Note that projects are also responsible for "
"linking with an appropriate thread library in addition to the libraries "
"specified by this variable."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:140
msgid "``GTEST_MAIN_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:141
#: ../../../../Modules/FindGTest.cmake:174
msgid "Use the ``GTest::gtest_main`` imported target instead."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:144
msgid ""
"Result variable providing libraries needed to link against to use the "
"GoogleTest ``gtest_main`` library."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:147
msgid "``GTEST_BOTH_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:148
msgid ""
"Use the ``GTest::gtest`` and ``GTest::gtest_main`` imported targets instead."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:152
msgid ""
"Result variable providing both ``gtest`` and ``gtest_main`` libraries "
"combined."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:155
msgid "``GTEST_FOUND``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:156
msgid "Use ``GTest_FOUND``, which has the same value."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:162
msgid "Deprecated Imported Targets"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:164
msgid ""
"For backward compatibility, this module also provides the following imported "
"targets (available since CMake 3.5):"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:167
msgid "``GTest::GTest``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:171
msgid "Imported target linking the ``GTest::gtest`` library."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:173
msgid "``GTest::Main``"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:177
msgid "Imported target linking the ``GTest::gtest_main`` library."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:180
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:183
msgid "Examples: Finding GoogleTest"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:185
msgid "Finding GoogleTest:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:187
msgid "find_package(GoogleTest)"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:191
msgid ""
"Or, finding GoogleTest and making it required (if not found, processing "
"stops with an error message):"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:194
msgid "find_package(GoogleTest REQUIRED)"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:199
msgid "Examples: Using Imported Targets"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:201
msgid ""
"In the following example, the ``GTest::gtest`` imported target is linked to "
"a project target, which enables using the core GoogleTest testing framework:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:204
msgid ""
"find_package(GTest REQUIRED)\n"
"\n"
"target_link_libraries(foo PRIVATE GTest::gtest)"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:210
msgid ""
"In the next example, the ``GTest::gtest_main`` imported target is also "
"linked to the executable, and a test is registered.  The ``GTest::"
"gtest_main`` library provides a ``main()`` function, so there is no need to "
"write one manually. The ``GTest::gtest`` library is still linked because the "
"test code directly uses things provided by ``GTest::gtest``, and good "
"practice is to link directly to libraries used directly."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:217
msgid ""
"enable_testing()\n"
"\n"
"find_package(GTest REQUIRED)\n"
"\n"
"add_executable(foo foo.cc)\n"
"target_link_libraries(foo PRIVATE GTest::gtest GTest::gtest_main)\n"
"\n"
"add_test(NAME AllTestsInFoo COMMAND foo)"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:229
msgid "Deeper Integration With CTest"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:231
msgid ""
"This module is commonly used with the :module:`GoogleTest` module, which "
"provides :command:`gtest_discover_tests` and :command:`gtest_add_tests` "
"commands to help integrate GoogleTest infrastructure with CTest:"
msgstr ""

#: ../../../../Modules/FindGTest.cmake:235
msgid ""
"find_package(GTest)\n"
"target_link_libraries(example PRIVATE GTest::gtest GTest::gtest_main)\n"
"\n"
"include(GoogleTest)\n"
"gtest_discover_tests(example)\n"
"\n"
"# ..."
msgstr ""

#: ../../../../Modules/FindGTest.cmake:245
msgid ""
"Previous CMake versions defined the :command:`gtest_add_tests` command in "
"this module."
msgstr ""
