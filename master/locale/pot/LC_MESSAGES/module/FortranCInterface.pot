# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FortranCInterface.cmake:6
msgid "FortranCInterface"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:8
msgid ""
"This module provides variables and commands to detect Fortran/C Interface."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:10
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:12
msgid "include(FortranCInterface)"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:16
msgid ""
"This module automatically detects the API by which C and Fortran languages "
"interact."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:20
msgid "Variables"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:23
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:25
msgid ""
"Including this module defines the following variables that indicate if the "
"mangling is found:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:28
msgid "``FortranCInterface_GLOBAL_FOUND``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:29
msgid ""
"Boolean indicating whether global subroutines and functions are available."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:31
msgid "``FortranCInterface_MODULE_FOUND``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:32
msgid ""
"Boolean indicating whether module subroutines and functions (declared by "
"``MODULE PROCEDURE``) are available."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:36
msgid "Input Variables"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:38
msgid ""
"This module also provides the following variables to specify the detected "
"mangling, though a typical use case does not need to reference them and can "
"use the `Commands`_ below."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:42
msgid "``FortranCInterface_GLOBAL_PREFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:43
msgid "Prefix for a global symbol without an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:45
msgid "``FortranCInterface_GLOBAL_SUFFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:46
msgid "Suffix for a global symbol without an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:48
msgid "``FortranCInterface_GLOBAL_CASE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:49
msgid ""
"The case for a global symbol without an underscore, either ``UPPER`` or "
"``LOWER``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:52
msgid "``FortranCInterface_GLOBAL__PREFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:53
msgid "Prefix for a global symbol with an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:55
msgid "``FortranCInterface_GLOBAL__SUFFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:56
msgid "Suffix for a global symbol with an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:58
msgid "``FortranCInterface_GLOBAL__CASE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:59
msgid ""
"The case for a global symbol with an underscore, either ``UPPER`` or "
"``LOWER``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:62
msgid "``FortranCInterface_MODULE_PREFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:63
msgid "Prefix for a module symbol without an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:65
msgid "``FortranCInterface_MODULE_MIDDLE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:66
msgid ""
"Middle of a module symbol without an underscore that appears between the "
"name of the module and the name of the symbol."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:69
msgid "``FortranCInterface_MODULE_SUFFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:70
msgid "Suffix for a module symbol without an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:72
msgid "``FortranCInterface_MODULE_CASE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:73
msgid ""
"The case for a module symbol without an underscore, either ``UPPER`` or "
"``LOWER``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:76
msgid "``FortranCInterface_MODULE_ORDER``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:79
msgid "Order of components for module symbols without an underscore:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:81
#: ../../../../Modules/FortranCInterface.cmake:108
msgid "``MODULE_THEN_SYMBOL``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:82
#: ../../../../Modules/FortranCInterface.cmake:109
msgid ""
"The module name appears *before* the symbol name, i.e., "
"``<PREFIX><module><MIDDLE><symbol><SUFFIX>``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:85
#: ../../../../Modules/FortranCInterface.cmake:112
msgid "``SYMBOL_THEN_MODULE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:86
#: ../../../../Modules/FortranCInterface.cmake:113
msgid ""
"The module name appears *after* the symbol name, i.e., "
"``<PREFIX><symbol><MIDDLE><module><SUFFIX>``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:89
msgid "``FortranCInterface_MODULE__PREFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:90
msgid "Prefix for a module symbol with an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:92
msgid "``FortranCInterface_MODULE__MIDDLE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:93
msgid ""
"Middle of a module symbol with an underscore that appears between the name "
"of the module and the name of the symbol."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:96
msgid "``FortranCInterface_MODULE__SUFFIX``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:97
msgid "Suffix for a module symbol with an underscore."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:99
msgid "``FortranCInterface_MODULE__CASE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:100
msgid ""
"The case for a module symbol with an underscore, either ``UPPER`` or "
"``LOWER``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:103
msgid "``FortranCInterface_MODULE__ORDER``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:106
msgid "Order of components for module symbols with an underscore:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:117
msgid "Variables For Additional Manglings"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:119
msgid ""
"This module is aware of possible ``GLOBAL`` and ``MODULE`` manglings for "
"many Fortran compilers, but it also provides an interface to specify new "
"possible manglings.  The following variables can be set before including "
"this module to specify additional manglings:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:124
msgid "``FortranCInterface_GLOBAL_SYMBOLS``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:126
msgid "``FortranCInterface_MODULE_SYMBOLS``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:128
msgid ""
"before including this module to specify manglings of the symbols ``MySub``, "
"``My_Sub``, ``MyModule:MySub``, and ``My_Module:My_Sub``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:132
msgid "Commands"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:134
msgid "This module provides the following commands:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:138
msgid "Generates a C header file containing macros to mangle symbol names:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:140
msgid ""
"FortranCInterface_HEADER(\n"
"  <file>\n"
"  [MACRO_NAMESPACE <macro-ns>]\n"
"  [SYMBOL_NAMESPACE <ns>]\n"
"  [SYMBOLS [<module>:]<function> ...]\n"
")"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:149
msgid ""
"This command generates a ``<file>`` with definitions of the following macros:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:152
msgid ""
"#define FortranCInterface_GLOBAL (name,NAME) ...\n"
"#define FortranCInterface_GLOBAL_(name,NAME) ...\n"
"#define FortranCInterface_MODULE (mod,name, MOD,NAME) ...\n"
"#define FortranCInterface_MODULE_(mod,name, MOD,NAME) ..."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:159
msgid "These macros mangle four categories of Fortran symbols, respectively:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:161
msgid "Global symbols without '_': ``call mysub()``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:162
msgid "Global symbols with '_'   : ``call my_sub()``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:163
msgid "Module symbols without '_': ``use mymod; call mysub()``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:164
msgid "Module symbols with '_'   : ``use mymod; call my_sub()``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:166
msgid ""
"If mangling for a category is not known, its macro is left undefined. All "
"macros require raw names in both lower case and upper case."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:169
msgid "The options are:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:171
msgid "``MACRO_NAMESPACE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:172
msgid ""
"Replace the default ``FortranCInterface_`` prefix with a given namespace "
"``<macro-ns>``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:175
msgid "``SYMBOL_NAMESPACE``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:176
msgid ""
"Prefix all preprocessor definitions generated by the ``SYMBOLS`` option with "
"a given namespace ``<ns>``."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:179
msgid "``SYMBOLS``"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:180
msgid "List symbols to mangle automatically with C preprocessor definitions::"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:182
msgid ""
"<function>          ==> #define <ns><function> ...\n"
"<module>:<function> ==> #define <ns><module>_<function> ..."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:185
msgid ""
"If the mangling for some symbol is not known then no preprocessor definition "
"is created, and a warning is displayed."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:190
msgid "Verifies that the Fortran and C/C++ compilers work together:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:192
msgid "FortranCInterface_VERIFY([CXX] [QUIET])"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:196
msgid ""
"This command tests whether a simple test executable using Fortran and C (and "
"C++ when the ``CXX`` option is given) compiles and links successfully. The "
"result is stored in the cache entry ``FortranCInterface_VERIFIED_C`` (or "
"``FortranCInterface_VERIFIED_CXX`` if ``CXX`` is given) as a boolean. If the "
"check fails and ``QUIET`` is not given the command terminates with a fatal "
"error message describing the problem.  The purpose of this check is to stop "
"a build early for incompatible compiler combinations.  The test is built in "
"the ``Release`` configuration."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:206
msgid "Examples"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:209
msgid "Examples: Basic Usage"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:211
msgid ""
"The following example creates a ``FC.h`` header that defines mangling macros "
"``FC_GLOBAL()``, ``FC_GLOBAL_()``, ``FC_MODULE()``, and ``FC_MODULE_()``:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:214
msgid ""
"include(FortranCInterface)\n"
"FortranCInterface_HEADER(FC.h MACRO_NAMESPACE \"FC_\")"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:219
msgid ""
"The next example creates a ``FCMangle.h`` header that defines the same "
"``FC_*()`` mangling macros as the previous example plus preprocessor symbols "
"``FC_mysub`` and ``FC_mymod_my_sub``:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:223
msgid ""
"include(FortranCInterface)\n"
"FortranCInterface_HEADER(\n"
"  FCMangle.h\n"
"  MACRO_NAMESPACE \"FC_\"\n"
"  SYMBOL_NAMESPACE \"FC_\"\n"
"  SYMBOLS mysub mymod:my_sub\n"
")"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:234
msgid "Example: Additional Manglings"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:236
msgid ""
"The following example shows how to specify manglings of the symbols "
"``MySub``, ``My_Sub``, ``MyModule:MySub``, and ``My_Module:My_Sub``. The "
"following code tells this module to try given ``GLOBAL`` and ``MODULE`` "
"manglings.  (The carets point at raw symbol names for clarity in this "
"example but are not needed.)"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:242
msgid ""
"set(FortranCInterface_GLOBAL_SYMBOLS mysub_ my_sub__ MYSUB_)\n"
"  #                                  ^^^^^  ^^^^^^   ^^^^^\n"
"set(FortranCInterface_MODULE_SYMBOLS\n"
"    __mymodule_MOD_mysub __my_module_MOD_my_sub)\n"
"  #   ^^^^^^^^     ^^^^^   ^^^^^^^^^     ^^^^^^\n"
"\n"
"include(FortranCInterface)\n"
"\n"
"# ..."
msgstr ""
