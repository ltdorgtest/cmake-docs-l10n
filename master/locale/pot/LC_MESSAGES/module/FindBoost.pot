# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindBoost.cmake:6
msgid "FindBoost"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:8
msgid ""
"This module is available only if policy :policy:`CMP0167` is not set to "
"``NEW``.  Port projects to upstream Boost's ``BoostConfig.cmake`` package "
"configuration file, for which ``find_package(Boost)`` now searches."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:13
msgid "Find Boost include dirs and libraries"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:15
msgid "Use this module by invoking :command:`find_package` with the form:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:17
msgid ""
"find_package(Boost\n"
"  [version] [EXACT]      # Minimum or EXACT version e.g. 1.67.0\n"
"  [REQUIRED]             # Fail with error if Boost is not found\n"
"  [COMPONENTS <libs>...] # Boost libraries by their canonical name\n"
"                         # e.g. \"date_time\" for \"libboost_date_time\"\n"
"  [OPTIONAL_COMPONENTS <libs>...]\n"
"                         # Optional Boost libraries by their canonical "
"name)\n"
"  )                      # e.g. \"date_time\" for \"libboost_date_time\""
msgstr ""

#: ../../../../Modules/FindBoost.cmake:28
msgid ""
"This module finds headers and requested component libraries OR a CMake "
"package configuration file provided by a \"Boost CMake\" build.  For the "
"latter case skip to the :ref:`Boost CMake` section below."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:32
msgid "``bzip2`` and ``zlib`` components (Windows only)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:35
msgid "The ``OPTIONAL_COMPONENTS`` option."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:38
msgid "``stacktrace_*`` components."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:41
msgid "``bzip2`` and ``zlib`` components on all platforms."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:45
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:47
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:49
msgid "``Boost_FOUND``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:50
msgid "Boolean indicating whether headers and requested libraries were found."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:52
msgid "``Boost_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:53
msgid "Boost include directories."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:55
msgid "``Boost_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:56
msgid "Link directories for Boost libraries."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:58
msgid "``Boost_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:59
msgid "Boost component libraries to be linked."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:61
msgid "``Boost_<COMPONENT>_FOUND``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:62
msgid ""
"Boolean indicating whether the component ``<COMPONENT>`` was found "
"(``<COMPONENT>`` name is upper-case)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:65
msgid "``Boost_<COMPONENT>_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:66
msgid ""
"Libraries to link for component ``<COMPONENT>`` (may include :command:"
"`target_link_libraries` debug/optimized keywords)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:69
msgid "``Boost_VERSION_MACRO``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:70
msgid "``BOOST_VERSION`` value from ``boost/version.hpp``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:72
msgid "``Boost_VERSION_STRING``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:73
msgid "Boost version number in ``X.Y.Z`` format."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:75
msgid "``Boost_VERSION``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:76
msgid ""
"Boost version number in ``X.Y.Z`` format (same as ``Boost_VERSION_STRING``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:78
msgid ""
"In previous CMake versions, this variable used the raw version string from "
"the Boost header (same as ``Boost_VERSION_MACRO``). See policy :policy:"
"`CMP0093`."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:83
msgid "``Boost_LIB_VERSION``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:84
msgid "Version string appended to library filenames."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:86
msgid "``Boost_VERSION_MAJOR``, ``Boost_MAJOR_VERSION``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:87
msgid "Boost major version number (``X`` in ``X.Y.Z``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:89
msgid "``Boost_VERSION_MINOR``, ``Boost_MINOR_VERSION``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:90
msgid "Boost minor version number (``Y`` in ``X.Y.Z``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:92
msgid "``Boost_VERSION_PATCH``, ``Boost_SUBMINOR_VERSION``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:93
msgid "Boost subminor version number (``Z`` in ``X.Y.Z``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:95
msgid "``Boost_VERSION_COUNT``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:96
msgid "Amount of version components (3)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:98
msgid "``Boost_LIB_DIAGNOSTIC_DEFINITIONS`` (Windows-specific)"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:99
msgid ""
"Pass to :command:`add_definitions` to have diagnostic information about "
"Boost's automatic linking displayed during compilation"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:103
msgid "The ``Boost_VERSION_<PART>`` variables."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:107
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:109
msgid "Search results are saved persistently in CMake cache entries:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:111
msgid "``Boost_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:112
msgid "Directory containing Boost headers."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:114
msgid "``Boost_LIBRARY_DIR_RELEASE``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:115
msgid "Directory containing release Boost libraries."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:117
msgid "``Boost_LIBRARY_DIR_DEBUG``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:118
msgid "Directory containing debug Boost libraries."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:120
msgid "``Boost_<COMPONENT>_LIBRARY_DEBUG``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:121
msgid "Component ``<COMPONENT>`` library debug variant."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:123
msgid "``Boost_<COMPONENT>_LIBRARY_RELEASE``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:124
msgid "Component ``<COMPONENT>`` library release variant."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:126
msgid ""
"Per-configuration variables ``Boost_LIBRARY_DIR_RELEASE`` and "
"``Boost_LIBRARY_DIR_DEBUG``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:131
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:133
msgid "This module reads hints about search locations from variables:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:135
msgid "``BOOST_ROOT``, ``BOOSTROOT``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:136
msgid "Preferred installation prefix."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:138
msgid "``BOOST_INCLUDEDIR``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:139
msgid "Preferred include directory e.g. ``<prefix>/include``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:141
msgid "``BOOST_LIBRARYDIR``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:142
msgid "Preferred library directory e.g. ``<prefix>/lib``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:144
msgid "``Boost_NO_SYSTEM_PATHS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:145
msgid ""
"Set to ``ON`` to disable searching in locations not specified by these hint "
"variables. Default is ``OFF``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:148
msgid "``Boost_ADDITIONAL_VERSIONS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:149
msgid ""
"List of Boost versions not known to this module. (Boost install locations "
"may contain the version)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:152
msgid ""
"Users may set these hints or results as ``CACHE`` entries.  Projects should "
"not read these entries directly but instead use the above result variables.  "
"Note that some hint names start in upper-case ``BOOST``.  One may specify "
"these as environment variables if they are not specified as CMake variables "
"or cache entries."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:158
msgid ""
"This module first searches for the Boost header files using the above hint "
"variables (excluding ``BOOST_LIBRARYDIR``) and saves the result in "
"``Boost_INCLUDE_DIR``.  Then it searches for requested component libraries "
"using the above hints (excluding ``BOOST_INCLUDEDIR`` and "
"``Boost_ADDITIONAL_VERSIONS``), \"lib\" directories near "
"``Boost_INCLUDE_DIR``, and the library name configuration settings below.  "
"It saves the library directories in ``Boost_LIBRARY_DIR_DEBUG`` and "
"``Boost_LIBRARY_DIR_RELEASE`` and individual library locations in "
"``Boost_<COMPONENT>_LIBRARY_DEBUG`` and "
"``Boost_<COMPONENT>_LIBRARY_RELEASE``. When one changes settings used by "
"previous searches in the same build tree (excluding environment variables) "
"this module discards previous search results affected by the changes and "
"searches again."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:172
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:176
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:178
msgid "``Boost::boost``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:179
msgid "Target for header-only dependencies. (Boost include directory)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:181
msgid "``Boost::headers``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:182
msgid "Alias for ``Boost::boost``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:185
msgid "``Boost::<component>``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:186
msgid ""
"Target for specific component dependency (shared or static library); "
"``<component>`` name is lower-case."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:189
msgid "``Boost::diagnostic_definitions``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:190
msgid ""
"Interface target to enable diagnostic information about Boost's automatic "
"linking during compilation (adds ``-DBOOST_LIB_DIAGNOSTIC``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:193
msgid "``Boost::disable_autolinking``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:194
msgid ""
"Interface target to disable automatic linking with MSVC (adds ``-"
"DBOOST_ALL_NO_LIB``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:197
msgid "``Boost::dynamic_linking``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:198
msgid ""
"Interface target to enable dynamic linking with MSVC (adds ``-"
"DBOOST_ALL_DYN_LINK``)."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:201
msgid ""
"Implicit dependencies such as ``Boost::filesystem`` requiring ``Boost::"
"system`` will be automatically detected and satisfied, even if system is not "
"specified when using :command:`find_package` and if ``Boost::system`` is not "
"added to :command:`target_link_libraries`.  If using ``Boost::thread``, then "
"``Threads::Threads`` will also be added automatically."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:207
msgid ""
"It is important to note that the imported targets behave differently than "
"variables created by this module: multiple calls to :command:"
"`find_package(Boost)` in the same directory or sub-directories with "
"different options (e.g. static or shared) will not override the values of "
"the targets created by the first call."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:214
msgid "Other Variables"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:216
msgid ""
"Boost libraries come in many variants encoded in their file name. Users or "
"projects may tell this module which variant to find by setting variables:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:220
msgid "``Boost_USE_DEBUG_LIBS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:223
msgid ""
"Set to ``ON`` or ``OFF`` to specify whether to search and use the debug "
"libraries.  Default is ``ON``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:226
msgid "``Boost_USE_RELEASE_LIBS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:229
msgid ""
"Set to ``ON`` or ``OFF`` to specify whether to search and use the release "
"libraries.  Default is ``ON``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:232
msgid "``Boost_USE_MULTITHREADED``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:233
msgid ""
"Set to OFF to use the non-multithreaded libraries (\"mt\" tag). Default is "
"``ON``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:236
msgid "``Boost_USE_STATIC_LIBS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:237
msgid ""
"Set to ON to force the use of the static libraries.  Default is ``OFF``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:239
msgid "``Boost_USE_STATIC_RUNTIME``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:240
msgid ""
"Set to ``ON`` or ``OFF`` to specify whether to use libraries linked "
"statically to the C++ runtime (\"s\" tag).  Default is platform dependent."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:243
msgid "``Boost_USE_DEBUG_RUNTIME``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:244
msgid ""
"Set to ``ON`` or ``OFF`` to specify whether to use libraries linked to the "
"MS debug C++ runtime (\"g\" tag).  Default is ``ON``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:247
msgid "``Boost_USE_DEBUG_PYTHON``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:248
msgid ""
"Set to ``ON`` to use libraries compiled with a debug Python build (\"y\" "
"tag).  Default is ``OFF``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:251
msgid "``Boost_USE_STLPORT``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:252
msgid ""
"Set to ``ON`` to use libraries compiled with STLPort (\"p\" tag). Default is "
"``OFF``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:255
msgid "``Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:256
msgid ""
"Set to ON to use libraries compiled with STLPort deprecated \"native "
"iostreams\" (\"n\" tag).  Default is ``OFF``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:259
msgid "``Boost_COMPILER``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:260
msgid ""
"Set to the compiler-specific library suffix (e.g. ``-gcc43``).  Default is "
"auto-computed for the C++ compiler in use."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:263
msgid ""
"A list may be used if multiple compatible suffixes should be tested for, in "
"decreasing order of preference."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:267
msgid "``Boost_LIB_PREFIX``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:270
msgid ""
"Set to the platform-specific library name prefix (e.g. ``lib``) used by "
"Boost static libs.  This is needed only on platforms where CMake does not "
"know the prefix by default."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:274
msgid "``Boost_ARCHITECTURE``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:277
msgid ""
"Set to the architecture-specific library suffix (e.g. ``-x64``). Default is "
"auto-computed for the C++ compiler in use."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:280
msgid "``Boost_THREADAPI``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:281
msgid ""
"Suffix for ``thread`` component library name, such as ``pthread`` or "
"``win32``.  Names with and without this suffix will both be tried."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:284
msgid "``Boost_NAMESPACE``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:285
msgid ""
"Alternate namespace used to build boost with e.g. if set to ``myboost``, "
"will search for ``myboost_thread`` instead of ``boost_thread``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:288
msgid "Other variables one may set to control this module are:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:290
msgid "``Boost_DEBUG``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:291
msgid ""
"Set to ``ON`` to enable debug output from ``FindBoost``. Please enable this "
"before filing any bug report."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:294
msgid "``Boost_REALPATH``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:295
msgid ""
"Set to ``ON`` to resolve symlinks for discovered libraries to assist with "
"packaging.  For example, the \"system\" component library may be resolved to "
"``/usr/lib/libboost_system.so.1.67.0`` instead of ``/usr/lib/libboost_system."
"so``.  This does not affect linking and should not be enabled unless the "
"user needs this information."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:301
msgid "``Boost_LIBRARY_DIR``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:302
msgid ""
"Default value for ``Boost_LIBRARY_DIR_RELEASE`` and "
"``Boost_LIBRARY_DIR_DEBUG``."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:305
msgid "``Boost_NO_WARN_NEW_VERSIONS``"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:308
msgid ""
"Set to ``ON`` to suppress the warning about unknown dependencies for new "
"Boost versions."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:311
msgid ""
"On Visual Studio and Borland compilers Boost headers request automatic "
"linking to corresponding libraries.  This requires matching libraries to be "
"linked explicitly or available in the link library search path. In this case "
"setting ``Boost_USE_STATIC_LIBS`` to ``OFF`` may not achieve dynamic "
"linking.  Boost automatic linking typically requests static libraries with a "
"few exceptions (such as ``Boost.Python``).  Use:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:318
msgid "add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:322
msgid "to ask Boost to report information about automatic linking requests."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:325
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:327
msgid "Find Boost headers only:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:329
msgid ""
"find_package(Boost 1.36.0)\n"
"if(Boost_FOUND)\n"
"  include_directories(${Boost_INCLUDE_DIRS})\n"
"  add_executable(foo foo.cc)\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:337
msgid "Find Boost libraries and use imported targets:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:339
msgid ""
"find_package(Boost 1.56 REQUIRED COMPONENTS\n"
"             date_time filesystem iostreams)\n"
"add_executable(foo foo.cc)\n"
"target_link_libraries(foo Boost::date_time Boost::filesystem\n"
"                          Boost::iostreams)"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:347
msgid "Find Boost Python 3.6 libraries and use imported targets:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:349
msgid ""
"find_package(Boost 1.67 REQUIRED COMPONENTS\n"
"             python36 numpy36)\n"
"add_executable(foo foo.cc)\n"
"target_link_libraries(foo Boost::python36 Boost::numpy36)"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:356
msgid "Find Boost headers and some *static* (release only) libraries:"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:358
msgid ""
"set(Boost_USE_STATIC_LIBS        ON)  # only find static libs\n"
"set(Boost_USE_DEBUG_LIBS        OFF)  # ignore debug libs and\n"
"set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs\n"
"set(Boost_USE_MULTITHREADED      ON)\n"
"set(Boost_USE_STATIC_RUNTIME    OFF)\n"
"find_package(Boost 1.66.0 COMPONENTS date_time filesystem system ...)\n"
"if(Boost_FOUND)\n"
"  include_directories(${Boost_INCLUDE_DIRS})\n"
"  add_executable(foo foo.cc)\n"
"  target_link_libraries(foo ${Boost_LIBRARIES})\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:375
msgid "Boost CMake"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:377
msgid ""
"If Boost was built using the boost-cmake project or from Boost 1.70.0 on it "
"provides a package configuration file for use with find_package's config "
"mode. This module looks for the package configuration file called "
"``BoostConfig.cmake`` or ``boost-config.cmake`` and stores the result in "
"``CACHE`` entry ``Boost_DIR``.  If found, the package configuration file is "
"loaded and this module returns with no further action.  See documentation of "
"the Boost CMake package configuration for details on what it provides."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:385
msgid ""
"Set ``Boost_NO_BOOST_CMAKE`` to ``ON``, to disable the search for boost-"
"cmake."
msgstr ""
