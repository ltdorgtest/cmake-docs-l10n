# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPostgreSQL.cmake:6
msgid "FindPostgreSQL"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:8
msgid ""
"Finds the PostgreSQL installation - the client library (``libpq``) and "
"optionally the server."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:12
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:14
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:16
msgid "``PostgreSQL::PostgreSQL``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:19
msgid ""
"Target encapsulating all usage requirements of the required ``libpq`` client "
"library and the optionally requested PostgreSQL server component.  This "
"target is available only if PostgreSQL is found."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:24
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:26
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:28
msgid "``PostgreSQL_FOUND``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:29
msgid ""
"Boolean indicating whether the minimum required version and components of "
"PostgreSQL have been found."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:31
msgid "``PostgreSQL_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:32
msgid "The PostgreSQL libraries needed for linking."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:33
msgid "``PostgreSQL_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:34
msgid "The include directories containing PostgreSQL headers."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:35
msgid "``PostgreSQL_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:36
msgid "The directories containing PostgreSQL libraries."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:37
msgid "``PostgreSQL_VERSION_STRING``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:38
msgid "The version of PostgreSQL found."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:39
msgid "``PostgreSQL_TYPE_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:40
msgid "The include directory containing PostgreSQL server headers."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:43
msgid "Components"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:45
msgid "This module supports the following additional components:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:47
msgid "``Server``"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:50
msgid ""
"Ensures that server headers are also found.  Note that "
"``PostgreSQL_TYPE_INCLUDE_DIR`` variable is set regardless of whether this "
"component is specified in the ``find_package()`` call."
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:55
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:57
msgid ""
"Finding the PostgreSQL client library and linking it to a project target:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:59
msgid ""
"find_package(PostgreSQL)\n"
"target_link_libraries(project_target PRIVATE PostgreSQL::PostgreSQL)"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:64
msgid "Specifying a minimum required PostgreSQL version:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:66
msgid "find_package(PostgreSQL 11)"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:70
msgid ""
"Finding the PostgreSQL client library and requiring server headers using the "
"``Server`` component provides an imported target with all usage "
"requirements, which can then be linked to a project target:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:74
msgid ""
"find_package(PostgreSQL COMPONENTS Server)\n"
"target_link_libraries(project_target PRIVATE PostgreSQL::PostgreSQL)"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:79
msgid ""
"When checking for PostgreSQL client library features, some capabilities are "
"indicated by preprocessor macros in the ``libpq-fe.h`` header (e.g. "
"``LIBPQ_HAS_PIPELINING``).  Others may require using the :command:"
"`check_symbol_exists` command:"
msgstr ""

#: ../../../../Modules/FindPostgreSQL.cmake:84
msgid ""
"find_package(PostgreSQL)\n"
"target_link_libraries(project_target PRIVATE PostgreSQL::PostgreSQL)\n"
"\n"
"# The PQservice() function is available as of PostgreSQL 18.\n"
"if(TARGET PostgreSQL::PostgreSQL)\n"
"  include(CheckSymbolExists)\n"
"  include(CMakePushCheckState)\n"
"\n"
"  cmake_push_check_state(RESET)\n"
"  set(CMAKE_REQUIRED_LIBRARIES PostgreSQL::PostgreSQL)\n"
"  check_symbol_exists(PQservice \"libpq-fe.h\" PROJECT_HAS_PQSERVICE)\n"
"  cmake_pop_check_state()\n"
"endif()"
msgstr ""
