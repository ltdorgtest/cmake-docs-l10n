# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindMPI.cmake:6
msgid "FindMPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:8
msgid "Finds a Message Passing Interface (MPI) implementation:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:10
msgid "find_package(MPI [<version>] [COMPONENTS <langs>...] [...])"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:14
msgid ""
"The Message Passing Interface (MPI) is a library used to write high-"
"performance distributed-memory parallel applications, and is typically "
"deployed on a cluster.  MPI is a standard interface (defined by the MPI "
"forum) for which many implementations are available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:19
msgid ""
"Major overhaul of the module: many new variables, per-language components, "
"and support for a wider variety of runtimes."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:24
msgid "Components"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:26
msgid ""
"This module supports optional components that can be specified with the :"
"command:`find_package` command to control which MPI languages to search for:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:30
msgid "find_package(MPI [COMPONENTS <langs>...])"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:34
msgid "Supported components include:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:36
msgid "``C``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:39
msgid "Finds MPI C API."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:41
msgid "``CXX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:44
msgid "Finds the MPI C API that is usable from C++."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:46
msgid "``MPICXX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:49
msgid "Finds the MPI-2 C++ API that was removed in MPI-3."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:51
msgid "``Fortran``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:54
msgid "Finds the MPI Fortran API."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:56
msgid ""
"If no components are specified, module searches for the ``C``, ``CXX``, and "
"``Fortran`` components automatically, depending on which languages are "
"enabled in the project."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:61
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:63
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:65
msgid "``MPI::MPI_<lang>``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:68
msgid ""
"Target encapsulating usage requirements for using MPI from language "
"``<lang>``, available if MPI is found.  The ``<lang>`` is a specified "
"component name as listed above."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:73
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:75
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:77
msgid "``MPI_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:78
msgid ""
"Boolean indicating that MPI settings for all requested components "
"(languages) were found.  If no components are specified, this variable is "
"set to boolean true if MPI settings for all enabled languages were "
"detected.  Note that the ``MPICXX`` component does not affect this variable."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:84
msgid "``MPI_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:85
msgid ""
"Minimal version of MPI detected among the requested languages, or all "
"enabled languages if no components were specified."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:88
msgid ""
"This module will set the following variables per language in CMake project, "
"where ``<lang>`` is one of C, CXX, or Fortran:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:91
msgid "``MPI_<lang>_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:92
msgid ""
"Boolean indicating the MPI settings for ``<lang>`` were found and that "
"simple MPI test programs compile with the provided settings."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:95 ../../../../Modules/FindMPI.cmake:203
msgid "``MPI_<lang>_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:96
msgid "MPI compiler for ``<lang>`` if such a program exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:98
msgid "``MPI_<lang>_COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:99
msgid ""
"Compilation options for MPI programs in ``<lang>``, given as a :ref:"
"`semicolon-separated list <CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:102
msgid "``MPI_<lang>_COMPILE_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:103
msgid ""
"Compilation definitions for MPI programs in ``<lang>``, given as a :ref:"
"`semicolon-separated list <CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:106
msgid "``MPI_<lang>_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:107
msgid "Include path(s) for MPI header."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:109
msgid "``MPI_<lang>_LINK_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:110
msgid "Linker flags for MPI programs."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:112
msgid "``MPI_<lang>_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:113
msgid "All libraries to link MPI programs against."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:115
msgid ""
"The following variables indicating which bindings are present will be "
"defined:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:118
msgid "``MPI_MPICXX_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:119
msgid ""
"Boolean indicating whether the MPI-2 C++ bindings are present (introduced in "
"MPI-2, removed with MPI-3)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:122
msgid "``MPI_Fortran_HAVE_F77_HEADER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:123
msgid "True if the Fortran 77 header ``<mpif.h>`` is available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:125
msgid "``MPI_Fortran_HAVE_F90_MODULE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:126
msgid ""
"True if the Fortran 90 module ``mpi`` can be used for accessing MPI (MPI-2 "
"and higher only)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:129
msgid "``MPI_Fortran_HAVE_F08_MODULE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:130
msgid ""
"True if the Fortran 2008 ``mpi_f08`` is available to MPI programs (MPI-3 and "
"higher only)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:133
msgid ""
"If possible, the MPI version will be determined by this module.  The "
"facilities to detect the MPI version were introduced with MPI-1.2, and "
"therefore cannot be found for older MPI versions."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:137
msgid "``MPI_<lang>_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:138
msgid "MPI version implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:140
msgid "``MPI_<lang>_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:141
msgid ""
"Major version of MPI implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:143
msgid "``MPI_<lang>_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:144
msgid ""
"Minor version of MPI implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:146
msgid ""
"Note that there's no variable for the C bindings being accessible through "
"``<mpi.h>``, since the MPI standards always have required this binding to "
"work in both C and C++ code."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:150
msgid "For running MPI programs, the module sets the following variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:152 ../../../../Modules/FindMPI.cmake:188
msgid "``MPIEXEC_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:153
msgid "Executable for running MPI programs, if such exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:155
msgid "``MPIEXEC_NUMPROC_FLAG``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:156
msgid ""
"Flag to pass to ``mpiexec`` before giving it the number of processors to run "
"on."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:159
msgid "``MPIEXEC_MAX_NUMPROCS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:160
msgid ""
"Number of MPI processors to utilize.  Defaults to the number of processors "
"detected on the host system."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:163
msgid "``MPIEXEC_PREFLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:164
msgid "Flags to pass to ``mpiexec`` directly before the executable to run."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:166
msgid "``MPIEXEC_POSTFLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:167
msgid "Flags to pass to ``mpiexec`` after other flags."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:170
msgid "Variables for Locating MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:172
msgid "This module performs a four-step search for an MPI implementation:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:174
msgid ""
"Searches for ``MPIEXEC_EXECUTABLE`` and, if found, uses its base directory."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:176
msgid ""
"Checks if the compiler has MPI support built-in.  This is the case if the "
"user passed a compiler wrapper as :variable:`CMAKE_<LANG>_COMPILER` or if "
"they use Cray system compiler wrappers."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:179
msgid ""
"Attempts to find an MPI compiler wrapper and determines the compiler "
"information from it."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:181
msgid ""
"Tries to find an MPI implementation that does not ship such a wrapper by "
"guessing settings.  Currently, only Microsoft MPI and MPICH2 on Windows are "
"supported."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:185
msgid ""
"For controlling the ``MPIEXEC_EXECUTABLE`` step, the following variables may "
"be set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:189
msgid "Manually specify the location of ``mpiexec``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:191
msgid "``MPI_HOME``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:192
msgid "Specify the base directory of the MPI installation."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:194
msgid "``ENV{MPI_HOME}``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:195 ../../../../Modules/FindMPI.cmake:198
msgid ""
"Environment variable to specify the base directory of the MPI installation."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:197
msgid "``ENV{I_MPI_ROOT}``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:200
msgid ""
"For controlling the compiler wrapper step, the following variables may be "
"set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:204
msgid "Search for the specified compiler wrapper and use it."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:206
msgid "``MPI_<lang>_COMPILER_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:207
msgid ""
"Flags to pass to the MPI compiler wrapper during interrogation.  Some "
"compiler wrappers support linking debug or tracing libraries if a specific "
"flag is passed and this variable may be used to obtain them."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:211
msgid "``MPI_COMPILER_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:212
msgid ""
"Used to initialize ``MPI_<lang>_COMPILER_FLAGS`` if no language specific "
"flag has been given.  Empty by default."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:215
msgid "``MPI_EXECUTABLE_SUFFIX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:216
msgid ""
"A suffix which is appended to all names that are being looked for.  For "
"instance, it may be set to ``.mpich`` or ``.openmpi`` to prefer the one or "
"the other on Debian and its derivatives."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:220
msgid ""
"In order to control the guessing step, the following variable may be set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:222
msgid "``MPI_GUESS_LIBRARY_NAME``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:223
msgid ""
"Valid values are ``MSMPI`` and ``MPICH2``.  If set, only the given library "
"will be searched for.  By default, ``MSMPI`` will be preferred over "
"``MPICH2`` if both are available.  This also sets "
"``MPI_SKIP_COMPILER_WRAPPER`` variable to ``true``, which may be overridden."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:229
msgid ""
"Each of the search steps may be skipped with the following control variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:231
msgid "``MPI_ASSUME_NO_BUILTIN_MPI``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:232
msgid ""
"If true, the module assumes that the compiler itself does not provide an MPI "
"implementation and skips to step 2."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:235
msgid "``MPI_SKIP_COMPILER_WRAPPER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:236
msgid "If true, no compiler wrapper will be searched for."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:238
msgid "``MPI_SKIP_GUESSING``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:239
msgid "If true, the guessing step will be skipped."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:241
msgid ""
"Additionally, the following control variable is available to change search "
"behavior:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:244
msgid "``MPI_CXX_SKIP_MPICXX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:245
msgid ""
"Add some definitions that will disable the MPI-2 C++ bindings. Currently "
"supported are MPICH, Open MPI, Platform MPI and derivatives thereof, for "
"example, MVAPICH or Intel MPI."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:249
msgid ""
"If the find procedure fails for the module's internal variable "
"``MPI_<lang>_WORKS``, then the settings detected by or passed to the module "
"did not work and even a simple MPI test program failed to compile."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:253
msgid ""
"If all of these parameters were not sufficient to find the right MPI "
"implementation, a user may disable the entire autodetection process by "
"specifying both a list of libraries in ``MPI_<lang>_LIBRARIES`` and a list "
"of include directories in ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``.  Any other "
"variable may be set in addition to these two.  The module will then validate "
"the MPI settings and store the settings in the cache."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:261
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:263
msgid ""
"The variable ``MPI_<lang>_INCLUDE_DIRS`` will be assembled from the "
"following variables."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:266
msgid "For C and CXX:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:268
msgid "``MPI_<lang>_HEADER_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:269
msgid "Location of the ``<mpi.h>`` header on disk."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:271
msgid "For Fortran:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:273
msgid "``MPI_Fortran_F77_HEADER_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:274
msgid "Location of the Fortran 77 header ``<mpif.h>``, if it exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:276
msgid "``MPI_Fortran_MODULE_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:277
msgid "Location of the ``mpi`` or ``mpi_f08`` modules, if available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:279
msgid "For all languages the following variables are additionally considered:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:281
msgid "``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:282
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of paths needed in "
"addition to the normal include directories."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:285
msgid "``MPI_<include-name>_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:286
msgid "Path variables for include folders referred to by ``<include-name>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:288
msgid "``MPI_<lang>_ADDITIONAL_INCLUDE_VARS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:289
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of ``<include-"
"name>`` that will be added to the include locations of ``<lang>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:293
msgid ""
"The variable ``MPI_<lang>_LIBRARIES`` will be assembled from the following "
"variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:296
msgid "``MPI_<lib-name>_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:297
msgid "The location of a library called ``<lib-name>`` for use with MPI."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:299
msgid "``MPI_<lang>_LIB_NAMES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:300
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of ``<lib-name>`` "
"that will be added to the include locations of ``<lang>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:304
msgid "Advanced Variables for Using MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:306
msgid ""
"The module can perform some advanced feature detections upon explicit "
"request."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:311
msgid ""
"The following checks cannot be performed without *executing* an MPI test "
"program.  Consider the special considerations for the behavior of :command:"
"`try_run` during cross compilation.  Moreover, running an MPI program can "
"cause additional issues, like a firewall notification on some systems.  "
"These detections should be only enabled if information is absolutely needed."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:318
msgid ""
"If the following variables are set to true, the respective search will be "
"performed:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:321
msgid "``MPI_DETERMINE_Fortran_CAPABILITIES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:322
msgid ""
"Determine for all available Fortran bindings what the values of "
"``MPI_SUBARRAYS_SUPPORTED`` and ``MPI_ASYNC_PROTECTS_NONBLOCKING`` are and "
"make their values available as ``MPI_Fortran_<binding>_SUBARRAYS`` and "
"``MPI_Fortran_<binding>_ASYNCPROT``, where ``<binding>`` is one of "
"``F77_HEADER``, ``F90_MODULE`` and ``F08_MODULE``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:328
msgid "``MPI_DETERMINE_LIBRARY_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:329
msgid ""
"For each language, find the output of ``MPI_Get_library_version`` and make "
"it available as ``MPI_<lang>_LIBRARY_VERSION_STRING``.  This information is "
"usually tied to the runtime component of an MPI implementation and might "
"differ depending on ``<lang>``. Note that the return value is entirely "
"implementation defined.  This information might be used to identify the MPI "
"vendor and for example pick the correct one of multiple third party binaries "
"that matches the MPI vendor."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:339
msgid "Deprecated Variables"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:341
msgid "The following variables are provided for backward compatibility:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:343
msgid "``MPI_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:344
msgid "Use the ``MPI_<lang>_COMPILER`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:347
msgid "``MPI_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:348 ../../../../Modules/FindMPI.cmake:352
#: ../../../../Modules/FindMPI.cmake:369
msgid "Use the ``MPI_<lang>_LIBRARIES`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:351
msgid "``MPI_EXTRA_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:355
msgid "``MPI_COMPILE_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:356
msgid ""
"Use ``MPI_<lang>_COMPILE_OPTIONS`` and ``MPI_<lang>_COMPILE_DEFINITIONS`` "
"instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:360
msgid "``MPI_INCLUDE_PATH``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:361
msgid "Use the ``MPI_<lang>_INCLUDE_DIRS`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:364
msgid "``MPI_LINK_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:365
msgid "Use the ``MPI_<lang>_LINK_FLAGS`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:368
msgid "``MPI_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:372
msgid "``MPI_<lang>_COMPILE_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:373
msgid ""
"Use the ``MPI_<lang>_COMPILE_OPTIONS`` and "
"``MPI_<lang>_COMPILE_DEFINITIONS`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:377
msgid "``MPI_<lang>_INCLUDE_PATH``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:378
msgid ""
"For consumption use ``MPI_<lang>_INCLUDE_DIRS`` and for specifying folders "
"use ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:382
msgid "``MPIEXEC``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:383
msgid "Use ``MPIEXEC_EXECUTABLE`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:387
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:390
msgid "Example: Basic Usage"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:392
msgid "Finding MPI and linking imported target to project target:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:394
msgid ""
"find_package(MPI)\n"
"target_link_libraries(example PRIVATE MPI::MPI_C)"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:400
msgid "Example: Usage of mpiexec"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:402
msgid ""
"When using ``MPIEXEC_EXECUTABLE`` to execute MPI applications, typically all "
"of the ``MPIEXEC_EXECUTABLE`` flags should be used as follows."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:405
msgid ""
"In the following example, the command is executed in a process. "
"``<executable>`` should be replaced with the MPI program, and ``<args>`` "
"with the arguments to pass to the MPI program."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:409
msgid ""
"find_package(MPI)\n"
"\n"
"if(MPI_FOUND)\n"
"  execute_process(\n"
"    COMMAND\n"
"      ${MPIEXEC_EXECUTABLE}\n"
"      ${MPIEXEC_NUMPROC_FLAG}\n"
"      ${MPIEXEC_MAX_NUMPROCS}\n"
"      ${MPIEXEC_PREFLAGS}\n"
"      <executable>\n"
"      ${MPIEXEC_POSTFLAGS}\n"
"      <args>\n"
"  )\n"
"endif()"
msgstr ""
