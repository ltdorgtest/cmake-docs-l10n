# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindSDL.cmake:6
msgid "FindSDL"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:8
msgid ""
"Finds the SDL (Simple DirectMedia Layer) library.  SDL is a cross-platform "
"library for developing multimedia software, such as games and emulators."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:13
msgid ""
"This module is specifically intended for SDL version 1.  Starting with "
"version 2, SDL provides a CMake package configuration file when built with "
"CMake and should be found using ``find_package(SDL2)``.  Similarly, SDL "
"version 3 can be found using ``find_package(SDL3)``.  These newer versions "
"provide separate :ref:`Imported Targets` that encapsulate usage "
"requirements.  Refer to the official SDL documentation for more information."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:20
msgid ""
"Note that the include path for the SDL header has changed in recent SDL 1 "
"versions from ``SDL/SDL.h`` to simply ``SDL.h``.  This change aligns with "
"SDL's convention of using ``#include \"SDL.h\"`` for portability, as not all "
"systems install the headers in a ``SDL/`` subdirectory (e.g., FreeBSD)."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:25
msgid ""
"When targeting macOS and using the SDL framework, be sure to include both "
"``SDLmain.h`` and ``SDLmain.m`` in the project.  For other platforms, the "
"``SDLmain`` library is typically linked using ``-lSDLmain``, which this "
"module will attempt to locate automatically.  Additionally, for macOS, this "
"module will add the ``-framework Cocoa`` flag as needed."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:32
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:34
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:36
msgid "``SDL::SDL``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:39
msgid ""
"Target encapsulating the SDL library usage requirements, available if SDL is "
"found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:43
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:45
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:47
msgid "``SDL_FOUND``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:48
msgid "Boolean indicating whether the (requested version of) SDL is found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:50
msgid "``SDL_VERSION``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:53
msgid "The human-readable string containing the version of SDL found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:55
msgid "``SDL_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:58
msgid "The major version of SDL found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:60
msgid "``SDL_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:63
msgid "The minor version of SDL found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:65
msgid "``SDL_VERSION_PATCH``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:68
msgid "The patch version of SDL found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:70
msgid "``SDL_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:73
msgid "Include directories needed to use SDL."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:75
msgid "``SDL_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:78
msgid "Libraries needed to link against to use SDL."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:81
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:83
msgid ""
"These variables may optionally be set to help this module find the correct "
"files:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:86
msgid "``SDL_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:87
msgid "The directory containing the ``SDL.h`` header file."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:88
msgid "``SDL_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:89
msgid ""
"A list of libraries containing the path to the SDL library and libraries "
"needed to link against to use SDL."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:93
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:95
msgid "This module accepts the following variables:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:97
msgid "``SDL_BUILDING_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:98
msgid ""
"When set to boolean true, the ``SDL_main`` library will be excluded from "
"linking, as it is not required when building the SDL library itself (only "
"applications need ``main()`` function).  If not set, this module assumes an "
"application is being built and attempts to locate and include the "
"appropriate ``SDL_main`` link flags in the returned ``SDL_LIBRARY`` variable."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:104
msgid "``SDLDIR``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:105
msgid ""
"Environment variable that can be set to help locate an SDL library installed "
"in a custom location.  It should point to the installation destination that "
"was used when configuring, building, and installing SDL library: ``./"
"configure --prefix=$SDLDIR``."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:110
msgid ""
"On macOS, setting this variable will prefer the Framework version (if found) "
"over others.  In this case, the cache value of ``SDL_LIBRARY`` would need to "
"be manually changed to override this selection or set the :variable:"
"`CMAKE_INCLUDE_PATH` variable to modify the search paths."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:116
msgid "Troubleshooting"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:118
msgid ""
"In case the SDL library is not found automatically, the ``SDL_LIBRARY_TEMP`` "
"variable may be empty, and ``SDL_LIBRARY`` will not be set.  This typically "
"means that CMake could not locate the SDL library (e.g., ``SDL.dll``, "
"``libSDL.so``, ``SDL.framework``, etc.).  To resolve this, manually set "
"``SDL_LIBRARY_TEMP`` to the correct path and reconfigure the project. "
"Similarly, if ``SDLMAIN_LIBRARY`` is unset, it may also need to be specified "
"manually.  These variables are used to construct the final ``SDL_LIBRARY`` "
"value.  If they are not set, ``SDL_LIBRARY`` will remain undefined."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:128
msgid "Deprecated Variables"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:130
msgid "These variables are obsolete and provided for backwards compatibility:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:132
msgid "``SDL_VERSION_STRING``"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:133
msgid "Superseded by the ``SDL_VERSION`` with the same value."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:136
msgid "The human-readable string containing the version of SDL if found."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:139
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:141
msgid "Finding SDL library and linking it to a project target:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:143
msgid ""
"find_package(SDL)\n"
"target_link_libraries(project_target PRIVATE SDL::SDL)"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:148
msgid ""
"When working with SDL version 2, the upstream package provides the ``SDL2::"
"SDL2`` imported target directly.  It can be used in a project without using "
"this module:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:152
msgid ""
"find_package(SDL2)\n"
"target_link_libraries(project_target PRIVATE SDL2::SDL2)"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:157
msgid "Similarly, for SDL version 3:"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:159
msgid ""
"find_package(SDL3)\n"
"target_link_libraries(project_target PRIVATE SDL3::SDL3)"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:165
msgid "See Also"
msgstr ""

#: ../../../../Modules/FindSDL.cmake:167
msgid "The :module:`FindSDL_gfx` module to find the SDL_gfx library."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:168
msgid "The :module:`FindSDL_image` module to find the SDL_image library."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:169
msgid "The :module:`FindSDL_mixer` module to find the SDL_mixer library."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:170
msgid "The :module:`FindSDL_net` module to find the SDL_net library."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:171
msgid "The :module:`FindSDL_sound` module to find the SDL_sound library."
msgstr ""

#: ../../../../Modules/FindSDL.cmake:172
msgid "The :module:`FindSDL_ttf` module to find the SDL_ttf library."
msgstr ""
