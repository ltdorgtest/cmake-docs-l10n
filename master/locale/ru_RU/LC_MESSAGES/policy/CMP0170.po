# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0170.rst:2
msgid "CMP0170"
msgstr ""

#: ../../../policy/CMP0170.rst:6
msgid ""
"When ``FETCHCONTENT_FULLY_DISCONNECTED`` is set to true, :command:"
"`FetchContent_MakeAvailable` and :command:`FetchContent_Populate` enforce "
"the constraint that their source directory must already be populated. The "
"requirement has always been documented, but it was not checked or enforced "
"with CMake 3.29 or older.  This sometimes led to hard-to-trace errors when a "
"project expected a dependency to have been populated, but its population was "
"silently skipped."
msgstr ""

#: ../../../policy/CMP0170.rst:14
msgid ""
"CMake 3.30 and above prefers to check and enforce the constraint. This "
"policy provides compatibility for situations where the user cannot easily "
"prevent ``FETCHCONTENT_FULLY_DISCONNECTED`` from being inappropriately set "
"to true."
msgstr ""

#: ../../../policy/CMP0170.rst:19
msgid ""
"The ``OLD`` behavior of this policy allows "
"``FETCHCONTENT_FULLY_DISCONNECTED`` to be set to true even if a dependency's "
"source directory has not been populated. The ``NEW`` behavior halts with a "
"fatal error if ``FETCHCONTENT_FULLY_DISCONNECTED`` is set to true and a "
"dependency population would be skipped, but that dependency's source "
"directory doesn't exist."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
