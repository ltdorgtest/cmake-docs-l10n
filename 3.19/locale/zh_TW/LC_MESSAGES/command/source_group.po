# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/source_group.rst:2
msgid "source_group"
msgstr ""

#: ../../../command/source_group.rst:4
msgid ""
"Define a grouping for source files in IDE project generation. There are two "
"different signatures to create source groups."
msgstr ""

#: ../../../command/source_group.rst:7
msgid ""
"source_group(<name> [FILES <src>...] [REGULAR_EXPRESSION <regex>])\n"
"source_group(TREE <root> [PREFIX <prefix>] [FILES <src>...])"
msgstr ""

#: ../../../command/source_group.rst:12
msgid ""
"Defines a group into which sources will be placed in project files. This is "
"intended to set up file tabs in Visual Studio. The options are:"
msgstr ""

#: ../../../command/source_group.rst:16
msgid "``TREE``"
msgstr ""

#: ../../../command/source_group.rst:17
msgid ""
"CMake will automatically detect, from ``<src>`` files paths, source groups "
"it needs to create, to keep structure of source groups analogically to the "
"actual files and directories structure in the project. Paths of ``<src>`` "
"files will be cut to be relative to ``<root>``."
msgstr ""

#: ../../../command/source_group.rst:22
msgid "``PREFIX``"
msgstr ""

#: ../../../command/source_group.rst:23
msgid ""
"Source group and files located directly in ``<root>`` path, will be placed "
"in ``<prefix>`` source groups."
msgstr ""

#: ../../../command/source_group.rst:26
msgid "``FILES``"
msgstr ""

#: ../../../command/source_group.rst:27
msgid ""
"Any source file specified explicitly will be placed in group ``<name>``.  "
"Relative paths are interpreted with respect to the current source directory."
msgstr ""

#: ../../../command/source_group.rst:31
msgid "``REGULAR_EXPRESSION``"
msgstr ""

#: ../../../command/source_group.rst:32
msgid ""
"Any source file whose name matches the regular expression will be placed in "
"group ``<name>``."
msgstr ""

#: ../../../command/source_group.rst:35
msgid ""
"If a source file matches multiple groups, the *last* group that explicitly "
"lists the file with ``FILES`` will be favored, if any. If no group "
"explicitly lists the file, the *last* group whose regular expression matches "
"the file will be favored."
msgstr ""

#: ../../../command/source_group.rst:40
msgid ""
"The ``<name>`` of the group and ``<prefix>`` argument may contain forward "
"slashes or backslashes to specify subgroups.  Backslashes need to be escaped "
"appropriately:"
msgstr ""

#: ../../../command/source_group.rst:44
msgid ""
"source_group(base/subdir ...)\n"
"source_group(outer\\\\inner ...)\n"
"source_group(TREE <root> PREFIX sources\\\\inc ...)"
msgstr ""

#: ../../../command/source_group.rst:50
msgid "For backwards compatibility, the short-hand signature"
msgstr ""

#: ../../../command/source_group.rst:52
msgid "source_group(<name> <regex>)"
msgstr ""

#: ../../../command/source_group.rst:56
msgid "is equivalent to"
msgstr ""

#: ../../../command/source_group.rst:58
msgid "source_group(<name> REGULAR_EXPRESSION <regex>)"
msgstr ""
