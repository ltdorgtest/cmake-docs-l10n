# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPython3.cmake:6
msgid "FindPython3"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:10
msgid ""
"Find Python 3 interpreter, compiler and development environment (include "
"directories and libraries)."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:13
msgid ""
"When a version is requested, it can be specified as a simple value or as a "
"range. For a detailed description of version range usage and capabilities, "
"refer to the :command:`find_package` command."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:17
msgid "The following components are supported:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:19
msgid "``Interpreter``: search for Python 3 interpreter"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:20
msgid "``Compiler``: search for Python 3 compiler. Only offered by IronPython."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:21
msgid ""
"``Development``: search for development artifacts (include directories and "
"libraries). This component includes two sub-components which can be "
"specified independently:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:25
msgid ""
"``Development.Module``: search for artifacts for Python 3 module "
"developments."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:27
msgid ""
"``Development.Embed``: search for artifacts for Python 3 embedding "
"developments."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:30
msgid "``NumPy``: search for NumPy include directories."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:32
msgid "If no ``COMPONENTS`` are specified, ``Interpreter`` is assumed."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:34
msgid ""
"If component ``Development`` is specified, it implies sub-components "
"``Development.Module`` and ``Development.Embed``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:37
msgid ""
"To ensure consistent versions between components ``Interpreter``, "
"``Compiler``, ``Development`` (or one of its sub-components) and ``NumPy``, "
"specify all components at the same time::"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:41
msgid "find_package (Python3 COMPONENTS Interpreter Development)"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:43
msgid ""
"This module looks only for version 3 of Python. This module can be used "
"concurrently with :module:`FindPython2` module to use both Python versions."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:46
msgid ""
"The :module:`FindPython` module can be used if Python version does not "
"matter for you."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:51
msgid ""
"If components ``Interpreter`` and ``Development`` (or one of its sub-"
"components) are both specified, this module search only for interpreter with "
"same platform architecture as the one defined by ``CMake`` configuration. "
"This constraint does not apply if only ``Interpreter`` component is "
"specified."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:58
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:60
msgid ""
"This module defines the following :ref:`Imported Targets <Imported Targets>` "
"(when :prop_gbl:`CMAKE_ROLE` is ``PROJECT``):"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:63
msgid "``Python3::Interpreter``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:64
msgid ""
"Python 3 interpreter. Target defined if component ``Interpreter`` is found."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:65
msgid "``Python3::Compiler``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:66
msgid "Python 3 compiler. Target defined if component ``Compiler`` is found."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:67
msgid "``Python3::Module``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:68
msgid ""
"Python 3 library for Python module. Target defined if component "
"``Development.Module`` is found."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:70
msgid "``Python3::Python``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:71
msgid ""
"Python 3 library for Python embedding. Target defined if component "
"``Development.Embed`` is found."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:73
msgid "``Python3::NumPy``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:74
msgid ""
"NumPy library for Python 3. Target defined if component ``NumPy`` is found."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:77
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:79
msgid ""
"This module will set the following variables in your project (see :ref:"
"`Standard Variable Names <CMake Developer Standard Variable Names>`):"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:82
msgid "``Python3_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:83
msgid "System has the Python 3 requested components."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:84
msgid "``Python3_Interpreter_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:85
msgid "System has the Python 3 interpreter."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:86
#: ../../../../Modules/FindPython3.cmake:324
msgid "``Python3_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:87
msgid "Path to the Python 3 interpreter."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:88
msgid "``Python3_INTERPRETER_ID``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:89
msgid "A short string unique to the interpreter. Possible values include:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:90
msgid "Python"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:91
msgid "ActivePython"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:92
msgid "Anaconda"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:93
msgid "Canopy"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:94
#: ../../../../Modules/FindPython3.cmake:135
msgid "IronPython"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:95
msgid "PyPy"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:96
msgid "``Python3_STDLIB``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:97
msgid "Standard platform independent installation directory."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:99
msgid ""
"Information returned by ``distutils.sysconfig."
"get_python_lib(plat_specific=False,standard_lib=True)`` or else ``sysconfig."
"get_path('stdlib')``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:102
msgid "``Python3_STDARCH``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:103
msgid "Standard platform dependent installation directory."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:105
msgid ""
"Information returned by ``distutils.sysconfig."
"get_python_lib(plat_specific=True,standard_lib=True)`` or else ``sysconfig."
"get_path('platstdlib')``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:108
msgid "``Python3_SITELIB``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:109
msgid "Third-party platform independent installation directory."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:111
msgid ""
"Information returned by ``distutils.sysconfig."
"get_python_lib(plat_specific=False,standard_lib=False)`` or else ``sysconfig."
"get_path('purelib')``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:114
msgid "``Python3_SITEARCH``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:115
msgid "Third-party platform dependent installation directory."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:117
msgid ""
"Information returned by ``distutils.sysconfig."
"get_python_lib(plat_specific=True,standard_lib=False)`` or else ``sysconfig."
"get_path('platlib')``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:120
msgid "``Python3_SOABI``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:121
msgid "Extension suffix for modules."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:123
msgid ""
"Information returned by ``distutils.sysconfig.get_config_var('SOABI')`` or "
"computed from ``distutils.sysconfig.get_config_var('EXT_SUFFIX')`` or "
"``python3-config --extension-suffix``. If package ``distutils.sysconfig`` is "
"not available, ``sysconfig.get_config_var('SOABI')`` or ``sysconfig."
"get_config_var('EXT_SUFFIX')`` are used."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:129
msgid "``Python3_Compiler_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:130
msgid "System has the Python 3 compiler."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:131
#: ../../../../Modules/FindPython3.cmake:327
msgid "``Python3_COMPILER``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:132
msgid "Path to the Python 3 compiler. Only offered by IronPython."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:133
msgid "``Python3_COMPILER_ID``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:134
msgid "A short string unique to the compiler. Possible values include:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:136
#: ../../../../Modules/FindPython3.cmake:330
msgid "``Python3_DOTNET_LAUNCHER``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:137
#: ../../../../Modules/FindPython3.cmake:331
msgid "The ``.Net`` interpreter. Only used by ``IronPython`` implementation."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:138
msgid "``Python3_Development_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:139
msgid "System has the Python 3 development artifacts."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:140
msgid "``Python3_Development.Module_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:141
msgid "System has the Python 3 development artifacts for Python module."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:142
msgid "``Python3_Development.Embed_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:143
msgid "System has the Python 3 development artifacts for Python embedding."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:144
msgid "``Python3_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:145
msgid "The Python 3 include directories."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:146
msgid "``Python3_LINK_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:147
msgid ""
"The Python 3 link options. Some configurations require specific link options "
"for a correct build and execution."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:149
msgid "``Python3_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:150
msgid "The Python 3 libraries."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:151
msgid "``Python3_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:152
msgid "The Python 3 library directories."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:153
msgid "``Python3_RUNTIME_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:154
msgid "The Python 3 runtime library directories."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:155
msgid "``Python3_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:156
msgid "Python 3 version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:157
msgid "``Python3_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:158
msgid "Python 3 major version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:159
msgid "``Python3_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:160
msgid "Python 3 minor version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:161
msgid "``Python3_VERSION_PATCH``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:162
msgid "Python 3 patch version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:163
msgid "``Python3_PyPy_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:164
msgid "Python 3 PyPy version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:165
msgid "``Python3_NumPy_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:166
msgid "System has the NumPy."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:167
msgid "``Python3_NumPy_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:168
msgid "The NumPy include directories."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:169
msgid "``Python3_NumPy_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:170
msgid "The NumPy version."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:173
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:175
msgid "``Python3_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:176
msgid "Define the root directory of a Python 3 installation."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:178
msgid "``Python3_USE_STATIC_LIBS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:179
msgid ""
"If not defined, search for shared libraries and static libraries in that "
"order."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:181
msgid "If set to TRUE, search **only** for static libraries."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:182
msgid "If set to FALSE, search **only** for shared libraries."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:184
msgid "``Python3_FIND_ABI``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:185
msgid ""
"This variable defines which ABIs, as defined in `PEP 3149 <https://www."
"python.org/dev/peps/pep-3149/>`_, should be searched."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:190
msgid "If ``Python3_FIND_ABI`` is not defined, any ABI will be searched."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:192
msgid ""
"The ``Python3_FIND_ABI`` variable is a 3-tuple specifying, in that order, "
"``pydebug`` (``d``), ``pymalloc`` (``m``) and ``unicode`` (``u``) flags. "
"Each element can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:196
msgid "``ON``: Corresponding flag is selected."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:197
msgid "``OFF``: Corresponding flag is not selected."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:198
msgid "``ANY``: The two possibilities (``ON`` and ``OFF``) will be searched."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:200
msgid ""
"From this 3-tuple, various ABIs will be searched starting from the most "
"specialized to the most general. Moreover, ``debug`` versions will be "
"searched **after** ``non-debug`` ones."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:204
msgid "For example, if we have::"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:206
msgid "set (Python3_FIND_ABI \"ON\" \"ANY\" \"ANY\")"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:208
msgid ""
"The following flags combinations will be appended, in that order, to the "
"artifact names: ``dmu``, ``dm``, ``du``, and ``d``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:211
msgid "And to search any possible ABIs::"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:213
msgid "set (Python3_FIND_ABI \"ANY\" \"ANY\" \"ANY\")"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:215
msgid ""
"The following combinations, in that order, will be used: ``mu``, ``m``, "
"``u``, ``<empty>``, ``dmu``, ``dm``, ``du`` and ``d``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:220
msgid ""
"This hint is useful only on ``POSIX`` systems. So, on ``Windows`` systems, "
"when ``Python3_FIND_ABI`` is defined, ``Python`` distributions from `python."
"org <https://www.python.org/>`_ will be found only if value for each flag is "
"``OFF`` or ``ANY``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:225
msgid "``Python3_FIND_STRATEGY``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:226
msgid ""
"This variable defines how lookup will be done. The ``Python3_FIND_STRATEGY`` "
"variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:229
msgid ""
"``VERSION``: Try to find the most recent version in all specified locations. "
"This is the default if policy :policy:`CMP0094` is undefined or set to "
"``OLD``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:233
msgid ""
"``LOCATION``: Stops lookup as soon as a version satisfying version "
"constraints is founded. This is the default if policy :policy:`CMP0094` is "
"set to ``NEW``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:237
msgid "``Python3_FIND_REGISTRY``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:238
msgid ""
"On Windows the ``Python3_FIND_REGISTRY`` variable determine the order of "
"preference between registry and environment variables. The "
"``Python3_FIND_REGISTRY`` variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:242
msgid ""
"``FIRST``: Try to use registry before environment variables. This is the "
"default."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:244
msgid "``LAST``: Try to use registry after environment variables."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:245
msgid "``NEVER``: Never try to use registry."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:247
msgid "``Python3_FIND_FRAMEWORK``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:248
msgid ""
"On macOS the ``Python3_FIND_FRAMEWORK`` variable determine the order of "
"preference between Apple-style and unix-style package components. This "
"variable can take same values as :variable:`CMAKE_FIND_FRAMEWORK` variable."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:255
msgid "Value ``ONLY`` is not supported so ``FIRST`` will be used instead."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:257
msgid ""
"If ``Python3_FIND_FRAMEWORK`` is not defined, :variable:"
"`CMAKE_FIND_FRAMEWORK` variable will be used, if any."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:260
msgid "``Python3_FIND_VIRTUALENV``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:261
msgid ""
"This variable defines the handling of virtual environments managed by "
"``virtualenv`` or ``conda``. It is meaningful only when a virtual "
"environment is active (i.e. the ``activate`` script has been evaluated). In "
"this case, it takes precedence over ``Python3_FIND_REGISTRY`` and "
"``CMAKE_FIND_FRAMEWORK`` variables.  The ``Python3_FIND_VIRTUALENV`` "
"variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:268
msgid ""
"``FIRST``: The virtual environment is used before any other standard paths "
"to look-up for the interpreter. This is the default."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:270
msgid ""
"``ONLY``: Only the virtual environment is used to look-up for the "
"interpreter."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:272
msgid ""
"``STANDARD``: The virtual environment is not used to look-up for the "
"interpreter but environment variable ``PATH`` is always considered. In this "
"case, variable ``Python3_FIND_REGISTRY`` (Windows) or "
"``CMAKE_FIND_FRAMEWORK`` (macOS) can be set with value ``LAST`` or ``NEVER`` "
"to select preferably the interpreter from the virtual environment."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:281
msgid ""
"If the component ``Development`` is requested, it is **strongly** "
"recommended to also include the component ``Interpreter`` to get expected "
"result."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:285
msgid "``Python3_FIND_IMPLEMENTATIONS``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:286
msgid ""
"This variable defines, in an ordered list, the different implementations "
"which will be searched. The ``Python3_FIND_IMPLEMENTATIONS`` variable can "
"hold the following values:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:290
msgid ""
"``CPython``: this is the standard implementation. Various products, like "
"``Anaconda`` or ``ActivePython``, rely on this implementation."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:292
msgid ""
"``IronPython``: This implementation use the ``CSharp`` language for ``.NET "
"Framework`` on top of the `Dynamic Language Runtime` (``DLR``). See "
"`IronPython <http://ironpython.net>`_."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:295
msgid ""
"``PyPy``: This implementation use ``RPython`` language and ``RPython "
"translation toolchain`` to produce the python interpreter. See `PyPy "
"<https://www.pypy.org>`_."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:299
msgid "The default value is:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:301
msgid "Windows platform: ``CPython``, ``IronPython``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:302
msgid "Other platforms: ``CPython``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:306
msgid ""
"This hint has the lowest priority of all hints, so even if, for example, you "
"specify ``IronPython`` first and ``CPython`` in second, a python product "
"based on ``CPython`` can be selected because, for example with "
"``Python3_FIND_STRATEGY=LOCATION``, each location will be search first for "
"``IronPython`` and second for ``CPython``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:314
msgid ""
"When ``IronPython`` is specified, on platforms other than ``Windows``, the "
"``.Net`` interpreter (i.e. ``mono`` command) is expected to be available "
"through the ``PATH`` variable."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:319
msgid "Artifacts Specification"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:321
msgid ""
"To solve special cases, it is possible to specify directly the artifacts by "
"setting the following variables:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:325
msgid "The path to the interpreter."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:328
msgid "The path to the compiler."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:333
msgid "``Python3_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:334
msgid ""
"The path to the library. It will be used to compute the variables "
"``Python3_LIBRARIES``, ``Python3_LIBRARY_DIRS`` and "
"``Python3_RUNTIME_LIBRARY_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:338
msgid "``Python3_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:339
msgid ""
"The path to the directory of the ``Python`` headers. It will be used to "
"compute the variable ``Python3_INCLUDE_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:342
msgid "``Python3_NumPy_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:343
msgid ""
"The path to the directory of the ``NumPy`` headers. It will be used to "
"compute the variable ``Python3_NumPy_INCLUDE_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:348
msgid ""
"All paths must be absolute. Any artifact specified with a relative path will "
"be ignored."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:353
msgid ""
"When an artifact is specified, all ``HINTS`` will be ignored and no search "
"will be performed for this artifact."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:356
msgid ""
"If more than one artifact is specified, it is the user's responsibility to "
"ensure the consistency of the various artifacts."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:359
msgid ""
"By default, this module supports multiple calls in different directories of "
"a project with different version/component requirements while providing "
"correct and consistent results for each call. To support this behavior, "
"``CMake`` cache is not used in the traditional way which can be problematic "
"for interactive specification. So, to enable also interactive specification, "
"module behavior can be controlled with the following variable:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:366
msgid "``Python3_ARTIFACTS_INTERACTIVE``"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:367
msgid "Selects the behavior of the module. This is a boolean variable:"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:369
msgid ""
"If set to ``TRUE``: Create CMake cache entries for the above artifact "
"specification variables so that users can edit them interactively. This "
"disables support for multiple version/component requirements."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:372
msgid ""
"If set to ``FALSE`` or undefined: Enable multiple version/component "
"requirements."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:376
msgid "Commands"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:378
msgid ""
"This module defines the command ``Python3_add_library`` (when :prop_gbl:"
"`CMAKE_ROLE` is ``PROJECT``), which has the same semantics as :command:"
"`add_library` and adds a dependency to target ``Python3::Python`` or, when "
"library type is ``MODULE``, to target ``Python3::Module`` and takes care of "
"Python module naming rules::"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:384
msgid ""
"Python3_add_library (<name> [STATIC | SHARED | MODULE [WITH_SOABI]]\n"
"                     <source1> [<source2> ...])"
msgstr ""

#: ../../../../Modules/FindPython3.cmake:387
msgid "If the library type is not specified, ``MODULE`` is assumed."
msgstr ""

#: ../../../../Modules/FindPython3.cmake:389
msgid ""
"For ``MODULE`` library type, if option ``WITH_SOABI`` is specified, the "
"module suffix will include the ``Python3_SOABI`` value, if any."
msgstr ""
