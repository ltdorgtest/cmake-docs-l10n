# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/UseSWIG.cmake:6
msgid "UseSWIG"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:8
msgid ""
"This file provides support for ``SWIG``. It is assumed that :module:"
"`FindSWIG` module has already been loaded."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:12
msgid "Contents"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:16
msgid "CMake Commands"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:18
msgid "The following command is defined for use with ``SWIG``:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:24
msgid "Define swig module with given name and specified language:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:26
msgid ""
"swig_add_library(<name>\n"
"                 [TYPE <SHARED|MODULE|STATIC|USE_BUILD_SHARED_LIBS>]\n"
"                 LANGUAGE <language>\n"
"                 [NO_PROXY]\n"
"                 [OUTPUT_DIR <directory>]\n"
"                 [OUTFILE_DIR <directory>]\n"
"                 SOURCES <file>...\n"
"                )"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:37
msgid ""
"Targets created with the ``swig_add_library`` command have the same "
"capabilities as targets created with the :command:`add_library` command, so "
"those targets can be used with any command expecting a target (e.g. :command:"
"`target_link_libraries`)."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:42
msgid ""
"This command creates a target with the specified ``<name>`` when policy :"
"policy:`CMP0078` is set to ``NEW``.  Otherwise, the legacy behavior will "
"choose a different target name and store it in the "
"``SWIG_MODULE_<name>_REAL_NAME`` variable."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:48
msgid ""
"Alternate library name (set with the :prop_tgt:`OUTPUT_NAME` property, for "
"example) will be passed on to ``Python`` and ``CSharp`` wrapper libraries."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:53
msgid ""
"Generated library use standard naming conventions for ``CSharp`` language "
"when policy :policy:`CMP0122` is set to ``NEW``. Otherwise, the legacy "
"behavior is applied."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:60
msgid ""
"For multi-config generators, this module does not support configuration-"
"specific files generated by ``SWIG``. All build configurations must result "
"in the same generated source file."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:66
msgid ""
"For :ref:`Makefile Generators`, if, for some sources, the "
"``USE_SWIG_DEPENDENCIES`` property is ``FALSE``, ``swig_add_library`` does "
"not track file dependencies, so depending on the ``<name>_swig_compilation`` "
"custom target is required for targets which require the ``swig``-generated "
"files to exist. Other generators may depend on the source files that would "
"be generated by SWIG."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:73
msgid "``TYPE``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:74
msgid ""
"``SHARED``, ``MODULE`` and ``STATIC`` have the same semantic as for the :"
"command:`add_library` command. If ``USE_BUILD_SHARED_LIBS`` is specified, "
"the library type will be ``STATIC`` or ``SHARED`` based on whether the "
"current value of the :variable:`BUILD_SHARED_LIBS` variable is ``ON``. If no "
"type is specified, ``MODULE`` will be used."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:80
msgid "``LANGUAGE``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:81
msgid "Specify the target language."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:83
msgid "Go and Lua language support."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:86
msgid "R language support."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:89
msgid "Fortran language support."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:92
msgid "``NO_PROXY``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:95
msgid "Prevent the generation of the wrapper layer (swig ``-noproxy`` option)."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:97 ../../../../Modules/UseSWIG.cmake:215
msgid "``OUTPUT_DIR``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:100
msgid ""
"Specify where to write the language specific files (swig ``-outdir`` "
"option). If not given, the ``CMAKE_SWIG_OUTDIR`` variable will be used. If "
"neither is specified, the default depends on the value of the "
"``UseSWIG_MODULE_VERSION`` variable as follows:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:105
msgid ""
"If ``UseSWIG_MODULE_VERSION`` is 1 or is undefined, output is written to "
"the :variable:`CMAKE_CURRENT_BINARY_DIR` directory."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:107
msgid ""
"If ``UseSWIG_MODULE_VERSION`` is 2, a dedicated directory will be used. The "
"path of this directory can be retrieved from the "
"``SWIG_SUPPORT_FILES_DIRECTORY`` target property."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:111 ../../../../Modules/UseSWIG.cmake:223
msgid "``OUTFILE_DIR``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:114
msgid ""
"Specify an output directory name where the generated source file will be "
"placed (swig ``-o`` option). If not specified, the ``SWIG_OUTFILE_DIR`` "
"variable will be used. If neither is specified, ``OUTPUT_DIR`` or "
"``CMAKE_SWIG_OUTDIR`` is used instead."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:119
msgid "``SOURCES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:120
msgid ""
"List of sources for the library. Files with extension ``.i`` will be "
"identified as sources for the ``SWIG`` tool. Other files will be handled in "
"the standard way."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:124
msgid ""
"This behavior can be overridden by specifying the variable "
"``SWIG_SOURCE_FILE_EXTENSIONS``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:130
msgid ""
"If ``UseSWIG_MODULE_VERSION`` is set to 2, it is **strongly** recommended to "
"use a dedicated directory unique to the target when either the "
"``OUTPUT_DIR`` option or the ``CMAKE_SWIG_OUTDIR`` variable are specified. "
"The output directory contents are erased as part of the target build, so to "
"prevent interference between targets or losing other important files, each "
"target should have its own dedicated output directory."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:138
msgid "Properties on Source Files"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:140
msgid ""
"Source file properties on module files **must** be set before the invocation "
"of the ``swig_add_library`` command to specify special behavior of SWIG and "
"ensure generated files will receive the required settings."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:144
msgid "``CPLUSPLUS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:145
msgid "Call SWIG in c++ mode.  For example:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:147
msgid ""
"set_property(SOURCE mymod.i PROPERTY CPLUSPLUS ON)\n"
"swig_add_library(mymod LANGUAGE python SOURCES mymod.i)"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:152
msgid "``SWIG_FLAGS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:153
msgid "Replaced with the fine-grained properties that follow."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:156
msgid "Pass custom flags to the SWIG executable."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:158
msgid ""
"``INCLUDE_DIRECTORIES``, ``COMPILE_DEFINITIONS`` and ``COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:161
msgid ""
"Add custom flags to SWIG compiler and have same semantic as properties :"
"prop_sf:`INCLUDE_DIRECTORIES`, :prop_sf:`COMPILE_DEFINITIONS` and :prop_sf:"
"`COMPILE_OPTIONS`."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:165
msgid "``USE_TARGET_INCLUDE_DIRECTORIES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:168
msgid ""
"If set to ``TRUE``, contents of target property :prop_tgt:"
"`INCLUDE_DIRECTORIES` will be forwarded to ``SWIG`` compiler. If set to "
"``FALSE`` target property :prop_tgt:`INCLUDE_DIRECTORIES` will be ignored. "
"If not set, target property ``SWIG_USE_TARGET_INCLUDE_DIRECTORIES`` will be "
"considered."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:174
msgid ""
"``GENERATED_INCLUDE_DIRECTORIES``, ``GENERATED_COMPILE_DEFINITIONS`` and "
"``GENERATED_COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:177
msgid ""
"Add custom flags to the C/C++ generated source. They will fill, "
"respectively, properties :prop_sf:`INCLUDE_DIRECTORIES`, :prop_sf:"
"`COMPILE_DEFINITIONS` and :prop_sf:`COMPILE_OPTIONS` of generated C/C++ file."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:181
msgid "``DEPENDS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:184
msgid "Specify additional dependencies to the source file."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:186
msgid "``USE_SWIG_DEPENDENCIES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:189
msgid ""
"If set to ``TRUE``, implicit dependencies are generated by the ``swig`` tool "
"itself. This property is only meaningful for :ref:`Makefile <Makefile "
"Generators>`, :ref:`Ninja <Ninja Generators>`, :generator:`Xcode`, and :ref:"
"`Visual Studio <Visual Studio Generators>` generators. Default value is "
"``FALSE``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:196 ../../../../Modules/UseSWIG.cmake:362
msgid "Added the support of :generator:`Xcode` generator."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:199 ../../../../Modules/UseSWIG.cmake:365
msgid "Added the support of :ref:`Visual Studio Generators`."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:202
msgid "``SWIG_MODULE_NAME``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:203
msgid ""
"Specify the actual import name of the module in the target language. This is "
"required if it cannot be scanned automatically from source or different from "
"the module file basename.  For example:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:207
msgid "set_property(SOURCE mymod.i PROPERTY SWIG_MODULE_NAME mymod_realname)"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:211
msgid ""
"If policy :policy:`CMP0086` is set to ``NEW``, ``-module <module_name>`` is "
"passed to ``SWIG`` compiler."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:218
msgid ""
"Specify where to write the language specific files (swig ``-outdir`` option) "
"for the considered source file. If not specified, the other ways to define "
"the output directory applies (see ``OUTPUT_DIR`` option of "
"``swig_add_library()`` command)."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:226
msgid ""
"Specify an output directory where the generated source file will be placed "
"(swig ``-o`` option) for the considered source file. If not specified, "
"``OUTPUT_DIR`` source property will be used. If neither are specified, the "
"other ways to define output file directory applies (see ``OUTFILE_DIR`` "
"option of ``swig_add_library()`` command)."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:233
msgid "Properties on Targets"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:235
msgid ""
"Target library properties can be set to apply same configuration to all SWIG "
"input files."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:238
msgid ""
"``SWIG_INCLUDE_DIRECTORIES``, ``SWIG_COMPILE_DEFINITIONS`` and "
"``SWIG_COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:241
msgid ""
"These properties will be applied to all SWIG input files and have same "
"semantic as target properties :prop_tgt:`INCLUDE_DIRECTORIES`, :prop_tgt:"
"`COMPILE_DEFINITIONS` and :prop_tgt:`COMPILE_OPTIONS`."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:245
msgid ""
"set (UseSWIG_TARGET_NAME_PREFERENCE STANDARD)\n"
"swig_add_library(mymod LANGUAGE python SOURCES mymod.i)\n"
"set_property(TARGET mymod PROPERTY SWIG_COMPILE_DEFINITIONS MY_DEF1 "
"MY_DEF2)\n"
"set_property(TARGET mymod PROPERTY SWIG_COMPILE_OPTIONS -bla -blb)"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:252
msgid "``SWIG_USE_TARGET_INCLUDE_DIRECTORIES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:255
msgid ""
"If set to ``TRUE``, contents of target property :prop_tgt:"
"`INCLUDE_DIRECTORIES` will be forwarded to ``SWIG`` compiler. If set to "
"``FALSE`` or not defined, target property :prop_tgt:`INCLUDE_DIRECTORIES` "
"will be ignored. This behavior can be overridden by specifying source "
"property ``USE_TARGET_INCLUDE_DIRECTORIES``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:261
msgid ""
"``SWIG_GENERATED_INCLUDE_DIRECTORIES``, "
"``SWIG_GENERATED_COMPILE_DEFINITIONS`` and ``SWIG_GENERATED_COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:264
msgid ""
"These properties will populate, respectively, properties :prop_sf:"
"`INCLUDE_DIRECTORIES`, :prop_sf:`COMPILE_DEFINITIONS` and :prop_sf:"
"`COMPILE_FLAGS` of all generated C/C++ files."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:268
msgid "``SWIG_DEPENDS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:271
msgid "Add dependencies to all SWIG input files."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:274
msgid "Read-only Target Properties"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:276
msgid ""
"The following target properties are output properties and can be used to get "
"information about support files generated by ``SWIG`` interface compilation."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:279
msgid "``SWIG_SUPPORT_FILES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:282
msgid ""
"This output property list of wrapper files generated during SWIG compilation."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:284
msgid ""
"set (UseSWIG_TARGET_NAME_PREFERENCE STANDARD)\n"
"swig_add_library(mymod LANGUAGE python SOURCES mymod.i)\n"
"get_property(support_files TARGET mymod PROPERTY SWIG_SUPPORT_FILES)"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:292
msgid ""
"Only most principal support files are listed. In case some advanced features "
"of ``SWIG`` are used (for example ``%template``), associated support files "
"may not be listed. Prefer to use the ``SWIG_SUPPORT_FILES_DIRECTORY`` "
"property to handle support files."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:297
msgid "``SWIG_SUPPORT_FILES_DIRECTORY``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:300
msgid ""
"This output property specifies the directory where support files will be "
"generated."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:305
msgid ""
"When source property ``OUTPUT_DIR`` is defined, multiple directories can be "
"specified as part of ``SWIG_SUPPORT_FILES_DIRECTORY``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:309
msgid "CMake Variables"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:311
msgid ""
"Some variables can be set to customize the behavior of ``swig_add_library`` "
"as well as ``SWIG``:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:314
msgid "``UseSWIG_MODULE_VERSION``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:317
msgid "Specify different behaviors for ``UseSWIG`` module."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:319
msgid "Set to 1 or undefined: Legacy behavior is applied."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:320
msgid ""
"Set to 2: A new strategy is applied regarding support files: the output "
"directory of support files is erased before ``SWIG`` interface compilation."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:323
msgid "``CMAKE_SWIG_FLAGS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:324
msgid "Add flags to all swig calls."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:326
msgid "``CMAKE_SWIG_OUTDIR``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:327
msgid ""
"Specify where to write the language specific files (swig ``-outdir`` option)."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:329
msgid "``SWIG_OUTFILE_DIR``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:332
msgid ""
"Specify an output directory name where the generated source file will be "
"placed.  If not specified, ``CMAKE_SWIG_OUTDIR`` is used."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:335
msgid "``SWIG_MODULE_<name>_EXTRA_DEPS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:336
msgid "Specify extra dependencies for the generated module for ``<name>``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:338
msgid "``SWIG_SOURCE_FILE_EXTENSIONS``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:341
msgid ""
"Specify a list of source file extensions to override the default behavior of "
"considering only ``.i`` files as sources for the ``SWIG`` tool. For example:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:345
msgid "set(SWIG_SOURCE_FILE_EXTENSIONS \".i\" \".swg\")"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:349
msgid "``SWIG_USE_SWIG_DEPENDENCIES``"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:352
msgid ""
"If set to ``TRUE``, implicit dependencies are generated by the ``swig`` tool "
"itself. This variable is only meaningful for :ref:`Makefile <Makefile "
"Generators>`, :ref:`Ninja <Ninja Generators>`, :generator:`Xcode`, and :ref:"
"`Visual Studio <Visual Studio Generators>` generators. Default value is "
"``FALSE``."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:359
msgid ""
"Source file property ``USE_SWIG_DEPENDENCIES``, if not defined, will be "
"initialized with the value of this variable."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:369
msgid "Deprecated Commands"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:373
msgid ""
"Use :command:`target_link_libraries` with the standard target name, or with "
"``${SWIG_MODULE_<name>_REAL_NAME}`` for legacy target naming."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:377
msgid "Link libraries to swig module:"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:379
msgid "swig_link_libraries(<name> <item>...)"
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:383
msgid ""
"This command has same capabilities as :command:`target_link_libraries` "
"command."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:387
msgid ""
"When policy :policy:`CMP0078` is set to ``NEW``, :command:`swig_add_library` "
"creates a standard target with the specified ``<name>`` and :command:"
"`target_link_libraries` must be used instead of this command."
msgstr ""

#: ../../../../Modules/UseSWIG.cmake:392
msgid ""
"With the legacy behavior (when :policy:`CMP0078` is set to ``OLD`` and the "
"``UseSWIG_TARGET_NAME_PREFERENCE`` variable is set to ``\"LEGACY\"``, or in "
"CMake versions prior to 3.12), it is preferable to use "
"``target_link_libraries(${SWIG_MODULE_<name>_REAL_NAME} ...)`` instead of "
"this command."
msgstr ""
