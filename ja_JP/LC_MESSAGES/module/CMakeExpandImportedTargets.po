# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:6
msgid "CMakeExpandImportedTargets"
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:10
msgid "Do not use."
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:12
msgid ""
"This module was once needed to expand imported targets to the underlying "
"libraries they reference on disk for use with the :command:`try_compile` "
"and :command:`try_run` commands.  These commands now support imported "
"libraries in their ``LINK_LIBRARIES`` options (since CMake 2.8.11 for :"
"command:`try_compile` and since CMake 3.2 for :command:`try_run`)."
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:18
msgid ""
"This module does not support the policy :policy:`CMP0022` ``NEW`` behavior "
"or use of the :prop_tgt:`INTERFACE_LINK_LIBRARIES` property because :manual:"
"`generator expressions <cmake-generator-expressions(7)>` cannot be evaluated "
"during configuration."
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:25
msgid ""
"CMAKE_EXPAND_IMPORTED_TARGETS(<var> LIBRARIES lib1 lib2...libN\n"
"                              [CONFIGURATION <config>])"
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:28
msgid ""
"CMAKE_EXPAND_IMPORTED_TARGETS() takes a list of libraries and replaces all "
"imported targets contained in this list with their actual file paths of the "
"referenced libraries on disk, including the libraries from their link "
"interfaces.  If a CONFIGURATION is given, it uses the respective "
"configuration of the imported targets if it exists.  If no CONFIGURATION is "
"given, it uses the first configuration from ${CMAKE_CONFIGURATION_TYPES} if "
"set, otherwise ${CMAKE_BUILD_TYPE}."
msgstr ""

#: ../../../../Modules/CMakeExpandImportedTargets.cmake:38
msgid ""
"cmake_expand_imported_targets(expandedLibs\n"
"  LIBRARIES ${CMAKE_REQUIRED_LIBRARIES}\n"
"  CONFIGURATION \"${CMAKE_TRY_COMPILE_CONFIGURATION}\" )"
msgstr ""
