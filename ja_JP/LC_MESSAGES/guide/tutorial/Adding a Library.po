# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../guide/tutorial/Adding a Library.rst:2
msgid "Step 2: Adding a Library"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:4
msgid ""
"At this point, we have seen how to create a basic project using CMake. In "
"this step, we will learn how to create and use a library in our project. We "
"will also see how to make the use of our library optional."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:9
msgid "Exercise 1 - Creating a Library"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:11
msgid ""
"To add a library in CMake, use the :command:`add_library` command and "
"specify which source files should make up the library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:14
msgid ""
"Rather than placing all of the source files in one directory, we can "
"organize our project with one or more subdirectories. In this case, we will "
"create a subdirectory specifically for our library. Here, we can add a new "
"``CMakeLists.txt`` file and one or more source files. In the top level "
"``CMakeLists.txt`` file, we will use the :command:`add_subdirectory` command "
"to add the subdirectory to the build."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:21
msgid ""
"Once the library is created, it is connected to our executable target with :"
"command:`target_include_directories` and :command:`target_link_libraries`."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:25 Library.rst:213
msgid "Goal"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:27
msgid "Add and use a library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:30 Library.rst:219
msgid "Helpful Resources"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:32
msgid ":command:`add_library`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:33
msgid ":command:`add_subdirectory`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:34
msgid ":command:`target_include_directories`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:35
msgid ":command:`target_link_libraries`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:36
msgid ":variable:`PROJECT_SOURCE_DIR`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:39 Library.rst:227
msgid "Files to Edit"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:41 Library.rst:229
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:42 Library.rst:230
msgid "``tutorial.cxx``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:43
msgid "``MathFunctions/CMakeLists.txt``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:46 Library.rst:234
msgid "Getting Started"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:48
msgid ""
"In this exercise, we will add a library to our project that contains our own "
"implementation for computing the square root of a number. The executable can "
"then use this library instead of the standard square root function provided "
"by the compiler."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:53
msgid ""
"For this tutorial we will put the library into a subdirectory called "
"``MathFunctions``. This directory already contains a header file, "
"``MathFunctions.h``, and a source file ``mysqrt.cxx``. We will not need to "
"modify either of these files. The source file has one function called "
"``mysqrt`` that provides similar functionality to the compiler's ``sqrt`` "
"function."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:60
msgid ""
"From the ``Help/guide/tutorial/Step2`` directory, start with ``TODO 1`` and "
"complete through ``TODO 6``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:63
msgid ""
"First, fill in the one line ``CMakeLists.txt`` in the ``MathFunctions`` "
"subdirectory."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:66
msgid "Next, edit the top level ``CMakeLists.txt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:68
msgid ""
"Finally, use the newly created ``MathFunctions`` library in ``tutorial.cxx``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:71 Library.rst:247
msgid "Build and Run"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:73
msgid ""
"Run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your chosen "
"build tool."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:77
msgid "Below is a refresher of what that looks like from the command line:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:79
msgid ""
"mkdir Step2_build\n"
"cd Step2_build\n"
"cmake ../Step2\n"
"cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:86
msgid ""
"Try to use the newly built ``Tutorial`` and ensure that it is still "
"producing accurate square root values."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:90 Library.rst:280
msgid "Solution"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:92
msgid ""
"In the ``CMakeLists.txt`` file in the ``MathFunctions`` directory, we create "
"a library target called ``MathFunctions`` with :command:`add_library`. The "
"source file for the library is passed as an argument to :command:"
"`add_library`. This looks like the following line:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:97
msgid "<details><summary>TODO 1: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:101
msgid "TODO 1: MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:101
msgid ""
"add_library(MathFunctions mysqrt.cxx)\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:107 Library.rst:125
#: Library.rst:142 Library.rst:164 Library.rst:180 Library.rst:196
#: Library.rst:298 Library.rst:336 Library.rst:358 Library.rst:375
#: Library.rst:397 Library.rst:415 Library.rst:432 Library.rst:457
msgid "</details>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:111
msgid ""
"To make use of the new library we will add an :command:`add_subdirectory` "
"call in the top-level ``CMakeLists.txt`` file so that the library will get "
"built."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:115
msgid "<details><summary>TODO 2: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:119
msgid "TODO 2: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:119
msgid "add_subdirectory(MathFunctions)"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:129
msgid ""
"Next, the new library target is linked to the executable target using :"
"command:`target_link_libraries`."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:132
msgid "<details><summary>TODO 3: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:136
msgid "TODO 3: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:136
msgid "target_link_libraries(Tutorial PUBLIC MathFunctions)"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:146
msgid ""
"Finally we need to specify the library's header file location. Modify :"
"command:`target_include_directories` to add the ``MathFunctions`` "
"subdirectory as an include directory so that the ``MathFunctions.h`` header "
"file can be found."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:151
msgid "<details><summary>TODO 4: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:155
msgid "TODO 4: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:155
msgid ""
"target_include_directories(Tutorial PUBLIC\n"
"                          \"${PROJECT_BINARY_DIR}\"\n"
"                          \"${PROJECT_SOURCE_DIR}/MathFunctions\"\n"
"                          )"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:168
msgid ""
"Now let's use our library. In ``tutorial.cxx``, include ``MathFunctions.h``:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:170
msgid "<details><summary>TODO 5: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:174
msgid "TODO 5 : tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:174
msgid "#include \"MathFunctions.h\""
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:184
msgid "Lastly, replace ``sqrt`` with our library function ``mysqrt``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:186
msgid "<details><summary>TODO 6: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:190
msgid "TODO 6 : tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:190
msgid "const double outputValue = mysqrt(inputValue);"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:201
msgid "Exercise 2 - Making Our Library Optional"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:203
msgid ""
"Now let us make the MathFunctions library optional. While for the tutorial "
"there really isn't any need to do so, for larger projects this is a common "
"occurrence."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:207
msgid ""
"CMake can do this using the :command:`option` command. This gives users a "
"variable which they can change when configuring their cmake build. This "
"setting will be stored in the cache so that the user does not need to set "
"the value each time they run CMake on a build directory."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:215
msgid "Add the option to build without ``MathFunctions``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:221
msgid ":command:`if`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:222
msgid ":command:`list`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:223
msgid ":command:`option`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:224
msgid ":command:`cmakedefine <configure_file>`"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:231
msgid "``TutorialConfig.h.in``"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:236
msgid ""
"Start with the resulting files from Exercise 1. Complete ``TODO 7`` through "
"``TODO 13``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:239
msgid ""
"First create a variable ``USE_MYMATH`` using the :command:`option` command "
"in the top-level ``CMakeLists.txt`` file. In that same file, use that option "
"to determine whether to build and use the ``MathFunctions`` library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:243
msgid ""
"Then, update ``tutorial.cxx`` and ``TutorialConfig.h.in`` to use "
"``USE_MYMATH``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:249
msgid ""
"Since we have our build directory already configured from Exercise 1, we can "
"rebuild by simply calling the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:252
msgid ""
"cd ../Step2_build\n"
"cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:257
msgid ""
"Next, run the ``Tutorial`` executable on a few numbers to verify that it's "
"still correct."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:260
msgid ""
"Now let's update the value of ``USE_MYMATH`` to ``OFF``. The easiest way is "
"to use the :manual:`cmake-gui <cmake-gui(1)>` or  :manual:`ccmake "
"<ccmake(1)>` if you're in the terminal. Or, alternatively, if you want to "
"change the option from the command-line, try:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:265
msgid "cmake ../Step2 -DUSE_MYMATH=OFF"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:269
msgid "Now, rebuild the code with the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:271
msgid "cmake --build ."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:275
msgid ""
"Then, run the executable again to ensure that it still works with "
"``USE_MYMATH`` set to ``OFF``. Which function gives better results, ``sqrt`` "
"or ``mysqrt``?"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:282
msgid ""
"The first step is to add an option to the top-level ``CMakeLists.txt`` file. "
"This option will be displayed in the :manual:`cmake-gui <cmake-gui(1)>` and :"
"manual:`ccmake <ccmake(1)>` with a default value of ``ON`` that can be "
"changed by the user."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:287
msgid "<details><summary>TODO 7: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:291
msgid "TODO 7: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:291
msgid ""
"option(USE_MYMATH \"Use tutorial provided math implementation\" ON)\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:302
msgid ""
"Next, make building and linking the ``MathFunctions`` library conditional."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:305
msgid ""
"Start by creating a :command:`list` of the optional library targets for our "
"project. At the moment, it is just ``MathFunctions``. Let's name our list "
"``EXTRA_LIBS``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:309
msgid ""
"Similarly, we need to make a :command:`list` for the optional includes which "
"we will call ``EXTRA_INCLUDES``. In this list, we will ``APPEND`` the path "
"of the header file needed for our library."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:313
msgid ""
"Next, create an :command:`if` statement which checks the value of "
"``USE_MYMATH``. Inside the :command:`if` block, put the :command:"
"`add_subdirectory` command from Exercise 1 with the additional :command:"
"`list` commands."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:318
msgid ""
"When ``USE_MYMATH`` is ``ON``, the lists will be generated and will be added "
"to our project. When ``USE_MYMATH`` is ``OFF``, the lists stay empty. With "
"this strategy, we allow users to toggle ``USE_MYMATH`` to manipulate what "
"library is used in the build."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:323
msgid "The top-level CMakeLists.txt file will now look like the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:325
msgid "<details><summary>TODO 8: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:329
msgid "TODO 8: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:329
msgid ""
"if(USE_MYMATH)\n"
"  add_subdirectory(MathFunctions)\n"
"  list(APPEND EXTRA_LIBS MathFunctions)\n"
"  list(APPEND EXTRA_INCLUDES \"${PROJECT_SOURCE_DIR}/MathFunctions\")\n"
"endif()\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:340
msgid ""
"Now that we have these two lists, we need to update :command:"
"`target_link_libraries` and :command:`target_include_directories` to use "
"them. Changing them is fairly straightforward."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:344
msgid ""
"For :command:`target_link_libraries`, we replace the written out library "
"names with ``EXTRA_LIBS``. This looks like the following:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:347
msgid "<details><summary>TODO 9: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:351
msgid "TODO 9: CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:351
msgid ""
"\n"
"target_link_libraries(Tutorial PUBLIC ${EXTRA_LIBS})\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:362
msgid ""
"Then, we do the same thing with :command:`target_include_directories` and "
"``EXTRA_INCLUDES``."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:365
msgid "<details><summary>TODO 10: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:369
msgid "TODO 10 : CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:369
msgid ""
"target_include_directories(Tutorial PUBLIC\n"
"                           \"${PROJECT_BINARY_DIR}\"\n"
"                           ${EXTRA_INCLUDES}\n"
"                           )\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:379
msgid ""
"Note that this is a classic approach when dealing with many components. We "
"will cover the modern approach in the Step 3 of the tutorial."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:382
msgid ""
"The corresponding changes to the source code are fairly straightforward. "
"First, in ``tutorial.cxx``, we include the ``MathFunctions.h`` header if "
"``USE_MYMATH`` is defined."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:386
msgid "<details><summary>TODO 11: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:390
msgid "TODO 11 : tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:390
msgid ""
"#ifdef USE_MYMATH\n"
"#  include \"MathFunctions.h\"\n"
"#endif\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:401
msgid ""
"Then, in the same file, we make ``USE_MYMATH`` control which square root "
"function is used:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:404
msgid "<details><summary>TODO 12: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:408
msgid "TODO 12 : tutorial.cxx"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:408
msgid ""
"#ifdef USE_MYMATH\n"
"  const double outputValue = mysqrt(inputValue);\n"
"#else\n"
"  const double outputValue = sqrt(inputValue);\n"
"#endif\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:419
msgid ""
"Since the source code now requires ``USE_MYMATH`` we can add it to "
"``TutorialConfig.h.in`` with the following line:"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:422
msgid "<details><summary>TODO 13: Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:426
msgid "TODO 13 : TutorialConfig.h.in"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:426
msgid "#cmakedefine USE_MYMATH\n"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:436
msgid ""
"With these changes, our library is now completely optional to whoever is "
"building and using it."
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:440
msgid "Bonus Question"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:442
msgid ""
"Why is it important that we configure ``TutorialConfig.h.in`` after the "
"option for ``USE_MYMATH``? What would happen if we inverted the two?"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:446
msgid "Answer"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:448
msgid "<details><summary>Click to show/hide answer</summary>"
msgstr ""

#: ../../../guide/tutorial/Adding a Library.rst:452
msgid ""
"We configure after because ``TutorialConfig.h.in`` uses the value of "
"``USE_MYMATH``. If we configure the file before calling :command:`option`, "
"we won't be using the expected value of ``USE_MYMATH``."
msgstr ""
