# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0053.rst:2
msgid "CMP0053"
msgstr ""

#: ../../../policy/CMP0053.rst:4
msgid "Simplify variable reference and escape sequence evaluation."
msgstr ""

#: ../../../policy/CMP0053.rst:6
msgid ""
"CMake 3.1 introduced a much faster implementation of evaluation of the :ref:"
"`Variable References` and :ref:`Escape Sequences` documented in the :manual:"
"`cmake-language(7)` manual.  While the behavior is identical to the legacy "
"implementation in most cases, some corner cases were cleaned up to simplify "
"the behavior.  Specifically:"
msgstr ""

#: ../../../policy/CMP0053.rst:12
msgid ""
"Expansion of ``@VAR@`` reference syntax defined by the :command:"
"`configure_file` and :command:`string(CONFIGURE)` commands is no longer "
"performed in other contexts."
msgstr ""

#: ../../../policy/CMP0053.rst:16
msgid ""
"Literal ``${VAR}`` reference syntax may contain only alphanumeric characters "
"(``A-Z``, ``a-z``, ``0-9``) and the characters ``_``, ``.``, ``/``, ``-``, "
"and ``+``. Variables with other characters in their name may still be "
"referenced indirectly, e.g."
msgstr ""

#: ../../../policy/CMP0053.rst:22
msgid ""
"set(varname \"otherwise & disallowed $ characters\")\n"
"message(\"${${varname}}\")"
msgstr ""

#: ../../../policy/CMP0053.rst:27
msgid ""
"The setting of policy :policy:`CMP0010` is not considered, so improper "
"variable reference syntax is always an error."
msgstr ""

#: ../../../policy/CMP0053.rst:30
msgid ""
"More characters are allowed to be escaped in variable names. Previously, "
"only ``()#\" \\@^`` were valid characters to escape. Now any non-"
"alphanumeric, non-semicolon, non-NUL character may be escaped following the "
"``escape_identity`` production in the :ref:`Escape Sequences` section of "
"the :manual:`cmake-language(7)` manual."
msgstr ""

#: ../../../policy/CMP0053.rst:37
msgid ""
"The ``OLD`` behavior for this policy is to honor the legacy behavior for "
"variable references and escape sequences.  The ``NEW`` behavior is to use "
"the simpler variable expansion and escape sequence evaluation rules."
msgstr ""

#: ../../../policy/CMP0053.rst:41
msgid ""
"This policy was introduced in CMake version 3.1. CMake version |release| "
"warns when the policy is not set and uses ``OLD`` behavior.  Use the :"
"command:`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly."
msgstr ""
