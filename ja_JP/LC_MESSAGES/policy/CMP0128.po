# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.25\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0128.rst:2
msgid "CMP0128"
msgstr ""

#: ../../../policy/CMP0128.rst:6
msgid "When this policy is set to ``NEW``:"
msgstr ""

#: ../../../policy/CMP0128.rst:8
msgid ""
":prop_tgt:`<LANG>_EXTENSIONS` is initialized to :variable:"
"`CMAKE_<LANG>_EXTENSIONS` if set, otherwise falling back to :variable:"
"`CMAKE_<LANG>_EXTENSIONS_DEFAULT`."
msgstr ""

#: ../../../policy/CMP0128.rst:12
msgid ""
"Extensions are correctly enabled/disabled if :prop_tgt:`<LANG>_STANDARD` is "
"unset or satisfied by the default."
msgstr ""

#: ../../../policy/CMP0128.rst:15
msgid ""
"Standard mode-affecting flags aren't added unless necessary to achieve the "
"specified mode."
msgstr ""

#: ../../../policy/CMP0128.rst:18
msgid "The ``OLD`` behavior:"
msgstr ""

#: ../../../policy/CMP0128.rst:20
msgid ""
"Initializes :prop_tgt:`<LANG>_EXTENSIONS` to :variable:"
"`CMAKE_<LANG>_EXTENSIONS` if set, otherwise falling back to ``ON``."
msgstr ""

#: ../../../policy/CMP0128.rst:23
msgid ""
"Always adds a flag if :prop_tgt:`<LANG>_STANDARD` is set and :prop_tgt:"
"`<LANG>_STANDARD_REQUIRED` is ``OFF``."
msgstr ""

#: ../../../policy/CMP0128.rst:26
msgid "If :prop_tgt:`<LANG>_STANDARD` is unset:"
msgstr ""

#: ../../../policy/CMP0128.rst:28
msgid ""
"Doesn't disable extensions even if :prop_tgt:`<LANG>_EXTENSIONS` is ``OFF``."
msgstr ""

#: ../../../policy/CMP0128.rst:31
msgid ""
"Fails to enable extensions if :prop_tgt:`<LANG>_EXTENSIONS` is ``ON`` except "
"for the ``IAR`` compiler."
msgstr ""

#: ../../../policy/CMP0128.rst:34
msgid ""
"Code may need to be updated for the ``NEW`` behavior in the following cases:"
msgstr ""

#: ../../../policy/CMP0128.rst:36
msgid ""
"If a standard mode flag previously overridden by CMake's and not used during "
"compiler detection now takes effect due to CMake no longer adding one as the "
"default detected is appropriate."
msgstr ""

#: ../../../policy/CMP0128.rst:40
msgid "Such code should be converted to either:"
msgstr ""

#: ../../../policy/CMP0128.rst:42
msgid ""
"Use :prop_tgt:`<LANG>_STANDARD` and :prop_tgt:`<LANG>_EXTENSIONS` instead of "
"manually adding flags."
msgstr ""

#: ../../../policy/CMP0128.rst:45
msgid ""
"Or ensure the manually-specified flags are used during compiler detection."
msgstr ""

#: ../../../policy/CMP0128.rst:47
msgid ""
"If extensions were disabled without :prop_tgt:`<LANG>_STANDARD` being set "
"CMake previously wouldn't actually disable extensions."
msgstr ""

#: ../../../policy/CMP0128.rst:50
msgid ""
"Such code should be updated to not disable extensions if they are required."
msgstr ""

#: ../../../policy/CMP0128.rst:52
msgid ""
"If extensions were enabled/disabled when :prop_tgt:`<LANG>_STANDARD` was "
"satisfied by the compiler's default CMake previously wouldn't actually "
"enable/disable extensions."
msgstr ""

#: ../../../policy/CMP0128.rst:56
msgid "Such code should be updated to set the correct extensions mode."
msgstr ""

#: ../../../policy/CMP0128.rst:58
msgid ""
"If compiler flags affecting the standard mode are used during compiler "
"detection (for example in :manual:`a toolchain file <cmake-toolchains(7)>` "
"using :variable:`CMAKE_<LANG>_FLAGS_INIT`) then they will affect the "
"detected default :variable:`standard <CMAKE_<LANG>_STANDARD_DEFAULT>` and :"
"variable:`extensions <CMAKE_<LANG>_EXTENSIONS_DEFAULT>`."
msgstr ""

#: ../../../policy/CMP0128.rst:64
msgid ""
"Unlike many policies, CMake version |release| does *not* warn when the "
"policy is not set and simply uses the ``OLD`` behavior. Use the :command:"
"`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly. See "
"documentation of the :variable:`CMAKE_POLICY_WARNING_CMP0128 "
"<CMAKE_POLICY_WARNING_CMP<NNNN>>` variable to control the warning."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
