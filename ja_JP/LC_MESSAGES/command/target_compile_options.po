# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/target_compile_options.rst:2
msgid "target_compile_options"
msgstr ""

#: ../../../command/target_compile_options.rst:4
msgid "Add compile options to a target."
msgstr ""

#: ../../../command/target_compile_options.rst:8
msgid ""
"target_compile_options(<target> [BEFORE]\n"
"  <INTERFACE|PUBLIC|PRIVATE> [items1...]\n"
"  [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])"
msgstr ""

#: ../../../command/target_compile_options.rst:12
msgid ""
"Specify compile options to use when compiling a given target.  The named "
"``<target>`` must have been created by a command such as :command:"
"`add_executable` or :command:`add_library` and must not be an :ref:`ALIAS "
"target <Alias Targets>`."
msgstr ""

#: ../../../command/target_compile_options.rst:17
msgid ""
"If ``BEFORE`` is specified, the content will be prepended to the property "
"instead of being appended."
msgstr ""

#: ../../../command/target_compile_options.rst:20
msgid ""
"This command can be used to add any options, but alternative commands exist "
"to add preprocessor definitions (:command:`target_compile_definitions` and :"
"command:`add_compile_definitions`) or include directories (:command:"
"`target_include_directories` and :command:`include_directories`).  See "
"documentation of the :prop_dir:`directory <COMPILE_OPTIONS>` and :prop_tgt:"
"`target <COMPILE_OPTIONS>` ``COMPILE_OPTIONS`` properties."
msgstr ""

#: ../../../command/target_compile_options.rst:28
msgid ""
"The ``INTERFACE``, ``PUBLIC`` and ``PRIVATE`` keywords are required to "
"specify the scope of the following arguments.  ``PRIVATE`` and ``PUBLIC`` "
"items will populate the :prop_tgt:`COMPILE_OPTIONS` property of "
"``<target>``.  ``PUBLIC`` and ``INTERFACE`` items will populate the :"
"prop_tgt:`INTERFACE_COMPILE_OPTIONS` property of ``<target>``. (:ref:"
"`IMPORTED targets <Imported Targets>` only support ``INTERFACE`` items.) The "
"following arguments specify compile options.  Repeated calls for the same "
"``<target>`` append items in the order called."
msgstr ""

#: ../../../command/target_compile_options.rst:37
msgid ""
"Arguments to ``target_compile_options`` may use \"generator expressions\" "
"with the syntax ``$<...>``. See the :manual:`cmake-generator-expressions(7)` "
"manual for available expressions.  See the :manual:`cmake-buildsystem(7)` "
"manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/COMPILE_OPTIONS_SHELL.txt:1
msgid ""
"The final set of compile options used for a target is constructed by "
"accumulating options from the current target and the usage requirements of "
"it dependencies.  The set of options is de-duplicated to avoid repetition. "
"While beneficial for individual options, the de-duplication step can break "
"up option groups.  For example, ``-D A -D B`` becomes ``-D A B``.  One may "
"specify a group of options using shell-like quoting along with a ``SHELL:`` "
"prefix.  The ``SHELL:`` prefix is dropped and the rest of the option string "
"is parsed using the :command:`separate_arguments` ``UNIX_COMMAND`` mode. For "
"example, ``\"SHELL:-D A\" \"SHELL:-D B\"`` becomes ``-D A -D B``."
msgstr ""
