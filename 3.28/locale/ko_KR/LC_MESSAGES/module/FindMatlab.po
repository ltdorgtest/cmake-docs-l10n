# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindMatlab.cmake:6
msgid "FindMatlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:8
msgid ""
"Finds Matlab or Matlab Compiler Runtime (MCR) and provides Matlab tools, "
"libraries and compilers to CMake."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:11
msgid ""
"This package primary purpose is to find the libraries associated with Matlab "
"or the MCR in order to be able to build Matlab extensions (mex files). It "
"can also be used:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:15
msgid "to run specific commands in Matlab in case Matlab is available"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:16
msgid "for declaring Matlab unit test"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:17
msgid ""
"to retrieve various information from Matlab (mex extensions, versions and "
"release queries, ...)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:20
msgid "Added Matlab Compiler Runtime (MCR) support."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:23
msgid "The module supports the following components:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:25
msgid ""
"``ENG_LIBRARY`` and ``MAT_LIBRARY``: respectively the ``ENG`` and ``MAT`` "
"libraries of Matlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:27
msgid ""
"``MAIN_PROGRAM`` the Matlab binary program. Note that this component is not "
"available on the MCR version, and will yield an error if the MCR is found "
"instead of the regular Matlab installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:30
msgid "``MEX_COMPILER`` the MEX compiler."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:31
msgid ""
"``MCC_COMPILER`` the MCC compiler, included with the Matlab Compiler add-on."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:32
msgid "``SIMULINK`` the Simulink environment."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:34
msgid "Added the ``MAT_LIBRARY`` component."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:37
msgid ""
"Added the ``ENGINE_LIBRARY``, ``DATAARRAY_LIBRARY`` and ``MCC_COMPILER`` "
"components."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:41
msgid ""
"Removed the ``MX_LIBRARY``, ``ENGINE_LIBRARY`` and ``DATAARRAY_LIBRARY`` "
"components.  These libraries are found unconditionally."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:47
msgid ""
"The version given to the :command:`find_package` directive is the Matlab "
"**version**, which should not be confused with the Matlab *release* name (e."
"g. `R2023b`). The :command:`matlab_get_version_from_release_name` and :"
"command:`matlab_get_release_name_from_version` provide a mapping between the "
"release name and the version."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:54
msgid ""
"The variable :variable:`Matlab_ROOT_DIR` may be specified in order to give "
"the path of the desired Matlab version. Otherwise, the behavior is platform "
"specific:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:58
msgid ""
"Windows: The installed versions of Matlab/MCR are retrieved from the Windows "
"registry"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:60
msgid ""
"macOS: The installed versions of Matlab/MCR are given by the MATLAB default "
"installation paths in ``/Application``. If no such application is found, it "
"falls back to the one that might be accessible from the ``PATH``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:63
msgid ""
"Unix: The desired Matlab should be accessible from the ``PATH``. This does "
"not work for MCR installation and :variable:`Matlab_ROOT_DIR` should be "
"specified on this platform."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:67
msgid ""
"Additional information is provided when :variable:`MATLAB_FIND_DEBUG` is "
"set. When a Matlab/MCR installation is found automatically and the "
"``MATLAB_VERSION`` is not given, the version is queried from Matlab directly "
"(on Windows this may pop up a Matlab window) or from the MCR installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:72
msgid ""
"The mapping of the release names and the version of Matlab is performed by "
"defining pairs (name, version).  The variable :variable:"
"`MATLAB_ADDITIONAL_VERSIONS` may be provided before the call to the :command:"
"`find_package` in order to handle additional versions."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:77
msgid ""
"A Matlab scripts can be added to the set of tests using the :command:"
"`matlab_add_unit_test`. By default, the Matlab unit test framework will be "
"used (>= 2013a) to run this script, but regular ``.m`` files returning an "
"exit code can be used as well (0 indicating a success)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:83
msgid "Module Input Variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:85
msgid ""
"Users or projects may set the following variables to configure the module "
"behavior:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:88
msgid ":variable:`Matlab_ROOT <<PackageName>_ROOT>`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:91
msgid ""
"Default value for :variable:`Matlab_ROOT_DIR`, the root of the Matlab "
"installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:94
msgid ":variable:`Matlab_ROOT_DIR`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:95
msgid "The root of the Matlab installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:97
msgid ":variable:`MATLAB_FIND_DEBUG`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:98
msgid "outputs debug information"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:100
msgid ":variable:`MATLAB_ADDITIONAL_VERSIONS`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:101
msgid ""
"additional versions of Matlab for the automatic retrieval of the installed "
"versions."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:105
msgid "Imported targets"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:109
msgid "This module defines the following :prop_tgt:`IMPORTED` targets:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:111
msgid "``Matlab::mex``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:112
msgid "The ``mex`` library, always available."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:114
msgid "``Matlab::mx``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:115
msgid "The mx library of Matlab (arrays), always available."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:117
msgid "``Matlab::eng``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:118
msgid ""
"Matlab engine library. Available only if the ``ENG_LIBRARY`` component is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:121
msgid "``Matlab::mat``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:122
msgid ""
"Matlab matrix library. Available only if the ``MAT_LIBRARY`` component is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:125
msgid "``Matlab::MatlabEngine``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:126
#: ../../../../Modules/FindMatlab.cmake:167
msgid "Matlab C++ engine library, always available for R2018a and newer."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:128
msgid "``Matlab::MatlabDataArray``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:129
#: ../../../../Modules/FindMatlab.cmake:171
msgid "Matlab C++ data array library, always available for R2018a and newer."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:132
msgid "Variables defined by the module"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:135
msgid "Result variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:137
msgid "``Matlab_FOUND``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:138
msgid ""
"``TRUE`` if the Matlab installation is found, ``FALSE`` otherwise. All "
"variable below are defined if Matlab is found."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:140
msgid "``Matlab_VERSION``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:143
msgid ""
"the numerical version (e.g. 23.2.0) of Matlab found. Not to be confused with "
"Matlab release name (e.g. R2023b) that can be obtained with :command:"
"`matlab_get_release_name_from_version`."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:146
#: ../../../../Modules/FindMatlab.cmake:188
msgid "``Matlab_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:147
msgid ""
"the final root of the Matlab installation determined by the FindMatlab "
"module."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:149
msgid "``Matlab_MAIN_PROGRAM``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:150
msgid ""
"the Matlab binary program. Available only if the component ``MAIN_PROGRAM`` "
"is given in the :command:`find_package` directive."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:152
msgid "``Matlab_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:153
msgid "the path of the Matlab libraries headers"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:154
msgid "``Matlab_MEX_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:155
msgid "library for mex, always available."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:156
msgid "``Matlab_MX_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:157
msgid "mx library of Matlab (arrays), always available."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:158
msgid "``Matlab_ENG_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:159
msgid ""
"Matlab engine library. Available only if the component ``ENG_LIBRARY`` is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:161
msgid "``Matlab_MAT_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:162
msgid ""
"Matlab matrix library. Available only if the component ``MAT_LIBRARY`` is "
"requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:164
msgid "``Matlab_ENGINE_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:168
msgid "``Matlab_DATAARRAY_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:172
msgid "``Matlab_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:173
msgid "the whole set of libraries of Matlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:174
msgid "``Matlab_MEX_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:175
msgid ""
"the mex compiler of Matlab. Currently not used. Available only if the "
"component ``MEX_COMPILER`` is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:177
msgid "``Matlab_MCC_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:180
msgid ""
"the mcc compiler of Matlab. Included with the Matlab Compiler add-on. "
"Available only if the component ``MCC_COMPILER`` is requested."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:184
msgid "Cached variables"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:186
msgid "``Matlab_MEX_EXTENSION``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:187
msgid ""
"the extension of the mex files for the current platform (given by Matlab)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:189
msgid ""
"the location of the root of the Matlab installation found. If this value is "
"changed by the user, the result variables are recomputed."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:193
msgid "Provided commands"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:195
msgid ":command:`matlab_get_version_from_release_name`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:196
msgid "returns the version from the Matlab release name"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:197
msgid ":command:`matlab_get_release_name_from_version`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:198
msgid "returns the release name from the Matlab version"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:199
msgid ":command:`matlab_add_mex`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:200
msgid "adds a target compiling a MEX file."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:201
msgid ":command:`matlab_add_unit_test`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:202
msgid "adds a Matlab unit test file as a test to the project."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:203
msgid ":command:`matlab_extract_all_installed_versions_from_registry`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:204
msgid ""
"parses the registry for all Matlab versions. Available on Windows only. The "
"part of the registry parsed is dependent on the host processor"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:206
msgid ":command:`matlab_get_all_valid_matlab_roots_from_registry`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:207
msgid ""
"returns all the possible Matlab or MCR paths, according to a previously "
"given list. Only the existing/accessible paths are kept. This is mainly "
"useful for the searching all possible Matlab installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:210
msgid ":command:`matlab_get_mex_suffix`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:211
msgid ""
"returns the suffix to be used for the mex files (platform/architecture "
"dependent)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:213
msgid ":command:`matlab_get_version_from_matlab_run`"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:214
msgid ""
"returns the version of Matlab/MCR, given the full directory of the Matlab/"
"MCR installation path."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:219
msgid "Known issues"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:221
msgid "**Symbol clash in a MEX target**"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:222
msgid ""
"By default, every symbols inside a MEX file defined with the command :"
"command:`matlab_add_mex` have hidden visibility, except for the entry point. "
"This is the default behavior of the MEX compiler, which lowers the risk of "
"symbol collision between the libraries shipped with Matlab, and the "
"libraries to which the MEX file is linking to. This is also the default on "
"Windows platforms."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:229
msgid ""
"However, this is not sufficient in certain case, where for instance your MEX "
"file is linking against libraries that are already loaded by Matlab, even if "
"those libraries have different SONAMES. A possible solution is to hide the "
"symbols of the libraries to which the MEX target is linking to. This can be "
"achieved in GNU GCC compilers with the linker option ``-Wl,--exclude-libs,"
"ALL``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:236
msgid "**Tests using GPU resources**"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:237
msgid ""
"in case your MEX file is using the GPU and in order to be able to run unit "
"tests on this MEX file, the GPU resources should be properly released by "
"Matlab. A possible solution is to make Matlab aware of the use of the GPU "
"resources in the session, which can be performed by a command such as ``D = "
"gpuDevice()`` at the beginning of the test script (or via a fixture)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:246
msgid "Reference"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:250
msgid ""
"The root folder of the Matlab installation. If set before the call to :"
"command:`find_package`, the module will look for the components in that "
"path. If not set, then an automatic search of Matlab will be performed. If "
"set, it should point to a valid version of Matlab."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:257
msgid ""
"If set, the lookup of Matlab and the intermediate configuration steps are "
"outputted to the console."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:262
msgid ""
"If set, specifies additional versions of Matlab that may be looked for. The "
"variable should be a list of strings, organized by pairs of release name and "
"versions, such as follows::"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:266
msgid ""
"set(MATLAB_ADDITIONAL_VERSIONS\n"
"    \"release_name1=corresponding_version1\"\n"
"    \"release_name2=corresponding_version2\"\n"
"    ...\n"
"    )"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:272
msgid "Example::"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:274
msgid ""
"set(MATLAB_ADDITIONAL_VERSIONS\n"
"    \"R2013b=8.2\"\n"
"    \"R2013a=8.1\"\n"
"    \"R2012b=8.0\")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:279
msgid ""
"The order of entries in this list matters when several versions of Matlab "
"are installed. The priority is set according to the ordering in this list."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:341
msgid "matlab_get_version_from_release_name(release version)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:345
msgid "Input: ``release`` is the release name (e.g. R2023b)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:346
msgid "Output: ``version`` is the version of Matlab (e.g. 23.2.0)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:348
msgid "Returns the version of Matlab from a release name"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:352
msgid "This command provides correct versions mappings for Matlab but not MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:373
msgid "matlab_get_release_name_from_version(version release_name)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:377
msgid "Input: ``version`` is the version of Matlab (e.g. 23.2.0)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:378
msgid "Output: ``release_name`` is the release name (R2023b)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:380
msgid "Returns the release name from the version of Matlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:384
msgid "This command provides correct version mappings for Matlab but not MCR."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:440
msgid ""
"matlab_extract_all_installed_versions_from_registry(win64 matlab_versions)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:444
msgid ""
"Input: ``win64`` is a boolean to search for the 64 bit version of Matlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:445
msgid ""
"Output: ``matlab_versions`` is a list of all the versions of Matlab found"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:447
msgid ""
"This function parses the Windows registry and founds the Matlab versions "
"that are installed. The found versions are returned in `matlab_versions`. "
"Set `win64` to `TRUE` if the 64 bit version of Matlab should be looked for "
"The returned list contains all versions under ``HKLM\\\\SOFTWARE\\"
"\\Mathworks\\\\MATLAB``, ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB Runtime`` "
"and ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB Compiler Runtime`` or an empty "
"list in case an error occurred (or nothing found)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:458
msgid ""
"Only the versions are provided. No check is made over the existence of the "
"installation referenced in the registry,"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:525
msgid ""
"Populates the Matlab root with valid versions of Matlab or Matlab Runtime "
"(MCR). The returned matlab_roots is organized in triplets ``(type,"
"version_number,matlab_root_path)``, where ``type`` indicates either "
"``MATLAB`` or ``MCR``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:531
msgid ""
"matlab_get_all_valid_matlab_roots_from_registry(matlab_versions matlab_roots)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:535
msgid "Input: ``matlab_versions`` of each of the Matlab or MCR installations"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:536
msgid ""
"Output: ``matlab_roots`` location of each of the Matlab or MCR installations"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:612
msgid ""
"Returns the extension of the mex files (the suffixes). This function should "
"not be called before the appropriate Matlab root has been found."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:616
msgid "matlab_get_mex_suffix(matlab_root mex_suffix)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:620
msgid ""
"Input: ``matlab_root`` root of Matlab/MCR install e.g. ``Matlab_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:621
msgid ""
"Output: ``mex_suffix`` variable name in which the suffix will be returned."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:702
msgid ""
"This function runs Matlab program specified on arguments and extracts its "
"version. If the path provided for the Matlab installation points to an MCR "
"installation, the version is extracted from the installed files."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:706
msgid ""
"matlab_get_version_from_matlab_run(matlab_binary_path matlab_list_versions)"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:710
msgid "Input: ``matlab_binary_path`` path of the `matlab` binary executable"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:711
msgid "Output: ``matlab_list_versions`` the version extracted from Matlab"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:866
msgid ""
"Adds a Matlab unit test to the test set of cmake/ctest. This command "
"requires the component ``MAIN_PROGRAM`` and hence is not available for an "
"MCR installation."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:870
msgid ""
"The unit test uses the Matlab unittest framework (default, available "
"starting Matlab 2013b+) except if the option ``NO_UNITTEST_FRAMEWORK`` is "
"given."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:874
msgid ""
"The function expects one Matlab test script file to be given. In the case "
"``NO_UNITTEST_FRAMEWORK`` is given, the unittest script file should contain "
"the script to be run, plus an exit command with the exit value. This exit "
"value will be passed to the ctest framework (0 success, non 0 failure). "
"Additional arguments accepted by :command:`add_test` can be passed through "
"``TEST_ARGS`` (eg. ``CONFIGURATION <config> ...``)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:881
msgid ""
"matlab_add_unit_test(\n"
"    NAME <name>\n"
"    UNITTEST_FILE matlab_file_containing_unittest.m\n"
"    [CUSTOM_TEST_COMMAND matlab_command_to_run_as_test]\n"
"    [UNITTEST_PRECOMMAND matlab_command_to_run]\n"
"    [TIMEOUT timeout]\n"
"    [ADDITIONAL_PATH path1 [path2 ...]]\n"
"    [MATLAB_ADDITIONAL_STARTUP_OPTIONS option1 [option2 ...]]\n"
"    [TEST_ARGS arg1 [arg2 ...]]\n"
"    [NO_UNITTEST_FRAMEWORK]\n"
"    )"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:895
#: ../../../../Modules/FindMatlab.cmake:1008
msgid "Function Parameters:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:897
#: ../../../../Modules/FindMatlab.cmake:1010
msgid "``NAME``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:898
msgid "name of the unittest in ctest."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:899
msgid "``UNITTEST_FILE``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:900
msgid ""
"the matlab unittest file. Its path will be automatically added to the Matlab "
"path."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:902
msgid "``CUSTOM_TEST_COMMAND``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:903
msgid ""
"Matlab script command to run as the test. If this is not set, then the "
"following is run: ``runtests('matlab_file_name'), exit(max([ans(1,:)."
"Failed]))`` where ``matlab_file_name`` is the ``UNITTEST_FILE`` without the "
"extension."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:907
msgid "``UNITTEST_PRECOMMAND``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:908
msgid ""
"Matlab script command to be ran before the file containing the test (eg. GPU "
"device initialization based on CMake variables)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:911
msgid "``TIMEOUT``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:912
msgid ""
"the test timeout in seconds. Defaults to 180 seconds as the Matlab unit test "
"may hang."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:914
msgid "``ADDITIONAL_PATH``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:915
msgid ""
"a list of paths to add to the Matlab path prior to running the unit test."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:917
msgid "``MATLAB_ADDITIONAL_STARTUP_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:918
msgid ""
"a list of additional option in order to run Matlab from the command line. ``-"
"nosplash -nodesktop -nodisplay`` are always added."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:921
msgid "``TEST_ARGS``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:922
msgid ""
"Additional options provided to the add_test command. These options are added "
"to the default options (eg. \"CONFIGURATIONS Release\")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:924
msgid "``NO_UNITTEST_FRAMEWORK``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:925
msgid ""
"when set, indicates that the test should not use the unittest framework of "
"Matlab (available for versions >= R2013a)."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:927
msgid "``WORKING_DIRECTORY``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:928
msgid ""
"This will be the working directory for the test. If specified it will also "
"be the output directory used for the log file of the test run. If not "
"specified the temporary directory ``${CMAKE_BINARY_DIR}/Matlab`` will be "
"used as the working directory and the log location."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:986
msgid ""
"Adds a Matlab MEX target. This commands compiles the given sources with the "
"current tool-chain in order to produce a MEX file. The final name of the "
"produced output may be specified, as well as additional link libraries, and "
"a documentation entry for the MEX file. Remaining arguments of the call are "
"passed to the :command:`add_library` or :command:`add_executable` command."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:993
msgid ""
"matlab_add_mex(\n"
"    NAME <name>\n"
"    [EXECUTABLE | MODULE | SHARED]\n"
"    SRC src1 [src2 ...]\n"
"    [OUTPUT_NAME output_name]\n"
"    [DOCUMENTATION file.txt]\n"
"    [LINK_TO target1 target2 ...]\n"
"    [R2017b | R2018a]\n"
"    [EXCLUDE_FROM_ALL]\n"
"    [NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES]\n"
"    [...]\n"
")"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1011
msgid "name of the target."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1012
msgid "``SRC``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1013
msgid "list of source files."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1014
msgid "``LINK_TO``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1015
msgid ""
"a list of additional link dependencies.  The target links to ``libmex`` and "
"``libmx`` by default, unless the ``NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES`` "
"option is passed."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1018
msgid "``OUTPUT_NAME``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1019
msgid ""
"if given, overrides the default name. The default name is the name of the "
"target without any prefix and with ``Matlab_MEX_EXTENSION`` suffix."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1022
msgid "``DOCUMENTATION``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1023
msgid ""
"if given, the file ``file.txt`` will be considered as being the "
"documentation file for the MEX file. This file is copied into the same "
"folder without any processing, with the same name as the final mex file, and "
"with extension `.m`. In that case, typing ``help <name>`` in Matlab prints "
"the documentation contained in this file."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1028
msgid "``R2017b`` or ``R2018a``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1031
msgid ""
"May be given to specify the version of the C API to use: ``R2017b`` "
"specifies the traditional (separate complex) C API, and corresponds to the "
"``-R2017b`` flag for the `mex` command. ``R2018a`` specifies the new "
"interleaved complex C API, and corresponds to the ``-R2018a`` flag for the "
"`mex` command. Ignored if MATLAB version prior to R2018a. Defaults to "
"``R2017b``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1038
msgid "``MODULE`` or ``SHARED``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1041
msgid "May be given to specify the type of library to be created."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1044
msgid "``EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1047
msgid ""
"May be given to create an executable instead of a library. If no type is "
"given explicitly, the type is ``SHARED``."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1049
msgid "``EXCLUDE_FROM_ALL``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1050
msgid ""
"This option has the same meaning as for :prop_tgt:`EXCLUDE_FROM_ALL` and is "
"forwarded to :command:`add_library` or :command:`add_executable` commands."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1053
msgid "``NO_IMPLICIT_LINK_TO_MATLAB_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1056
msgid ""
"This option permits to disable the automatic linking of MATLAB libraries, so "
"that only the libraries that are actually required can be linked via the "
"``LINK_TO`` option."
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1060
msgid ""
"The documentation file is not processed and should be in the following "
"format:"
msgstr ""

#: ../../../../Modules/FindMatlab.cmake:1065
msgid ""
"% This is the documentation\n"
"function ret = mex_target_output_name(input1)"
msgstr ""
