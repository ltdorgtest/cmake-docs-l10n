# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/AUTOMOC.rst:2
msgid "AUTOMOC"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:4
msgid "Should the target be processed with auto-moc (for Qt projects)."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:6
msgid ""
"``AUTOMOC`` is a boolean specifying whether CMake will handle the Qt ``moc`` "
"preprocessor automatically, i.e.  without having to use commands like :"
"module:`QT4_WRAP_CPP() <FindQt4>`, ``QT5_WRAP_CPP()``, etc. Currently, Qt "
"versions 4 to 6 are supported."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:11
msgid ""
"This property is initialized by the value of the :variable:`CMAKE_AUTOMOC` "
"variable if it is set when a target is created."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:14
msgid ""
"When this property is set ``ON``, CMake will scan the header and source "
"files at build time and invoke ``moc`` accordingly."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:19
msgid "Header file processing"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:21
msgid ""
"At configuration time, a list of header files that should be scanned by "
"``AUTOMOC`` is computed from the target's sources."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:24
msgid "All header files in the target's sources are added to the scan list."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:25
msgid ""
"For all C++ source files ``<source_base>.<source_extension>`` in the "
"target's sources, CMake searches for"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:28
msgid ""
"a regular header with the same base name (``<source_base>."
"<header_extention>``) and"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:30
msgid ""
"a private header with the same base name and a ``_p`` suffix "
"(``<source_base>_p.<header_extention>``)"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:33
msgid "and adds these to the scan list."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:35
msgid ""
"At build time, CMake scans each unknown or modified header file from the "
"list and searches for"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:38 ../../../prop_tgt/AUTOMOC.rst:62
msgid "a Qt macro from :prop_tgt:`AUTOMOC_MACRO_NAMES`,"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:39 ../../../prop_tgt/AUTOMOC.rst:65
msgid ""
"additional file dependencies from the ``FILE`` argument of a "
"``Q_PLUGIN_METADATA`` macro and"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:41 ../../../prop_tgt/AUTOMOC.rst:67
msgid ""
"additional file dependencies detected by filters defined in :prop_tgt:"
"`AUTOMOC_DEPEND_FILTERS`."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:44
msgid ""
"If a Qt macro is found, then the header will be compiled by the ``moc`` to "
"the output file ``moc_<base_name>.cpp``.  The complete output file path is "
"described in the section `Output file location`_."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:48
msgid ""
"The header will be ``moc`` compiled again if a file from the additional file "
"dependencies changes."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:51
msgid ""
"Header ``moc`` output files ``moc_<base_name>.cpp`` can be included in "
"source files.  In the section `Including header moc files in sources`_ there "
"is more information on that topic."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:57
msgid "Source file processing"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:59
msgid ""
"At build time, CMake scans each unknown or modified C++ source file from the "
"target's sources for"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:63
msgid ""
"includes of header ``moc`` files (see `Including header moc files in "
"sources`_),"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:70
msgid ""
"If a Qt macro is found, then the C++ source file ``<base>."
"<source_extension>`` is expected to as well contain an include statement"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:74
msgid ""
"#include <<base>.moc> // or\n"
"#include \"<base>.moc\""
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:79
msgid ""
"The source file then will be compiled by the ``moc`` to the output file "
"``<base>.moc``.  A description of the complete output file path is in "
"section `Output file location`_."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:83
msgid ""
"The source will be ``moc`` compiled again if a file from the additional file "
"dependencies changes."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:87
msgid "Including header moc files in sources"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:89
msgid ""
"A source file can include the ``moc`` output file of a header "
"``<header_base>.<header_extension>`` by using an include statement of the "
"form"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:93
msgid ""
"#include <moc_<header_base>.cpp> // or\n"
"#include \"moc_<header_base>.cpp\""
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:98
msgid ""
"If the ``moc`` output file of a header is included by a source, it will be "
"generated in a different location than if it was not included.  This is "
"described in the section `Output file location`_."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:104
msgid "Output file location"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:107
msgid "Included moc output files"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:109
msgid ""
"``moc`` output files that are included by a source file will be generated in"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:111
msgid ""
"``<AUTOGEN_BUILD_DIR>/include`` for single configuration generators or in"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:113
msgid ""
"``<AUTOGEN_BUILD_DIR>/include_<CONFIG>`` for :prop_gbl:`multi configuration "
"<GENERATOR_IS_MULTI_CONFIG>` generators."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:116
msgid ""
"Where ``<AUTOGEN_BUILD_DIR>`` is the value of the target property :prop_tgt:"
"`AUTOGEN_BUILD_DIR`."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:119
msgid ""
"The include directory is automatically added to the target's :prop_tgt:"
"`INCLUDE_DIRECTORIES`."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:123
msgid "Not included moc output files"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:125
msgid ""
"``moc`` output files that are not included in a source file will be "
"generated in"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:128
msgid ""
"``<AUTOGEN_BUILD_DIR>/<SOURCE_DIR_CHECKSUM>`` for single configuration "
"generators or in,"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:130
msgid ""
"``<AUTOGEN_BUILD_DIR>/include_<CONFIG>/<SOURCE_DIR_CHECKSUM>`` for :prop_gbl:"
"`multi configuration <GENERATOR_IS_MULTI_CONFIG>` generators."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:133
msgid ""
"Where ``<SOURCE_DIR_CHECKSUM>`` is a checksum computed from the relative "
"parent directory path of the ``moc`` input file.  This scheme allows to have "
"``moc`` input files with the same name in different directories."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:137
msgid ""
"All not included ``moc`` output files will be included automatically by the "
"CMake generated file"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:140
msgid "``<AUTOGEN_BUILD_DIR>/mocs_compilation.cpp``, or"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:141
msgid "``<AUTOGEN_BUILD_DIR>/mocs_compilation_$<CONFIG>.cpp``,"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:143
msgid "which is added to the target's sources."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:147
msgid "Qt version detection"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:149
msgid ""
"``AUTOMOC`` enabled targets need to know the Qt major and minor version "
"they're working with.  The major version usually is provided by the "
"``INTERFACE_QT_MAJOR_VERSION`` property of the ``Qt[456]Core`` library, that "
"the target links to.  To find the minor version, CMake builds a list of "
"available Qt versions from"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:155
msgid ""
"``Qt6Core_VERSION_MAJOR`` and ``Qt6Core_VERSION_MINOR`` variables (usually "
"set by ``find_package(Qt6...)``)"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:157
msgid ""
"``Qt6Core_VERSION_MAJOR`` and ``Qt6Core_VERSION_MINOR`` directory properties"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:158
msgid ""
"``Qt5Core_VERSION_MAJOR`` and ``Qt5Core_VERSION_MINOR`` variables (usually "
"set by ``find_package(Qt5...)``)"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:160
msgid ""
"``Qt5Core_VERSION_MAJOR`` and ``Qt5Core_VERSION_MINOR`` directory properties"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:161
msgid ""
"``QT_VERSION_MAJOR`` and ``QT_VERSION_MINOR``  variables (usually set by "
"``find_package(Qt4...)``)"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:163
msgid "``QT_VERSION_MAJOR`` and ``QT_VERSION_MINOR``  directory properties"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:165
msgid ""
"in the context of the :command:`add_executable` or :command:`add_library` "
"call."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:167
msgid ""
"Assumed  ``INTERFACE_QT_MAJOR_VERSION`` is a valid number, the first entry "
"in the list with a matching major version is taken.  If no matching major "
"version was found, an error is generated. If  ``INTERFACE_QT_MAJOR_VERSION`` "
"is not a valid number, the first entry in the list is taken."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:173
msgid ""
"A ``find_package(Qt[456]...)`` call sets the ``QT/Qt[56]Core_VERSION_MAJOR/"
"MINOR`` variables.  If the call is in a different context than the :command:"
"`add_executable` or :command:`add_library` call, e.g. in a function, then "
"the version variables might not be available to the ``AUTOMOC`` enabled "
"target. In that case the version variables can be forwarded from the "
"``find_package(Qt[456]...)`` calling context to the :command:"
"`add_executable` or :command:`add_library` calling context as directory "
"properties. The following Qt5 example demonstrates the procedure."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:183
msgid ""
"function (add_qt5_client)\n"
"  find_package(Qt5 REQUIRED QUIET COMPONENTS Core Widgets)\n"
"  ...\n"
"  set_property(DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n"
"    PROPERTY Qt5Core_VERSION_MAJOR \"${Qt5Core_VERSION_MAJOR}\")\n"
"  set_property(DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n"
"    PROPERTY Qt5Core_VERSION_MINOR \"${Qt5Core_VERSION_MAJOR}\")\n"
"  ...\n"
"endfunction ()\n"
"...\n"
"add_qt5_client()\n"
"add_executable(myTarget main.cpp)\n"
"target_link_libraries(myTarget Qt5::QtWidgets)\n"
"set_property(TARGET myTarget PROPERTY AUTOMOC ON)"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:202
msgid "Modifiers"
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:204
msgid ""
":prop_tgt:`AUTOMOC_EXECUTABLE`: The ``moc`` executable will be detected "
"automatically, but can be forced to a certain binary using this target "
"property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:208
msgid ""
":prop_tgt:`AUTOMOC_MOC_OPTIONS`: Additional command line options for ``moc`` "
"can be set in this target property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:211
msgid ""
":prop_tgt:`AUTOMOC_MACRO_NAMES`: This list of Qt macro names can be extended "
"to search for additional macros in headers and sources."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:215
msgid ""
":prop_tgt:`AUTOMOC_DEPEND_FILTERS`: ``moc`` dependency file names can be "
"extracted from headers or sources by defining file name filters in this "
"target property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:219
msgid ""
":prop_tgt:`AUTOMOC_COMPILER_PREDEFINES`: Compiler pre definitions for "
"``moc`` are written to the ``moc_predefs.h`` file. The generation of this "
"file can be enabled or disabled in this target property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:223
msgid ""
":prop_sf:`SKIP_AUTOMOC`: Sources and headers can be excluded from "
"``AUTOMOC`` processing by setting this source file property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:227
msgid ""
":prop_sf:`SKIP_AUTOGEN`: Source files can be excluded from ``AUTOMOC``, :"
"prop_tgt:`AUTOUIC` and :prop_tgt:`AUTORCC` processing by setting this source "
"file property."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:232
msgid ""
":prop_gbl:`AUTOGEN_SOURCE_GROUP`: This global property can be used to group "
"files generated by ``AUTOMOC`` or :prop_tgt:`AUTORCC` together in an IDE, e."
"g.  in MSVS."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:236
msgid ""
":prop_gbl:`AUTOGEN_TARGETS_FOLDER`: This global property can be used to "
"group ``AUTOMOC``, :prop_tgt:`AUTOUIC` and :prop_tgt:`AUTORCC` targets "
"together in an IDE, e.g.  in MSVS."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:241
msgid ""
":variable:`CMAKE_GLOBAL_AUTOGEN_TARGET`: A global ``autogen`` target, that "
"depends on all ``AUTOMOC`` or :prop_tgt:`AUTOUIC` generated "
"``<ORIGIN>_autogen`` targets in the project, will be generated when this "
"variable is ``ON``."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:246
msgid ""
":prop_tgt:`AUTOGEN_PARALLEL`: This target property controls the number of "
"``moc`` or ``uic`` processes to start in parallel during builds."
msgstr ""

#: ../../../prop_tgt/AUTOMOC.rst:250
msgid ""
"See the :manual:`cmake-qt(7)` manual for more information on using CMake "
"with Qt."
msgstr ""
