# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/try_compile.rst:2
msgid "try_compile"
msgstr ""

#: ../../../command/try_compile.rst:8
msgid "Try building some code."
msgstr ""

#: ../../../command/try_compile.rst:11
msgid "Try Compiling Whole Projects"
msgstr ""

#: ../../../command/try_compile.rst:15
msgid ""
"try_compile(RESULT_VAR <bindir> <srcdir>\n"
"            <projectName> [<targetName>] [CMAKE_FLAGS <flags>...]\n"
"            [OUTPUT_VARIABLE <var>])"
msgstr ""

#: ../../../command/try_compile.rst:19
msgid ""
"Try building a project.  The success or failure of the ``try_compile``, i.e. "
"``TRUE`` or ``FALSE`` respectively, is returned in ``RESULT_VAR``."
msgstr ""

#: ../../../command/try_compile.rst:22
msgid ""
"In this form, ``<srcdir>`` should contain a complete CMake project with a "
"``CMakeLists.txt`` file and all sources.  The ``<bindir>`` and ``<srcdir>`` "
"will not be deleted after this command is run.  Specify ``<targetName>`` to "
"build a specific target instead of the ``all`` or ``ALL_BUILD`` target.  See "
"below for the meaning of other options."
msgstr ""

#: ../../../command/try_compile.rst:29
msgid "Try Compiling Source Files"
msgstr ""

#: ../../../command/try_compile.rst:33
msgid ""
"try_compile(RESULT_VAR <bindir> <srcfile|SOURCES srcfile...>\n"
"            [CMAKE_FLAGS <flags>...]\n"
"            [COMPILE_DEFINITIONS <defs>...]\n"
"            [LINK_LIBRARIES <libs>...]\n"
"            [OUTPUT_VARIABLE <var>]\n"
"            [COPY_FILE <fileName> [COPY_FILE_ERROR <var>]])"
msgstr ""

#: ../../../command/try_compile.rst:40
msgid ""
"Try building an executable from one or more source files.  The success or "
"failure of the ``try_compile``, i.e. ``TRUE`` or ``FALSE`` respectively, is "
"returned in ``RESULT_VAR``."
msgstr ""

#: ../../../command/try_compile.rst:44
msgid ""
"In this form the user need only supply one or more source files that include "
"a definition for ``main``.  CMake will create a ``CMakeLists.txt`` file to "
"build the source(s) as an executable that looks something like this::"
msgstr ""

#: ../../../command/try_compile.rst:48
msgid ""
"add_definitions(<expanded COMPILE_DEFINITIONS from caller>)\n"
"include_directories(${INCLUDE_DIRECTORIES})\n"
"link_directories(${LINK_DIRECTORIES})\n"
"add_executable(cmTryCompileExec <srcfile>...)\n"
"target_link_libraries(cmTryCompileExec ${LINK_LIBRARIES})"
msgstr ""

#: ../../../command/try_compile.rst:54
msgid "The options are:"
msgstr ""

#: ../../../command/try_compile.rst:61
msgid "``CMAKE_FLAGS <flags>...``"
msgstr ""

#: ../../../command/try_compile.rst:57
msgid ""
"Specify flags of the form ``-DVAR:TYPE=VALUE`` to be passed to the ``cmake`` "
"command-line used to drive the test build. The above example shows how "
"values for variables ``INCLUDE_DIRECTORIES``, ``LINK_DIRECTORIES``, and "
"``LINK_LIBRARIES`` are used."
msgstr ""

#: ../../../command/try_compile.rst:65
msgid "``COMPILE_DEFINITIONS <defs>...``"
msgstr ""

#: ../../../command/try_compile.rst:64
msgid ""
"Specify ``-Ddefinition`` arguments to pass to ``add_definitions`` in the "
"generated test project."
msgstr ""

#: ../../../command/try_compile.rst:68
msgid "``COPY_FILE <fileName>``"
msgstr ""

#: ../../../command/try_compile.rst:68
msgid "Copy the linked executable to the given ``<fileName>``."
msgstr ""

#: ../../../command/try_compile.rst:72
msgid "``COPY_FILE_ERROR <var>``"
msgstr ""

#: ../../../command/try_compile.rst:71
msgid ""
"Use after ``COPY_FILE`` to capture into variable ``<var>`` any error message "
"encountered while trying to copy the file."
msgstr ""

#: ../../../command/try_compile.rst:80
msgid "``LINK_LIBRARIES <libs>...``"
msgstr ""

#: ../../../command/try_compile.rst:75
msgid ""
"Specify libraries to be linked in the generated project. The list of "
"libraries may refer to system libraries and to :ref:`Imported Targets "
"<Imported Targets>` from the calling project."
msgstr ""

#: ../../../command/try_compile.rst:79
msgid ""
"If this option is specified, any ``-DLINK_LIBRARIES=...`` value given to the "
"``CMAKE_FLAGS`` option will be ignored."
msgstr ""

#: ../../../command/try_compile.rst:83
msgid "``OUTPUT_VARIABLE <var>``"
msgstr ""

#: ../../../command/try_compile.rst:83
msgid "Store the output from the build process the given variable."
msgstr ""

#: ../../../command/try_compile.rst:85
msgid ""
"In this version all files in ``<bindir>/CMakeFiles/CMakeTmp`` will be "
"cleaned automatically.  For debugging, ``--debug-trycompile`` can be passed "
"to ``cmake`` to avoid this clean.  However, multiple sequential "
"``try_compile`` operations reuse this single output directory.  If you use "
"``--debug-trycompile``, you can only debug one ``try_compile`` call at a "
"time. The recommended procedure is to protect all ``try_compile`` calls in "
"your project by ``if(NOT DEFINED RESULT_VAR)`` logic, configure with cmake "
"all the way through once, then delete the cache entry associated with the "
"try_compile call of interest, and then re-run cmake again with ``--debug-"
"trycompile``."
msgstr ""

#: ../../../command/try_compile.rst:97
msgid "Other Behavior Settings"
msgstr ""

#: ../../../command/try_compile.rst:99
msgid ""
"Set the :variable:`CMAKE_TRY_COMPILE_CONFIGURATION` variable to choose a "
"build configuration."
msgstr ""
