# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../variable/CMAKE_CROSSCOMPILING.rst:2
msgid "CMAKE_CROSSCOMPILING"
msgstr ""

#: ../../../variable/CMAKE_CROSSCOMPILING.rst:4
msgid ""
"Intended to indicate whether CMake is cross compiling, but note limitations "
"discussed below."
msgstr ""

#: ../../../variable/CMAKE_CROSSCOMPILING.rst:7
msgid ""
"This variable will be set to true by CMake if the :variable:"
"`CMAKE_SYSTEM_NAME` variable has been set manually (i.e. in a toolchain file "
"or as a cache entry from the :manual:`cmake <cmake(1)>` command line). In "
"most cases, manually setting :variable:`CMAKE_SYSTEM_NAME` will only be done "
"when cross compiling, since it will otherwise be given the same value as :"
"variable:`CMAKE_HOST_SYSTEM_NAME` if not manually set, which is correct for "
"the non-cross-compiling case. In the event that :variable:"
"`CMAKE_SYSTEM_NAME` is manually set to the same value as :variable:"
"`CMAKE_HOST_SYSTEM_NAME`, then ``CMAKE_CROSSCOMPILING`` will still be set to "
"true."
msgstr ""

#: ../../../variable/CMAKE_CROSSCOMPILING.rst:17
msgid ""
"Another case to be aware of is that builds targeting Apple platforms other "
"than macOS are handled differently to other cross compiling scenarios. "
"Rather than relying on :variable:`CMAKE_SYSTEM_NAME` to select the target "
"platform, Apple device builds use :variable:`CMAKE_OSX_SYSROOT` to select "
"the appropriate SDK, which indirectly determines the target platform. "
"Furthermore, when using the Xcode generator, developers can switch between "
"device and simulator builds at build time rather than having a single choice "
"at configure time, so the concept of whether the build is cross compiling or "
"not is more complex. Therefore, the use of ``CMAKE_CROSSCOMPILING`` is not "
"recommended for projects targeting Apple devices."
msgstr ""
