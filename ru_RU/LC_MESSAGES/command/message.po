# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/message.rst:2
msgid "message"
msgstr ""

#: ../../../command/message.rst:4
msgid "Log a message."
msgstr ""

#: ../../../command/message.rst:7
msgid "Synopsis"
msgstr ""

#: ../../../command/message.rst:11
msgid ""
"`General messages`_\n"
"  message([<mode>] \"message text\" ...)\n"
"\n"
"`Reporting checks`_\n"
"  message(<checkState> \"message text\" ...)"
msgstr ""

#: ../../../command/message.rst:19
msgid "General messages"
msgstr ""

#: ../../../command/message.rst:21
msgid "message([<mode>] \"message text\" ...)"
msgstr ""

#: ../../../command/message.rst:25
msgid ""
"Record the specified message text in the log.  If more than one message "
"string is given, they are concatenated into a single message with no "
"separator between the strings."
msgstr ""

#: ../../../command/message.rst:29
msgid ""
"The optional ``<mode>`` keyword determines the type of message, which "
"influences the way the message is handled:"
msgstr ""

#: ../../../command/message.rst:32
msgid "``FATAL_ERROR``"
msgstr ""

#: ../../../command/message.rst:33
msgid "CMake Error, stop processing and generation."
msgstr ""

#: ../../../command/message.rst:35
msgid "``SEND_ERROR``"
msgstr ""

#: ../../../command/message.rst:36
msgid "CMake Error, continue processing, but skip generation."
msgstr ""

#: ../../../command/message.rst:38
msgid "``WARNING``"
msgstr ""

#: ../../../command/message.rst:39
msgid "CMake Warning, continue processing."
msgstr ""

#: ../../../command/message.rst:41
msgid "``AUTHOR_WARNING``"
msgstr ""

#: ../../../command/message.rst:42
msgid "CMake Warning (dev), continue processing."
msgstr ""

#: ../../../command/message.rst:44
msgid "``DEPRECATION``"
msgstr ""

#: ../../../command/message.rst:45
msgid ""
"CMake Deprecation Error or Warning if variable :variable:"
"`CMAKE_ERROR_DEPRECATED` or :variable:`CMAKE_WARN_DEPRECATED` is enabled, "
"respectively, else no message."
msgstr ""

#: ../../../command/message.rst:49
msgid "(none) or ``NOTICE``"
msgstr ""

#: ../../../command/message.rst:50
msgid "Important message printed to stderr to attract user's attention."
msgstr ""

#: ../../../command/message.rst:52
msgid "``STATUS``"
msgstr ""

#: ../../../command/message.rst:53
msgid ""
"The main interesting messages that project users might be interested in. "
"Ideally these should be concise, no more than a single line, but still "
"informative."
msgstr ""

#: ../../../command/message.rst:57
msgid "``VERBOSE``"
msgstr ""

#: ../../../command/message.rst:58
msgid ""
"Detailed informational messages intended for project users.  These messages "
"should provide additional details that won't be of interest in most cases, "
"but which may be useful to those building the project when they want deeper "
"insight into what's happening."
msgstr ""

#: ../../../command/message.rst:63
msgid "``DEBUG``"
msgstr ""

#: ../../../command/message.rst:64
msgid ""
"Detailed informational messages intended for developers working on the "
"project itself as opposed to users who just want to build it.  These "
"messages will not typically be of interest to other users building the "
"project and will often be closely related to internal implementation details."
msgstr ""

#: ../../../command/message.rst:69
msgid "``TRACE``"
msgstr ""

#: ../../../command/message.rst:70
msgid ""
"Fine-grained messages with very low-level implementation details.  Messages "
"using this log level would normally only be temporary and would expect to be "
"removed before releasing the project, packaging up the files, etc."
msgstr ""

#: ../../../command/message.rst:74
msgid "Added the ``NOTICE``, ``VERBOSE``, ``DEBUG``, and ``TRACE`` levels."
msgstr ""

#: ../../../command/message.rst:77
msgid ""
"The CMake command-line tool displays ``STATUS`` to ``TRACE`` messages on "
"stdout with the message preceded by two hyphens and a space.  All other "
"message types are sent to stderr and are not prefixed with hyphens.  The :"
"manual:`CMake GUI <cmake-gui(1)>` displays all messages in its log area. "
"The :manual:`curses interface <ccmake(1)>` shows ``STATUS`` to ``TRACE`` "
"messages one at a time on a status line and other messages in an interactive "
"pop-up box.  The ``--log-level`` command-line option to each of these tools "
"can be used to control which messages will be shown."
msgstr ""

#: ../../../command/message.rst:86
msgid ""
"To make a log level persist between CMake runs, the :variable:"
"`CMAKE_MESSAGE_LOG_LEVEL` variable can be set instead. Note that the command "
"line option takes precedence over the cache variable."
msgstr ""

#: ../../../command/message.rst:91
msgid ""
"Messages of log levels ``NOTICE`` and below will have each line preceded by "
"the content of the :variable:`CMAKE_MESSAGE_INDENT` variable (converted to a "
"single string by concatenating its list items).  For ``STATUS`` to ``TRACE`` "
"messages, this indenting content will be inserted after the hyphens."
msgstr ""

#: ../../../command/message.rst:97
msgid ""
"Messages of log levels ``NOTICE`` and below can also have each line preceded "
"with context of the form ``[some.context.example]``.  The content between "
"the square brackets is obtained by converting the :variable:"
"`CMAKE_MESSAGE_CONTEXT` list variable to a dot-separated string.  The "
"message context will always appear before any indenting content but after "
"any automatically added leading hyphens. By default, message context is not "
"shown, it has to be explicitly enabled by giving the :manual:`cmake "
"<cmake(1)>` ``--log-context`` command-line option or by setting the :"
"variable:`CMAKE_MESSAGE_CONTEXT_SHOW` variable to true.  See the :variable:"
"`CMAKE_MESSAGE_CONTEXT` documentation for usage examples."
msgstr ""

#: ../../../command/message.rst:109
msgid ""
"CMake Warning and Error message text displays using a simple markup "
"language.  Non-indented text is formatted in line-wrapped paragraphs "
"delimited by newlines.  Indented text is considered pre-formatted."
msgstr ""

#: ../../../command/message.rst:115
msgid "Reporting checks"
msgstr ""

#: ../../../command/message.rst:119
msgid ""
"A common pattern in CMake output is a message indicating the start of some "
"sort of check, followed by another message reporting the result of that "
"check. For example:"
msgstr ""

#: ../../../command/message.rst:123
msgid ""
"message(STATUS \"Looking for someheader.h\")\n"
"#... do the checks, set checkSuccess with the result\n"
"if(checkSuccess)\n"
"  message(STATUS \"Looking for someheader.h - found\")\n"
"else()\n"
"  message(STATUS \"Looking for someheader.h - not found\")\n"
"endif()"
msgstr ""

#: ../../../command/message.rst:133
msgid ""
"This can be more robustly and conveniently expressed using the ``CHECK_...`` "
"keyword form of the ``message()`` command:"
msgstr ""

#: ../../../command/message.rst:136
msgid "message(<checkState> \"message\" ...)"
msgstr ""

#: ../../../command/message.rst:140
msgid "where ``<checkState>`` must be one of the following:"
msgstr ""

#: ../../../command/message.rst:142
msgid "``CHECK_START``"
msgstr ""

#: ../../../command/message.rst:143
msgid "Record a concise message about the check about to be performed."
msgstr ""

#: ../../../command/message.rst:145
msgid "``CHECK_PASS``"
msgstr ""

#: ../../../command/message.rst:146
msgid "Record a successful result for a check."
msgstr ""

#: ../../../command/message.rst:148
msgid "``CHECK_FAIL``"
msgstr ""

#: ../../../command/message.rst:149
msgid "Record an unsuccessful result for a check."
msgstr ""

#: ../../../command/message.rst:151
msgid ""
"When recording a check result, the command repeats the message from the most "
"recently started check for which no result has yet been reported, then some "
"separator characters and then the message text provided after the "
"``CHECK_PASS`` or ``CHECK_FAIL`` keyword.  Check messages are always "
"reported at ``STATUS`` log level."
msgstr ""

#: ../../../command/message.rst:157
msgid ""
"Checks may be nested and every ``CHECK_START`` should have exactly one "
"matching ``CHECK_PASS`` or ``CHECK_FAIL``. The :variable:"
"`CMAKE_MESSAGE_INDENT` variable can also be used to add indenting to nested "
"checks if desired.  For example:"
msgstr ""

#: ../../../command/message.rst:162
msgid ""
"message(CHECK_START \"Finding my things\")\n"
"list(APPEND CMAKE_MESSAGE_INDENT \"  \")\n"
"unset(missingComponents)\n"
"\n"
"message(CHECK_START \"Finding partA\")\n"
"# ... do check, assume we find A\n"
"message(CHECK_PASS \"found\")\n"
"\n"
"message(CHECK_START \"Finding partB\")\n"
"# ... do check, assume we don't find B\n"
"list(APPEND missingComponents B)\n"
"message(CHECK_FAIL \"not found\")\n"
"\n"
"list(POP_BACK CMAKE_MESSAGE_INDENT)\n"
"if(missingComponents)\n"
"  message(CHECK_FAIL \"missing components: ${missingComponents}\")\n"
"else()\n"
"  message(CHECK_PASS \"all components found\")\n"
"endif()"
msgstr ""

#: ../../../command/message.rst:184
msgid "Output from the above would appear something like the following::"
msgstr ""

#: ../../../command/message.rst:186
msgid ""
"-- Finding my things\n"
"--   Finding partA\n"
"--   Finding partA - found\n"
"--   Finding partB\n"
"--   Finding partB - not found\n"
"-- Finding my things - missing components: B"
msgstr ""
