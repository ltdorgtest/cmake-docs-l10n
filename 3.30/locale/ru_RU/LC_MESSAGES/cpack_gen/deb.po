# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.30\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../cpack_gen/deb.rst:2
msgid "CPack DEB Generator"
msgstr ""

#: ../../../cpack_gen/deb.rst:4
msgid "The built in (binary) CPack DEB generator (Unix only)"
msgstr ""

#: ../../../cpack_gen/deb.rst:7
msgid "Variables specific to CPack Debian (DEB) generator"
msgstr ""

#: ../../../cpack_gen/deb.rst:9
msgid ""
"The CPack DEB generator may be used to create DEB package using :module:"
"`CPack`. The CPack DEB generator is a :module:`CPack` generator thus it uses "
"the :variable:`!CPACK_XXX` variables used by :module:`CPack`."
msgstr ""

#: ../../../cpack_gen/deb.rst:13
msgid ""
"The CPack DEB generator should work on any Linux host but it will produce "
"better deb package when Debian specific tools ``dpkg-xxx`` are usable on the "
"build system."
msgstr ""

#: ../../../cpack_gen/deb.rst:17
msgid ""
"The CPack DEB generator has specific features which are controlled by the "
"specifics :variable:`!CPACK_DEBIAN_XXX` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:20
msgid ""
":variable:`!CPACK_DEBIAN_<COMPONENT>_XXXX` variables may be used in order to "
"have **component** specific values.  Note however that ``<COMPONENT>`` "
"refers to the **grouping name** written in upper case. It may be either a "
"component name or a component GROUP name."
msgstr ""

#: ../../../cpack_gen/deb.rst:25
msgid ""
"Here are some CPack DEB generator wiki resources that are here for historic "
"reasons and are no longer maintained but may still prove useful:"
msgstr ""

#: ../../../cpack_gen/deb.rst:28
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration"
msgstr ""

#: ../../../cpack_gen/deb.rst:29
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/"
"PackageGenerators#deb-unix-only"
msgstr ""

#: ../../../cpack_gen/deb.rst:31
msgid "List of CPack DEB generator specific variables:"
msgstr ""

#: ../../../cpack_gen/deb.rst:35
msgid "Enable component packaging for CPackDEB"
msgstr ""

#: ../../../cpack_gen/deb.rst:0
msgid "Mandatory"
msgstr ""

#: ../../../cpack_gen/deb.rst:37 ../../../cpack_gen/deb.rst:105
#: ../../../cpack_gen/deb.rst:137 ../../../cpack_gen/deb.rst:163
#: ../../../cpack_gen/deb.rst:198 ../../../cpack_gen/deb.rst:319
#: ../../../cpack_gen/deb.rst:336 ../../../cpack_gen/deb.rst:370
#: ../../../cpack_gen/deb.rst:384 ../../../cpack_gen/deb.rst:396
#: ../../../cpack_gen/deb.rst:416 ../../../cpack_gen/deb.rst:439
#: ../../../cpack_gen/deb.rst:459 ../../../cpack_gen/deb.rst:486
#: ../../../cpack_gen/deb.rst:505 ../../../cpack_gen/deb.rst:524
#: ../../../cpack_gen/deb.rst:542 ../../../cpack_gen/deb.rst:558
#: ../../../cpack_gen/deb.rst:576 ../../../cpack_gen/deb.rst:591
#: ../../../cpack_gen/deb.rst:612 ../../../cpack_gen/deb.rst:643
#: ../../../cpack_gen/deb.rst:671
msgid "No"
msgstr ""

#: ../../../cpack_gen/deb.rst:0
msgid "Default"
msgstr ""

#: ../../../cpack_gen/deb.rst:38 ../../../cpack_gen/deb.rst:340
#: ../../../cpack_gen/deb.rst:559 ../../../cpack_gen/deb.rst:672
msgid "``OFF``"
msgstr ""

#: ../../../cpack_gen/deb.rst:40
msgid ""
"If enabled (``ON``) multiple packages are generated. By default a single "
"package containing files of all components is generated."
msgstr ""

#: ../../../cpack_gen/deb.rst:46
msgid ""
"Set Package control field (variable is automatically transformed to lower "
"case)."
msgstr ""

#: ../../../cpack_gen/deb.rst:49 ../../../cpack_gen/deb.rst:69
#: ../../../cpack_gen/deb.rst:115 ../../../cpack_gen/deb.rst:151
#: ../../../cpack_gen/deb.rst:205 ../../../cpack_gen/deb.rst:213
#: ../../../cpack_gen/deb.rst:242 ../../../cpack_gen/deb.rst:258
#: ../../../cpack_gen/deb.rst:276 ../../../cpack_gen/deb.rst:305
msgid "Yes"
msgstr ""

#: ../../../cpack_gen/deb.rst:52
msgid ":variable:`CPACK_PACKAGE_NAME` for non-component based installations"
msgstr ""

#: ../../../cpack_gen/deb.rst:54
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_NAME` suffixed with ``-<COMPONENT>`` for "
"component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:57
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_NAME` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:60 ../../../cpack_gen/deb.rst:650
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-source"
msgstr ""

#: ../../../cpack_gen/deb.rst:67
msgid "Package file name."
msgstr ""

#: ../../../cpack_gen/deb.rst:70
msgid "``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``"
msgstr ""

#: ../../../cpack_gen/deb.rst:72
msgid "This may be set to:"
msgstr ""

#: ../../../cpack_gen/deb.rst:74
msgid "``DEB-DEFAULT``"
msgstr ""

#: ../../../cpack_gen/deb.rst:75
msgid ""
"Tell CPack to automatically generate the package file name in deb format::"
msgstr ""

#: ../../../cpack_gen/deb.rst:77
msgid ""
"<PackageName>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb"
msgstr ""

#: ../../../cpack_gen/deb.rst:79
msgid ""
"This setting recommended as the preferred behavior, but for backward "
"compatibility with the CPack DEB generator in CMake prior to version 3.6, "
"this is not the default.   Without this, duplicate names may occur. "
"Duplicate files get overwritten and it is up to the packager to set the "
"variables in a manner that will prevent such errors."
msgstr ""

#: ../../../cpack_gen/deb.rst:85
msgid "``<file-name>[.deb]``"
msgstr ""

#: ../../../cpack_gen/deb.rst:86
msgid "Use the given file name."
msgstr ""

#: ../../../cpack_gen/deb.rst:90
msgid ""
"The ``.deb`` suffix will be automatically added if the file name does not "
"end in ``.deb`` or ``.ipk``.  Previously the suffix was required."
msgstr ""

#: ../../../cpack_gen/deb.rst:93
msgid "``<file-name>.ipk``"
msgstr ""

#: ../../../cpack_gen/deb.rst:96
msgid ""
"Use the given file name. The ``.ipk`` suffix is used by the OPKG packaging "
"system."
msgstr ""

#: ../../../cpack_gen/deb.rst:103
msgid "The Debian package epoch"
msgstr ""

#: ../../../cpack_gen/deb.rst:106 ../../../cpack_gen/deb.rst:138
#: ../../../cpack_gen/deb.rst:199 ../../../cpack_gen/deb.rst:371
#: ../../../cpack_gen/deb.rst:385 ../../../cpack_gen/deb.rst:592
msgid "None"
msgstr ""

#: ../../../cpack_gen/deb.rst:108
msgid ""
"Optional number that should be incremented when changing versioning schemas "
"or fixing mistakes in the version numbers of older packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:113
msgid "The Debian package version"
msgstr ""

#: ../../../cpack_gen/deb.rst:116
msgid ":variable:`CPACK_PACKAGE_VERSION`"
msgstr ""

#: ../../../cpack_gen/deb.rst:118
msgid ""
"This variable may contain only alphanumerics (A-Za-z0-9) and the "
"characters . + - ~ (full stop, plus, hyphen, tilde) and should start with a "
"digit. If :variable:`CPACK_DEBIAN_PACKAGE_RELEASE` is not set then hyphens "
"are not allowed."
msgstr ""

#: ../../../cpack_gen/deb.rst:125
msgid ""
"For backward compatibility with CMake 3.9 and lower a failed test of this "
"variable's content is not a hard error when both :variable:"
"`CPACK_DEBIAN_PACKAGE_RELEASE` and :variable:`CPACK_DEBIAN_PACKAGE_EPOCH` "
"variables are not set. An author warning is reported instead."
msgstr ""

#: ../../../cpack_gen/deb.rst:135
msgid "The Debian package release - Debian revision number."
msgstr ""

#: ../../../cpack_gen/deb.rst:140
msgid ""
"This is the numbering of the DEB package itself, i.e. the version of the "
"packaging and not the version of the content (see :variable:"
"`CPACK_DEBIAN_PACKAGE_VERSION`). One may change the default value if the "
"previous packaging was buggy and/or you want to put here a fancy Linux "
"distro specific numbering."
msgstr ""

#: ../../../cpack_gen/deb.rst:149
msgid "The Debian package architecture"
msgstr ""

#: ../../../cpack_gen/deb.rst:152
msgid ""
"Output of ``dpkg --print-architecture`` (or ``i386`` if ``dpkg`` is not "
"found)"
msgstr ""

#: ../../../cpack_gen/deb.rst:155
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ARCHITECTURE` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:161
msgid "Sets the Debian dependencies of this package."
msgstr ""

#: ../../../cpack_gen/deb.rst:166 ../../../cpack_gen/deb.rst:399
#: ../../../cpack_gen/deb.rst:419 ../../../cpack_gen/deb.rst:442
#: ../../../cpack_gen/deb.rst:462 ../../../cpack_gen/deb.rst:489
#: ../../../cpack_gen/deb.rst:508 ../../../cpack_gen/deb.rst:527
#: ../../../cpack_gen/deb.rst:545 ../../../cpack_gen/deb.rst:646
msgid "An empty string for non-component based installations"
msgstr ""

#: ../../../cpack_gen/deb.rst:167
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:171
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:176
msgid ""
"If :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or more specifically :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` is set for this component, the "
"discovered dependencies will be appended to :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` instead of :variable:"
"`CPACK_DEBIAN_PACKAGE_DEPENDS`. If :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` is an empty string, only the "
"automatically discovered dependencies will be set for this component."
msgstr ""

#: ../../../cpack_gen/deb.rst:185
msgid "Example:"
msgstr ""

#: ../../../cpack_gen/deb.rst:187
msgid "set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= 2.3.1-6), libc6 (< 2.4)\")"
msgstr ""

#: ../../../cpack_gen/deb.rst:195
msgid ""
"Sets inter-component dependencies if listed with :variable:"
"`CPACK_COMPONENT_<compName>_DEPENDS` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:203
msgid "The Debian package maintainer"
msgstr ""

#: ../../../cpack_gen/deb.rst:206
msgid ":variable:`!CPACK_PACKAGE_CONTACT`"
msgstr ""

#: ../../../cpack_gen/deb.rst:211
msgid "The Debian package description"
msgstr ""

#: ../../../cpack_gen/deb.rst:216
msgid ""
":variable:`CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` (component based installers "
"only) if set, or :variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` if set, or"
msgstr ""

#: ../../../cpack_gen/deb.rst:218
msgid ""
":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component based "
"installers only) if set, or :variable:`CPACK_PACKAGE_DESCRIPTION` if set, or"
msgstr ""

#: ../../../cpack_gen/deb.rst:220
msgid ""
"content of the file specified in :variable:`CPACK_PACKAGE_DESCRIPTION_FILE` "
"if set"
msgstr ""

#: ../../../cpack_gen/deb.rst:222
msgid ""
"If after that description is not set, :variable:"
"`CPACK_PACKAGE_DESCRIPTION_SUMMARY` going to be used if set. Otherwise, :"
"variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` will be added as the first line "
"of description as defined in `Debian Policy Manual`_."
msgstr ""

#: ../../../cpack_gen/deb.rst:226
msgid ""
"Per-component :variable:`!CPACK_COMPONENT_<compName>_DESCRIPTION` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:229
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:232
msgid "The :variable:`!CPACK_PACKAGE_DESCRIPTION_FILE` variable."
msgstr ""

#: ../../../cpack_gen/deb.rst:240
msgid "Set Section control field e.g. admin, devel, doc, ..."
msgstr ""

#: ../../../cpack_gen/deb.rst:243
msgid "``devel``"
msgstr ""

#: ../../../cpack_gen/deb.rst:245
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SECTION` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:248
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections"
msgstr ""

#: ../../../cpack_gen/deb.rst:256
msgid "The archive format used for creating the Debian package."
msgstr ""

#: ../../../cpack_gen/deb.rst:259
msgid "``gnutar``"
msgstr ""

#: ../../../cpack_gen/deb.rst:261
msgid "Possible value is: ``gnutar``"
msgstr ""

#: ../../../cpack_gen/deb.rst:265
msgid ""
"This variable previously defaulted to the ``paxr`` value, but ``dpkg`` has "
"never supported that tar format. For backwards compatibility the ``paxr`` "
"value will be mapped to ``gnutar`` and a deprecation message will be emitted."
msgstr ""

#: ../../../cpack_gen/deb.rst:274
msgid "The compression used for creating the Debian package."
msgstr ""

#: ../../../cpack_gen/deb.rst:277 ../../../cpack_gen/deb.rst:290
msgid "``gzip``"
msgstr ""

#: ../../../cpack_gen/deb.rst:279
msgid "Possible values are:"
msgstr ""

#: ../../../cpack_gen/deb.rst:281
msgid "``lzma``"
msgstr ""

#: ../../../cpack_gen/deb.rst:282
msgid "Lempel–Ziv–Markov chain algorithm"
msgstr ""

#: ../../../cpack_gen/deb.rst:284
msgid "``xz``"
msgstr ""

#: ../../../cpack_gen/deb.rst:285
msgid "XZ Utils compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:287
msgid "``bzip2``"
msgstr ""

#: ../../../cpack_gen/deb.rst:288
msgid "bzip2 Burrows–Wheeler algorithm"
msgstr ""

#: ../../../cpack_gen/deb.rst:291
msgid "GNU Gzip compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:293
msgid "``zstd``"
msgstr ""

#: ../../../cpack_gen/deb.rst:296
msgid "Zstandard compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:302
msgid ""
"Set Priority control field e.g. required, important, standard, optional, "
"extra"
msgstr ""

#: ../../../cpack_gen/deb.rst:306
msgid "``optional``"
msgstr ""

#: ../../../cpack_gen/deb.rst:308
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PRIORITY` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:311
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities"
msgstr ""

#: ../../../cpack_gen/deb.rst:315
msgid ""
"The URL of the web site for this package, preferably (when applicable) the "
"site from which the original source can be obtained and any additional "
"upstream documentation or information may be found."
msgstr ""

#: ../../../cpack_gen/deb.rst:320
msgid ":variable:`CMAKE_PROJECT_HOMEPAGE_URL`"
msgstr ""

#: ../../../cpack_gen/deb.rst:322
msgid "The :variable:`!CMAKE_PROJECT_HOMEPAGE_URL` variable."
msgstr ""

#: ../../../cpack_gen/deb.rst:327
msgid ""
"The content of this field is a simple URL without any surrounding characters "
"such as <>."
msgstr ""

#: ../../../cpack_gen/deb.rst:333
msgid ""
"May be set to ON in order to use ``dpkg-shlibdeps`` to generate better "
"package dependency list."
msgstr ""

#: ../../../cpack_gen/deb.rst:339
msgid ":variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` if set or"
msgstr ""

#: ../../../cpack_gen/deb.rst:344
msgid ""
"You may need set :variable:`CMAKE_INSTALL_RPATH` to an appropriate value if "
"you use this feature, because if you don't ``dpkg-shlibdeps`` may fail to "
"find your own shared libs. See https://gitlab.kitware.com/cmake/community/-/"
"wikis/doc/cmake/RPATH-handling"
msgstr ""

#: ../../../cpack_gen/deb.rst:351
msgid ""
"You can also set :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS` to "
"an appropriate value if you use this feature, in order to please ``dpkg-"
"shlibdeps``. However, you should only do this for private shared libraries "
"that could not get resolved otherwise."
msgstr ""

#: ../../../cpack_gen/deb.rst:356
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:359
msgid "Correct handling of ``$ORIGIN`` in :variable:`CMAKE_INSTALL_RPATH`."
msgstr ""

#: ../../../cpack_gen/deb.rst:366
msgid ""
"May be set to a list of directories that will be given to ``dpkg-shlibdeps`` "
"via its ``-l`` option. These will be searched by ``dpkg-shlibdeps`` in order "
"to find private shared library dependencies."
msgstr ""

#: ../../../cpack_gen/deb.rst:375
msgid ""
"You should prefer to set :variable:`CMAKE_INSTALL_RPATH` to an appropriate "
"value if you use ``dpkg-shlibdeps``. The current option is really only "
"needed for private shared library dependencies."
msgstr ""

#: ../../../cpack_gen/deb.rst:381
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"the CPack DEB generator run."
msgstr ""

#: ../../../cpack_gen/deb.rst:390
msgid ""
"Sets the `Pre-Depends` field of the Debian package. Like :variable:`Depends "
"<CPACK_DEBIAN_PACKAGE_DEPENDS>`, except that it also forces ``dpkg`` to "
"complete installation of the packages named before even starting the "
"installation of the package which declares the pre-dependency."
msgstr ""

#: ../../../cpack_gen/deb.rst:400
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` for component-based "
"installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:403
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PREDEPENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:406 ../../../cpack_gen/deb.rst:426
#: ../../../cpack_gen/deb.rst:515 ../../../cpack_gen/deb.rst:534
#: ../../../cpack_gen/deb.rst:552
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"binarydeps"
msgstr ""

#: ../../../cpack_gen/deb.rst:411
msgid ""
"Sets the ``Enhances`` field of the Debian package. Similar to :variable:"
"`Suggests <CPACK_DEBIAN_PACKAGE_SUGGESTS>` but works in the opposite "
"direction: declares that a package can enhance the functionality of another "
"package."
msgstr ""

#: ../../../cpack_gen/deb.rst:420
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:423
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ENHANCES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:431
msgid ""
"Sets the ``Breaks`` field of the Debian package. When a binary package (P) "
"declares that it breaks other packages (B), ``dpkg`` will not allow the "
"package (P) which declares ``Breaks`` be **unpacked** unless the packages "
"that will be broken (B) are deconfigured first. As long as the package (P) "
"is configured, the previously deconfigured packages (B) cannot be "
"reconfigured again."
msgstr ""

#: ../../../cpack_gen/deb.rst:443
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_BREAKS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:446
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_BREAKS` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:449
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-breaks"
msgstr ""

#: ../../../cpack_gen/deb.rst:454
msgid ""
"Sets the `Conflicts` field of the Debian package. When one binary package "
"declares a conflict with another using a `Conflicts` field, ``dpkg`` will "
"not allow them to be unpacked on the system at the same time."
msgstr ""

#: ../../../cpack_gen/deb.rst:463
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:466
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONFLICTS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:469
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"conflicts"
msgstr ""

#: ../../../cpack_gen/deb.rst:473
msgid ""
"This is a stronger restriction than :variable:`Breaks "
"<CPACK_DEBIAN_PACKAGE_BREAKS>`, which prevents the broken package from being "
"configured while the breaking package is in the \"Unpacked\" state but "
"allows both packages to be unpacked at the same time."
msgstr ""

#: ../../../cpack_gen/deb.rst:482
msgid ""
"Sets the `Provides` field of the Debian package. A virtual package is one "
"which appears in the `Provides` control field of another package."
msgstr ""

#: ../../../cpack_gen/deb.rst:490
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:493
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PROVIDES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:496
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual"
msgstr ""

#: ../../../cpack_gen/deb.rst:501
msgid ""
"Sets the `Replaces` field of the Debian package. Packages can declare in "
"their control file that they should overwrite files in certain other "
"packages, or completely replace other packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:509
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_REPLACES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:512
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_REPLACES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:520
msgid ""
"Sets the ``Recommends`` field of the Debian package. Allows packages to "
"declare a strong, but not absolute, dependency on other packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:528
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` for component-based "
"installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:531
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_RECOMMENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:539
msgid ""
"Sets the `Suggests` field of the Debian package. Allows packages to declare "
"a suggested package install grouping."
msgstr ""

#: ../../../cpack_gen/deb.rst:546
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:549
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SUGGESTS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:561
msgid ""
"Allows to generate shlibs control file automatically. Compatibility is "
"defined by :variable:`CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY` variable "
"value."
msgstr ""

#: ../../../cpack_gen/deb.rst:566
msgid ""
"Libraries are only considered if they have both library name and version "
"set. This can be done by setting SOVERSION property with :command:"
"`set_target_properties` command."
msgstr ""

#: ../../../cpack_gen/deb.rst:574
msgid "Compatibility policy for auto-generated shlibs control file."
msgstr ""

#: ../../../cpack_gen/deb.rst:577
msgid "``=``"
msgstr ""

#: ../../../cpack_gen/deb.rst:579
msgid ""
"Defines compatibility policy for auto-generated shlibs control file. "
"Possible values: ``=``, ``>=``"
msgstr ""

#: ../../../cpack_gen/deb.rst:582
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-sharedlibs-"
"shlibdeps"
msgstr ""

#: ../../../cpack_gen/deb.rst:587
msgid ""
"This variable allow advanced user to add custom script to the control.tar."
"gz. Typical usage is for conffiles, postinst, postrm, prerm."
msgstr ""

#: ../../../cpack_gen/deb.rst:594 ../../../cpack_gen/deb.rst:615
msgid "Usage:"
msgstr ""

#: ../../../cpack_gen/deb.rst:596
msgid ""
"set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n"
"    \"${CMAKE_CURRENT_SOURCE_DIR}/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")"
msgstr ""

#: ../../../cpack_gen/deb.rst:601
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_EXTRA` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:609
msgid ""
"This variable indicates if the Debian policy on control files should be "
"strictly followed."
msgstr ""

#: ../../../cpack_gen/deb.rst:613
msgid "``FALSE``"
msgstr ""

#: ../../../cpack_gen/deb.rst:617
msgid "set(CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION TRUE)"
msgstr ""

#: ../../../cpack_gen/deb.rst:621
msgid ""
"This overrides the permissions on the original files, following the rules "
"set by Debian policy https://www.debian.org/doc/debian-policy/ch-files."
"html#s-permissions-owners"
msgstr ""

#: ../../../cpack_gen/deb.rst:627
msgid ""
"The original permissions of the files will be used in the final package "
"unless this variable is set to ``TRUE``. In particular, the scripts should "
"have the proper executable flag prior to the generation of the package."
msgstr ""

#: ../../../cpack_gen/deb.rst:637
msgid ""
"Sets the ``Source`` field of the binary Debian package. When the binary "
"package name is not the same as the source package name (in particular when "
"several components/binaries are generated from one source) the source from "
"which the binary has been generated should be indicated with the field "
"``Source``."
msgstr ""

#: ../../../cpack_gen/deb.rst:647
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SOURCE` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:654
msgid ""
"This value is not interpreted. It is possible to pass an optional revision "
"number of the referenced source package as well."
msgstr ""

#: ../../../cpack_gen/deb.rst:658
msgid "Packaging of debug information"
msgstr ""

#: ../../../cpack_gen/deb.rst:662
msgid "Dbgsym packages contain debug symbols for debugging packaged binaries."
msgstr ""

#: ../../../cpack_gen/deb.rst:664
msgid "Dbgsym packaging has its own set of variables:"
msgstr ""

#: ../../../cpack_gen/deb.rst:669
msgid "Enable generation of dbgsym .ddeb package(s)."
msgstr ""

#: ../../../cpack_gen/deb.rst:676
msgid ""
"Setting this also strips the ELF files in the generated non-dbgsym package, "
"which results in debuginfo only being available in the dbgsym package."
msgstr ""

#: ../../../cpack_gen/deb.rst:681
msgid ""
"Binaries must contain debug symbols before packaging so use either ``Debug`` "
"or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable value."
msgstr ""

#: ../../../cpack_gen/deb.rst:684
msgid ""
"Additionally, if :variable:`CPACK_STRIP_FILES` is set, the files will be "
"stripped before they get to the DEB generator, so will not contain debug "
"symbols and a dbgsym package will not get built. Do not use with :variable:"
"`CPACK_STRIP_FILES`."
msgstr ""

#: ../../../cpack_gen/deb.rst:689
msgid "Building Debian packages on Windows"
msgstr ""

#: ../../../cpack_gen/deb.rst:693
msgid ""
"To communicate UNIX file permissions from the install stage to the CPack DEB "
"generator the ``cmake_mode_t`` NTFS alternate data stream (ADT) is used."
msgstr ""

#: ../../../cpack_gen/deb.rst:697
msgid ""
"When a filesystem without ADT support is used only owner read/write "
"permissions can be preserved."
msgstr ""

#: ../../../cpack_gen/deb.rst:701
msgid "Reproducible packages"
msgstr ""

#: ../../../cpack_gen/deb.rst:705
msgid ""
"The environment variable :envvar:`!SOURCE_DATE_EPOCH` may be set to a UNIX "
"timestamp, defined as the number of seconds, excluding leap seconds, since "
"01 Jan 1970 00:00:00 UTC.  If set, the CPack DEB generator will use its "
"value for timestamps in the package."
msgstr ""
