# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.30\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../variable/CMAKE_LINKER_TYPE.rst:2
msgid "CMAKE_LINKER_TYPE"
msgstr ""

#: ../../../variable/CMAKE_LINKER_TYPE.rst:6
msgid "Specify which linker will be used for the link step."
msgstr ""

#: ../../../variable/CMAKE_LINKER_TYPE.rst:8
msgid ""
"This variable is used to initialize the :prop_tgt:`LINKER_TYPE` property on "
"each target created by a call to :command:`add_library` or :command:"
"`add_executable`.  It is meaningful only for targets having a link step.  If "
"set, its value is also used by the :command:`try_compile` command."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:2
msgid ""
"It is assumed that the linker specified is fully compatible with the default "
"one the compiler would normally invoke. CMake will not do any option "
"translation."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:6
msgid ""
"Linker types are case-sensitive and may only contain letters, numbers and "
"underscores. Linker types defined in all uppercase are reserved for CMake's "
"own built-in types. The pre-defined linker types are:"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:10
msgid "``DEFAULT``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:11
msgid ""
"This type corresponds to standard linking, essentially equivalent to the :"
"prop_tgt:`LINKER_TYPE` target property not being set at all."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:14
msgid "``SYSTEM``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:15
msgid ""
"Use the standard linker provided by the platform or toolchain. For example, "
"this implies the Microsoft linker for all MSVC-compatible compilers. This "
"type is supported for the following platform-compiler combinations:"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:19
#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:29
msgid ""
"Linux: ``GNU``, ``Clang``, ``LLVMFlang``, ``NVIDIA``, and ``Swift`` "
"compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:21
msgid ""
"Apple platforms: ``AppleClang``, ``Clang``, ``GNU``, and ``Swift`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:23
msgid ""
"Windows: ``MSVC``, ``GNU``, ``Clang``, ``NVIDIA``, and ``Swift`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:25
msgid "``LLD``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:26
msgid ""
"Use the ``LLVM`` linker. This type is supported for the following platform-"
"compiler combinations:"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:31
msgid "Apple platforms: ``Clang``, ``AppleClang``, and ``Swift`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:32
msgid ""
"Windows: ``GNU``, ``Clang`` with MSVC-like front-end, ``Clang`` with GNU-"
"like front-end, ``MSVC``, ``NVIDIA`` with MSVC-like front-end, and ``Swift``."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:36
msgid "``BFD``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:37
msgid ""
"Use the ``GNU`` linker.  This type is supported for the following platform-"
"compiler combinations:"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:40
#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:51
msgid "Linux: ``GNU``, ``Clang``, ``LLVMFlang``, and ``NVIDIA`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:41
msgid "Windows: ``GNU``, ``Clang`` with GNU-like front-end."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:43
msgid "``GOLD``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:44
msgid ""
"Supported on Linux platform with ``GNU``, ``Clang``, ``LLVMFlang``, "
"``NVIDIA``, and ``Swift`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:47
msgid "``MOLD``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:48
msgid ""
"Use the `mold linker <https://github.com/rui314/mold>`_. This type is "
"supported on the following platform-compiler combinations:"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:52
msgid ""
"Apple platforms: ``Clang`` and ``AppleClang`` compilers (acts as an alias to "
"the `sold linker`_)."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:55
msgid "``SOLD``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:56
msgid ""
"Use the `sold linker`_. This type is only supported on Apple platforms with "
"``Clang`` and ``AppleClang`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:59
msgid "``APPLE_CLASSIC``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:60
msgid ""
"Use the Apple linker in the classic behavior (i.e. before ``Xcode 15.0``). "
"This type is only supported on Apple platforms with ``GNU``, ``Clang``, "
"``AppleClang``, and ``Swift`` compilers."
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:64
msgid "``MSVC``"
msgstr ""

#: ../../../variable/LINKER_PREDEFINED_TYPES.txt:65
msgid ""
"Use the Microsoft linker. This type is only supported on the Windows "
"platform with ``MSVC``, ``Clang`` with MSVC-like front-end, and ``Swift`` "
"compilers."
msgstr ""
