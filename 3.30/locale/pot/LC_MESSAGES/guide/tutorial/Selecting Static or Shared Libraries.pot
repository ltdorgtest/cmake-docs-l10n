# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.30\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-11-01 08:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:2
msgid "Step 10: Selecting Static or Shared Libraries"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:4
msgid ""
"In this section we will show how the :variable:`BUILD_SHARED_LIBS` variable "
"can be used to control the default behavior of :command:`add_library`, and "
"allow control over how libraries without an explicit type (``STATIC``, "
"``SHARED``, ``MODULE`` or ``OBJECT``) are built."
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:9
msgid ""
"To accomplish this we need to add :variable:`BUILD_SHARED_LIBS` to the top-"
"level ``CMakeLists.txt``. We use the :command:`option` command as it allows "
"users to optionally select if the value should be ``ON`` or ``OFF``."
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:13
#: Libraries.rst:23
msgid "CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:13
msgid ""
"\n"
"option(BUILD_SHARED_LIBS \"Build using shared libraries\" ON)\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:20
msgid ""
"Next, we need to specify output directories for our static and shared "
"libraries."
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:23
msgid ""
"set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}\")\n"
"set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}\")\n"
"set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}\")\n"
"\n"
"option(BUILD_SHARED_LIBS \"Build using shared libraries\" ON)\n"
"\n"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:30
msgid ""
"Finally, update ``MathFunctions/MathFunctions.h`` to use dll export defines:"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:32
msgid "MathFunctions/MathFunctions.h"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:32
msgid ""
"\n"
"#if defined(_WIN32)\n"
"#  if defined(EXPORTING_MYMATH)\n"
"#    define DECLSPEC __declspec(dllexport)\n"
"#  else\n"
"#    define DECLSPEC __declspec(dllimport)\n"
"#  endif\n"
"#else // non windows\n"
"#  define DECLSPEC\n"
"#endif\n"
"\n"
"namespace mathfunctions {\n"
"double DECLSPEC sqrt(double x);\n"
"}\n"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:37
msgid ""
"At this point, if you build everything, you may notice that linking fails as "
"we are combining a static library without position independent code with a "
"library that has position independent code. The solution to this is to "
"explicitly set the :prop_tgt:`POSITION_INDEPENDENT_CODE` target property of "
"SqrtLibrary to be ``True`` when building shared libraries."
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:43
#: Libraries.rst:53
msgid "MathFunctions/CMakeLists.txt"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:43
msgid ""
"  # state that SqrtLibrary need PIC when the default is shared libraries\n"
"  set_target_properties(SqrtLibrary PROPERTIES\n"
"                        POSITION_INDEPENDENT_CODE ${BUILD_SHARED_LIBS}\n"
"                        )\n"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:50
msgid ""
"Define ``EXPORTING_MYMATH`` stating we are using ``declspec(dllexport)`` "
"when building on Windows."
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:53
msgid ""
"# define the symbol stating we are using the declspec(dllexport) when\n"
"# building on windows\n"
"target_compile_definitions(MathFunctions PRIVATE \"EXPORTING_MYMATH\")\n"
msgstr ""

#: ../../../guide/tutorial/Selecting Static or Shared Libraries.rst:60
msgid ""
"**Exercise**: We modified ``MathFunctions.h`` to use dll export defines. "
"Using CMake documentation can you find a helper module to simplify this?"
msgstr ""
