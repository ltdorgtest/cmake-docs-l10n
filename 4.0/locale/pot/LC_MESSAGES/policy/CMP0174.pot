# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0174.rst:2
msgid "CMP0174"
msgstr ""

#: ../../../policy/CMP0174.rst:6
msgid ""
":command:`cmake_parse_arguments(PARSE_ARGV)` defines a variable for an empty "
"string after a single-value keyword."
msgstr ""

#: ../../../policy/CMP0174.rst:9
msgid ""
"One of the main reasons for using the ``PARSE_ARGV`` form of the :command:"
"`cmake_parse_arguments` command is to more robustly handle corner cases "
"related to empty values.  The non-``PARSE_ARGV`` form doesn't preserve empty "
"arguments, but the ``PARSE_ARGV`` form does.  For each single-value keyword "
"given, a variable should be defined if the keyword is present, even if it is "
"followed by an empty string."
msgstr ""

#: ../../../policy/CMP0174.rst:16
msgid ""
"Prior to CMake 3.31, no variable would be defined if the value given after a "
"single-value keyword was an empty string.  This meant the code could not "
"detect the difference between the keyword not being given, and it being "
"given but with an empty value, except by iterating over all the arguments "
"and checking if the keyword is present."
msgstr ""

#: ../../../policy/CMP0174.rst:22
msgid ""
"For the ``OLD`` behavior of this policy, :command:"
"`cmake_parse_arguments(PARSE_ARGV)` does not define a variable for a single-"
"value keyword followed by an empty string, or followed by no value at all."
msgstr ""

#: ../../../policy/CMP0174.rst:27
msgid ""
"For the ``NEW`` behavior, :command:`cmake_parse_arguments(PARSE_ARGV)` "
"always defines a variable for each keyword given in the arguments, even a "
"single-value keyword with an empty string as its value or no value at all.  "
"With the ``NEW`` behavior, the code can robustly check if a single-value "
"keyword was given using just ``if(DEFINED <prefix>_<keyword>)``."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
