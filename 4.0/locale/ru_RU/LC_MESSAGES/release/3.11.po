# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.11.rst:2
msgid "CMake 3.11 Release Notes"
msgstr ""

#: ../../../release/3.11.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.11.rst:8
msgid "Changes made since CMake 3.10 include the following."
msgstr ""

#: ../../../release/3.11.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.11.rst:14
msgid "Platforms"
msgstr ""

#: ../../../release/3.11.rst:16
msgid ""
"TI C/C++ compilers are now supported by the :generator:`Ninja` generator."
msgstr ""

#: ../../../release/3.11.rst:19
msgid "Generators"
msgstr ""

#: ../../../release/3.11.rst:21
msgid ""
"The :generator:`CodeBlocks` extra generator learned to check a :variable:"
"`CMAKE_CODEBLOCKS_COMPILER_ID` variable for a custom compiler identification "
"value to place in the project file."
msgstr ""

#: ../../../release/3.11.rst:25
msgid ""
"The :ref:`Makefile Generators` and the :generator:`Ninja` generator learned "
"to add compiler launcher tools along with the compiler for the ``Fortran`` "
"language (``C``, ``CXX``, and ``CUDA`` were supported previously). See the :"
"variable:`CMAKE_<LANG>_COMPILER_LAUNCHER` variable and :prop_tgt:"
"`<LANG>_COMPILER_LAUNCHER` target property for details."
msgstr ""

#: ../../../release/3.11.rst:31
msgid ""
":ref:`Visual Studio Generators` learned to support the ``COMPILE_LANGUAGE`` :"
"manual:`generator expression <cmake-generator-expressions(7)>` in target-"
"wide :prop_tgt:`COMPILE_DEFINITIONS`, :prop_tgt:`INCLUDE_DIRECTORIES`, :"
"prop_tgt:`COMPILE_OPTIONS`, and :command:`file(GENERATE)`.  See generator "
"expression documentation for caveats."
msgstr ""

#: ../../../release/3.11.rst:38
msgid ""
"The :generator:`Xcode` generator learned to support the "
"``COMPILE_LANGUAGE`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` in target-wide :prop_tgt:`COMPILE_DEFINITIONS` and :"
"prop_tgt:`INCLUDE_DIRECTORIES`.  It previously supported only :prop_tgt:"
"`COMPILE_OPTIONS` and :command:`file(GENERATE)`. See generator expression "
"documentation for caveats."
msgstr ""

#: ../../../release/3.11.rst:46
msgid "Commands"
msgstr ""

#: ../../../release/3.11.rst:48
msgid ""
":command:`add_library` and :command:`add_executable` commands can now be "
"called without any sources and will not complain as long as sources are "
"added later via the :command:`target_sources` command."
msgstr ""

#: ../../../release/3.11.rst:52
msgid ""
"The :command:`file(DOWNLOAD)` and :command:`file(UPLOAD)` commands gained "
"``NETRC`` and ``NETRC_FILE`` options to specify use of a ``.netrc`` file."
msgstr ""

#: ../../../release/3.11.rst:56
msgid ""
"The :command:`target_compile_definitions` command learned to set the :"
"prop_tgt:`INTERFACE_COMPILE_DEFINITIONS` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:60
msgid ""
"The :command:`target_compile_features` command learned to set the :prop_tgt:"
"`INTERFACE_COMPILE_FEATURES` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:63
msgid ""
"The :command:`target_compile_options` command learned to set the :prop_tgt:"
"`INTERFACE_COMPILE_OPTIONS` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:66
msgid ""
"The :command:`target_include_directories` command learned to set the :"
"prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:70
msgid ""
"The :command:`target_sources` command learned to set the :prop_tgt:"
"`INTERFACE_SOURCES` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:73
msgid ""
"The :command:`target_link_libraries` command learned to set the :prop_tgt:"
"`INTERFACE_LINK_LIBRARIES` property on :ref:`Imported Targets`."
msgstr ""

#: ../../../release/3.11.rst:77
msgid "Variables"
msgstr ""

#: ../../../release/3.11.rst:79
msgid ""
"A :variable:`CMAKE_GENERATOR_INSTANCE` variable was introduced to hold the "
"selected instance of the generator's corresponding native tools if multiple "
"are available.  This is used by the :generator:`Visual Studio 15 2017` "
"generator to hold the selected instance of Visual Studio persistently."
msgstr ""

#: ../../../release/3.11.rst:85
msgid ""
"A :variable:`CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS` variable was added "
"to enable setting of default permissions for directories created implicitly "
"during installation of files by :command:`install` and :command:"
"`file(INSTALL)`, e.g. during ``make install``."
msgstr ""

#: ../../../release/3.11.rst:90
msgid ""
"A :variable:`CMAKE_JOB_POOLS` variable was added specify a value to use for "
"the :prop_gbl:`JOB_POOLS` property. This enables control over build "
"parallelism with command line configuration parameters when using the Ninja "
"generator."
msgstr ""

#: ../../../release/3.11.rst:95
msgid ""
"The :variable:`CMAKE_NETRC` and :variable:`CMAKE_NETRC_FILE` variables were "
"added to specify use of a ``.netrc`` file by the :command:`file(DOWNLOAD)` "
"and :command:`file(UPLOAD)` commands and the :module:`ExternalProject` "
"module."
msgstr ""

#: ../../../release/3.11.rst:100
msgid ""
"A :variable:`CMAKE_CUDA_SEPARABLE_COMPILATION` variable was added to "
"initialize the :prop_tgt:`CUDA_SEPARABLE_COMPILATION` target property on "
"targets when they are created."
msgstr ""

#: ../../../release/3.11.rst:105
msgid "Properties"
msgstr ""

#: ../../../release/3.11.rst:107
msgid ""
"The :prop_sf:`COMPILE_DEFINITIONS` source file property learned to support :"
"manual:`generator expressions <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.11.rst:110
msgid ""
"A :prop_sf:`COMPILE_OPTIONS` source file property was added to manage list "
"of options to pass to the compiler."
msgstr ""

#: ../../../release/3.11.rst:113
msgid ""
"An :prop_tgt:`IMPORTED_GLOBAL` target property was added to indicate whether "
"an :ref:`IMPORTED target <Imported Targets>` is globally visible. It is "
"automatically set to a true value for targets created with the ``GLOBAL`` "
"option to :command:`add_library` or :command:`add_executable`. Additionally, "
"project code may now *promote* a local imported target to be globally "
"visible by setting this property to ``TRUE``."
msgstr ""

#: ../../../release/3.11.rst:120
msgid ""
"An :prop_sf:`INCLUDE_DIRECTORIES` source file property was added to specify "
"list of preprocessor include file search directories."
msgstr ""

#: ../../../release/3.11.rst:123
msgid ""
"Source file properties :prop_sf:`VS_SHADER_DISABLE_OPTIMIZATIONS` and :"
"prop_sf:`VS_SHADER_ENABLE_DEBUG` have been added to specify more details of "
"``.hlsl`` sources with :ref:`Visual Studio Generators`."
msgstr ""

#: ../../../release/3.11.rst:128
msgid "Modules"
msgstr ""

#: ../../../release/3.11.rst:130
msgid ""
"The :module:`CheckIncludeFiles` module :command:`check_include_files` "
"command gained a ``LANGUAGE`` option to specify whether to check using the "
"``C`` or ``CXX`` compiler."
msgstr ""

#: ../../../release/3.11.rst:134
msgid ""
"The :module:`CMakePackageConfigHelpers` module :command:"
"`write_basic_package_version_file` command learned a new "
"``SameMinorVersion`` mode for the ``COMPATIBILITY`` argument."
msgstr ""

#: ../../../release/3.11.rst:138
msgid ""
"The :module:`ExternalProject` module learned to substitute "
"``<DOWNLOAD_DIR>`` in comments, commands, working directory and byproducts."
msgstr ""

#: ../../../release/3.11.rst:141
msgid ""
"The :module:`ExternalProject` module gained ``NETRC`` and ``NETRC_FILE`` "
"options to specify use of a ``.netrc`` file."
msgstr ""

#: ../../../release/3.11.rst:144
msgid ""
"A new :module:`FetchContent` module was added which supports populating "
"content at configure time using any of the download/update methods supported "
"by :command:`ExternalProject_Add`.  This allows the content to be used "
"immediately during the configure stage, such as with :command:"
"`add_subdirectory`, etc.  Hierarchical project structures are well "
"supported, allowing parent projects to override the content details of child "
"projects and ensuring content is not populated multiple times throughout the "
"whole project tree."
msgstr ""

#: ../../../release/3.11.rst:153
msgid ""
"The :module:`FindBLAS` and :module:`FindLAPACK` modules learned to support "
"`FLAME`_ ``blis`` and ``libflame``."
msgstr ""

#: ../../../release/3.11.rst:156
msgid ""
"The :module:`FindDoxygen` module :command:`doxygen_add_docs` function now "
"supports a new ``DOXYGEN_VERBATIM_VARS`` list variable.  Any ``DOXYGEN_...`` "
"variable contained in that list will bypass the automatic quoting logic, "
"leaving its contents untouched when transferring them to the output "
"``Doxyfile``."
msgstr ""

#: ../../../release/3.11.rst:162
msgid "A :module:`FindIconv` module was added to locate iconv support."
msgstr ""

#: ../../../release/3.11.rst:164
msgid ""
"The :module:`GenerateExportHeader` module ``generate_export_header`` command "
"gained an ``INCLUDE_GUARD_NAME`` option to change the name of the include "
"guard symbol written to the generated export header. Additionally, it now "
"adds a comment after the closing ``#endif`` on the generated export header's "
"include guard."
msgstr ""

#: ../../../release/3.11.rst:170
msgid ""
"The :module:`UseJava` module ``add_jar`` command gained a "
"``GENERATE_NATIVE_HEADERS`` option to generate native header files using "
"``javac -h`` for ``javac`` 1.8 or above.  This supersedes ``create_javah``, "
"which no longer works with JDK 1.10 and above due to removal of the "
"``javah`` tool by `JEP 313`_."
msgstr ""

#: ../../../release/3.11.rst:180
msgid "Autogen"
msgstr ""

#: ../../../release/3.11.rst:182
msgid ""
"When using :prop_tgt:`AUTOMOC` or :prop_tgt:`AUTOUIC`, CMake now starts "
"multiple parallel ``moc`` or ``uic`` processes to reduce the build time. A "
"new :variable:`CMAKE_AUTOGEN_PARALLEL` variable and :prop_tgt:"
"`AUTOGEN_PARALLEL` target property may be set to specify the number of "
"parallel ``moc`` or ``uic`` processes to start.  The default is derived from "
"the number of CPUs on the host."
msgstr ""

#: ../../../release/3.11.rst:190
msgid "CTest"
msgstr ""

#: ../../../release/3.11.rst:192
msgid ""
"The :command:`ctest_start` command no longer sets :variable:"
"`CTEST_RUN_CURRENT_SCRIPT` due to issues with scoping if it is called from "
"inside a function. Instead, it sets an internal variable in CTest. However, "
"setting :variable:`CTEST_RUN_CURRENT_SCRIPT` to 0 at the global scope still "
"prevents the script from being re-run at the end."
msgstr ""

#: ../../../release/3.11.rst:199
msgid "CPack"
msgstr ""

#: ../../../release/3.11.rst:201
msgid ":manual:`cpack(1)` gained ``--trace`` and ``--trace-expand`` options."
msgstr ""

#: ../../../release/3.11.rst:203
msgid ""
"The :cpack_gen:`CPack IFW Generator` gained new :variable:"
"`CPACK_IFW_PACKAGE_REMOVE_TARGET_DIR` variable to control if the target "
"directory should not be deleted when uninstalling."
msgstr ""

#: ../../../release/3.11.rst:207
msgid ""
"The :cpack_gen:`CPack RPM Generator` learned to enable enforcing of execute "
"privileges on programs and shared libraries. See :variable:"
"`CPACK_RPM_INSTALL_WITH_EXEC` variable."
msgstr ""

#: ../../../release/3.11.rst:211
msgid ""
"A :variable:`CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS` variable was added "
"which serves the same purpose during packaging (e.g. ``make package``) as "
"the :variable:`CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS` variable serves "
"during installation (e.g. ``make install``)."
msgstr ""

#: ../../../release/3.11.rst:217
msgid "Other"
msgstr ""

#: ../../../release/3.11.rst:219
msgid ""
":ref:`Alias Targets` may now alias :ref:`Imported Targets` that are created "
"with the ``GLOBAL`` option to :command:`add_library`."
msgstr ""

#: ../../../release/3.11.rst:222
msgid ""
":ref:`Interface Libraries` may now have custom properties set on them if "
"they start with either an underscore (``_``) or a lowercase ASCII character. "
"The original intention was to only allow properties which made sense for "
"``INTERFACE`` libraries, but it also blocked usage of custom properties."
msgstr ""

#: ../../../release/3.11.rst:227
msgid ""
"The :manual:`cmake(1)` ``--open <dir>`` command-line option was added to "
"open generated IDE projects like Visual Studio solutions or Xcode projects."
msgstr ""

#: ../../../release/3.11.rst:232
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.11.rst:234
msgid ""
"An explicit deprecation diagnostic was added for policies ``CMP0037`` "
"through ``CMP0054`` (``CMP0036`` and below were already deprecated). The :"
"manual:`cmake-policies(7)` manual explains that the OLD behaviors of all "
"policies are deprecated and that projects should port to the NEW behaviors."
msgstr ""

#: ../../../release/3.11.rst:240
msgid "The ``KDevelop3`` generator has been removed."
msgstr ""

#: ../../../release/3.11.rst:243
msgid "Other Changes"
msgstr ""

#: ../../../release/3.11.rst:245
msgid ""
"Policy :policy:`CMP0037` no longer reserves target names associated with "
"optional features, such as ``test`` and ``package``, unless the "
"corresponding feature is enabled."
msgstr ""

#: ../../../release/3.11.rst:249
msgid ""
"The :module:`FindOpenGL` module now prefers GLVND libraries if available. "
"See policy :policy:`CMP0072`."
msgstr ""

#: ../../../release/3.11.rst:252
msgid ""
"The minimum deployment target set in the :variable:"
"`CMAKE_OSX_DEPLOYMENT_TARGET` variable used to be only applied for macOS "
"regardless of the selected SDK.  It is now properly set for the target "
"platform selected by :variable:`CMAKE_OSX_SYSROOT`. For example, if the "
"sysroot variable specifies an iOS SDK then the value in "
"``CMAKE_OSX_DEPLOYMENT_TARGET`` is interpreted as minimum iOS version."
msgstr ""

#: ../../../release/3.11.rst:260
msgid ""
"The :generator:`Xcode` generator behavior of generating one project file "
"per :command:`project()` command may now be controlled with the :variable:"
"`CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY` variable. This could be useful "
"to speed up the CMake generation step for large projects and to work-around "
"a bug in the ``ZERO_CHECK`` logic."
msgstr ""

#: ../../../release/3.11.rst:266
msgid ""
"Since the ``CMakeCache.txt`` format does not support newlines in values, "
"values containing newlines are now truncated before writing to the file. In "
"addition, a warning comment is written to the cache file, and a warning "
"message is displayed to the user on the console."
msgstr ""

#: ../../../release/3.11.rst:272
msgid "Updates"
msgstr ""

#: ../../../release/3.11.rst:274
msgid "Changes made since CMake 3.11.0 include the following."
msgstr ""

#: ../../../release/3.11.rst:277
msgid "3.11.1"
msgstr ""

#: ../../../release/3.11.rst:279
msgid ""
"The :module:`CheckIncludeFile` module ``check_include_file`` macro, :module:"
"`CheckIncludeFileCXX` module ``check_include_file_cxx`` macro, and :module:"
"`CheckIncludeFiles` module ``check_include_files`` macro were taught to "
"honor the ``CMAKE_REQUIRED_LIBRARIES`` variable in CMake 3.11.0.  This has "
"been reverted due to changing behavior of checks for existing projects.  It "
"may be restored in the future with a policy for compatibility."
msgstr ""

#: ../../../release/3.11.rst:288
msgid "3.11.2"
msgstr ""

#: ../../../release/3.11.rst:290
msgid ""
"Calling :command:`add_library` to create an alias of an imported target that "
"is not globally visible now causes an error again as it did prior to "
"3.11.0.  This diagnostic was accidentally dropped from CMake 3.11.0 and "
"3.11.1 by the change to allow globally visible imported targets to be "
"aliased."
msgstr ""

#: ../../../release/3.11.rst:296
msgid ""
"The :module:`FindQt4` module ``qt4_wrap_cpp``, ``qt4_wrap_ui`` and "
"``qt4_add_resources`` macros now set :prop_sf:`SKIP_AUTOMOC` and :prop_sf:"
"`SKIP_AUTOUIC` on their generated files.  These files never need to be "
"processed by moc or uic, and we must say so explicitly to account for "
"policy :policy:`CMP0071`."
msgstr ""

#: ../../../release/3.11.rst:303
msgid "3.11.3"
msgstr ""

#: ../../../release/3.11.rst:305
msgid ""
"CMake 3.11.0 introduced support for resolving symbolic links on Windows in "
"code paths that typically do so on UNIX.  This has been reverted due to "
"breakage on ``subst`` drives."
msgstr ""
