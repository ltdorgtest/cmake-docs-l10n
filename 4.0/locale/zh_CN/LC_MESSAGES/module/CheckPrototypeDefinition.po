# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckPrototypeDefinition.cmake:6
msgid "CheckPrototypeDefinition"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:8
msgid "Check if a ``C`` function has the expected prototype."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:12
msgid ""
"check_prototype_definition(<function> <prototype> <return> <headers> "
"<variable>)"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:16
msgid "``<function>``"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:17
msgid "The name of the function whose prototype is being checked."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:18
msgid "``<prototype>``"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:19
msgid "The expected prototype of the function, provided as a string."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:20
msgid "``<return>``"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:21
msgid ""
"The return value of the function.  This will be used as a return value in "
"the function definition body of the generated test program to verify that "
"the function's return type matches the expected type."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:24
msgid "``<headers>``"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:25
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header file "
"names required for checking the function prototype."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:27
msgid "``<variable>``"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:28
msgid ""
"The name of the variable to store the check result.  This variable will be "
"created as an internal cache variable."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:31
msgid ""
"This command generates a test program and verifies that it builds without "
"errors.  The generated test program includes specified ``<headers>``, "
"defines a function with given literal ``<prototype>`` and ``<return>`` value "
"and then uses the specified ``<function>``.  The simplified test program can "
"be illustrated as:"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:37
msgid ""
"#include <headers>\n"
"// ...\n"
"<prototype> { return <return>; }\n"
"int main(...) { ...<function>()... }"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:44
msgid ""
"The following variables may be set before calling this function to modify "
"the way the check is run:"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_FLAGS.txt:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_FLAGS.txt:2
msgid ""
"String of additional flags to pass to the compiler. The string must be space-"
"delimited--a :ref:`;-list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS <CMAKE_<LANG>_FLAGS>` and its "
"associated configuration-specific variable are automatically added to the "
"compiler command before the contents of ``CMAKE_REQUIRED_FLAGS``."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_DEFINITIONS.txt:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_DEFINITIONS.txt:2
msgid ""
"A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form "
"``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by "
"``<resultVar>`` will also be added automatically."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_INCLUDES.txt:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_INCLUDES.txt:2
msgid ""
"A :ref:`;-list <CMake Language Lists>` of header search paths to pass to the "
"compiler. These will be the only header search paths used--the contents of "
"the :prop_dir:`INCLUDE_DIRECTORIES` directory property will be ignored."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LINK_OPTIONS.txt:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LINK_OPTIONS.txt:4
msgid ""
"A :ref:`;-list <CMake Language Lists>` of options to add to the link command "
"(see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LIBRARIES.txt:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LIBRARIES.txt:2
msgid ""
"A :ref:`;-list <CMake Language Lists>` of libraries to add to the link "
"command. These can be the name of system libraries or they can be :ref:"
"`Imported Targets <Imported Targets>` (see :command:`try_compile` for "
"further details)."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LINK_DIRECTORIES.txt:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_LINK_DIRECTORIES.txt:4
msgid ""
"A :ref:`;-list <CMake Language Lists>` of libraries search paths to pass to "
"the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/CMAKE_REQUIRED_QUIET.txt:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/CMAKE_REQUIRED_QUIET.txt:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:62
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:64
msgid ""
"Checking if the ``getpwent_r()`` function on Solaris/illumos systems has the "
"expected prototype:"
msgstr ""

#: ../../../../Modules/CheckPrototypeDefinition.cmake:67
msgid ""
"include(CheckPrototypeDefinition)\n"
"\n"
"check_prototype_definition(\n"
"  getpwent_r\n"
"  \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n"
"  \"NULL\"\n"
"  \"unistd.h;pwd.h\"\n"
"  HAVE_SOLARIS_GETPWENT_R\n"
")"
msgstr ""
