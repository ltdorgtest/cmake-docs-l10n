# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2016 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.1.rst:2
msgid "CMake 3.1 Release Notes"
msgstr ""

#: ../../../release/3.1.rst:8
msgid "Changes made since CMake 3.0 include the following."
msgstr ""

#: ../../../release/3.1.rst:11
msgid "Documentation Changes"
msgstr ""

#: ../../../release/3.1.rst:13
msgid "A new :manual:`cmake-compile-features(7)` manual was added."
msgstr ""

#: ../../../release/3.1.rst:16
msgid "New Features"
msgstr ""

#: ../../../release/3.1.rst:19
msgid "Generators"
msgstr ""

#: ../../../release/3.1.rst:21
msgid "The :generator:`Visual Studio 14 2015` generator was added."
msgstr ""

#: ../../../release/3.1.rst:24
msgid "Windows Phone and Windows Store"
msgstr ""

#: ../../../release/3.1.rst:26
msgid ""
"Generators for Visual Studio 11 (2012) and above learned to generate "
"projects for Windows Phone and Windows Store.  One may set the :variable:"
"`CMAKE_SYSTEM_NAME` variable to ``WindowsPhone`` or ``WindowsStore`` on the :"
"manual:`cmake(1)` command-line or in a :variable:`CMAKE_TOOLCHAIN_FILE` to "
"activate these platforms. Also set :variable:`CMAKE_SYSTEM_VERSION` to "
"``8.0`` or ``8.1`` to specify the version of Windows to be targeted."
msgstr ""

#: ../../../release/3.1.rst:35
msgid "NVIDIA Nsight Tegra"
msgstr ""

#: ../../../release/3.1.rst:37
msgid ""
"Generators for Visual Studio 10 (2010) and above learned to generate "
"projects for NVIDIA Nsight Tegra Visual Studio Edition.  One may set the :"
"variable:`CMAKE_SYSTEM_NAME` variable to ``Android`` on the :manual:"
"`cmake(1)` command-line or in a :variable:`CMAKE_TOOLCHAIN_FILE` to activate "
"this platform."
msgstr ""

#: ../../../release/3.1.rst:44
msgid "Syntax"
msgstr ""

#: ../../../release/3.1.rst:46
msgid ""
"The :manual:`cmake-language(7)` syntax for :ref:`Variable References` and :"
"ref:`Escape Sequences` was simplified in order to allow a much faster "
"implementation.  See policy :policy:`CMP0053`."
msgstr ""

#: ../../../release/3.1.rst:50
msgid ""
"The :command:`if` command no longer automatically dereferences variables "
"named in quoted or bracket arguments.  See policy :policy:`CMP0054`."
msgstr ""

#: ../../../release/3.1.rst:55
msgid "Commands"
msgstr ""

#: ../../../release/3.1.rst:57
msgid ""
"The :command:`add_custom_command` command learned to interpret :manual:"
"`cmake-generator-expressions(7)` in arguments to ``DEPENDS``."
msgstr ""

#: ../../../release/3.1.rst:60
msgid ""
"The :command:`export(PACKAGE)` command learned to check the :variable:"
"`CMAKE_EXPORT_NO_PACKAGE_REGISTRY` variable to skip exporting the package."
msgstr ""

#: ../../../release/3.1.rst:64
msgid ""
"The :command:`file(STRINGS)` command gained a new ``ENCODING`` option to "
"enable extraction of ``UTF-8`` strings."
msgstr ""

#: ../../../release/3.1.rst:67
msgid ""
"The :command:`find_package` command learned to check the :variable:"
"`CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY` and :variable:"
"`CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY` variables to skip searching "
"the package registries."
msgstr ""

#: ../../../release/3.1.rst:72
msgid ""
"The :command:`get_property` command learned a new ``INSTALL`` scope for "
"properties."
msgstr ""

#: ../../../release/3.1.rst:75
msgid ""
"The :command:`install` command learned a ``MESSAGE_NEVER`` option to avoid "
"output during installation."
msgstr ""

#: ../../../release/3.1.rst:78
msgid ""
"The :command:`set_property` command learned a new ``INSTALL`` scope for "
"properties."
msgstr ""

#: ../../../release/3.1.rst:81
msgid ""
"The :command:`string` command learned a new ``GENEX_STRIP`` subcommand which "
"removes :manual:`generator expression <cmake-generator-expressions(7)>`."
msgstr ""

#: ../../../release/3.1.rst:85
msgid ""
"The :command:`string` command learned a new ``UUID`` subcommand to generate "
"a univerally unique identifier."
msgstr ""

#: ../../../release/3.1.rst:88
msgid ""
"New :command:`target_compile_features` command allows populating the :"
"prop_tgt:`COMPILE_FEATURES` target property, just like any other build "
"variable."
msgstr ""

#: ../../../release/3.1.rst:92
msgid ""
"The :command:`target_sources` command was added to add to the :prop_tgt:"
"`SOURCES` target property."
msgstr ""

#: ../../../release/3.1.rst:96
msgid "Variables"
msgstr ""

#: ../../../release/3.1.rst:98
msgid ""
"The Visual Studio generators for versions 8 (2005) and above learned to read "
"the target platform name from a new :variable:`CMAKE_GENERATOR_PLATFORM` "
"variable when it is not specified as part of the generator name.  The "
"platform name may be specified on the :manual:`cmake(1)` command line with "
"the ``-A`` option, e.g. ``-G \"Visual Studio 12 2013\" -A x64``."
msgstr ""

#: ../../../release/3.1.rst:105
msgid ""
"The :variable:`CMAKE_GENERATOR_TOOLSET` variable may now be initialized in a "
"toolchain file specified by the :variable:`CMAKE_TOOLCHAIN_FILE` variable.  "
"This is useful when cross-compiling with the Xcode or Visual Studio "
"generators."
msgstr ""

#: ../../../release/3.1.rst:111
msgid ""
"The :variable:`CMAKE_INSTALL_MESSAGE` variable was introduced to optionally "
"reduce output installation."
msgstr ""

#: ../../../release/3.1.rst:115
msgid "Properties"
msgstr ""

#: ../../../release/3.1.rst:117
msgid ""
"New :prop_tgt:`CXX_STANDARD` and :prop_tgt:`CXX_EXTENSIONS` target "
"properties may specify values which CMake uses to compute required compile "
"options such as ``-std=c++11`` or ``-std=gnu++11``. The :variable:"
"`CMAKE_CXX_STANDARD` and :variable:`CMAKE_CXX_EXTENSIONS` variables may be "
"set to initialize the target properties."
msgstr ""

#: ../../../release/3.1.rst:123
msgid ""
"New :prop_tgt:`C_STANDARD` and :prop_tgt:`C_EXTENSIONS` target properties "
"may specify values which CMake uses to compute required compile options such "
"as ``-std=c11`` or ``-std=gnu11``. The :variable:`CMAKE_C_STANDARD` and :"
"variable:`CMAKE_C_EXTENSIONS` variables may be set to initialize the target "
"properties."
msgstr ""

#: ../../../release/3.1.rst:129
msgid ""
"New :prop_tgt:`COMPILE_FEATURES` target property may contain a list of "
"features required to compile a target.  CMake uses this information to "
"ensure that the compiler in use is capable of building the target, and to "
"add any necessary compile flags to support language features."
msgstr ""

#: ../../../release/3.1.rst:135
msgid ""
"New :prop_tgt:`COMPILE_PDB_NAME` and :prop_tgt:"
"`COMPILE_PDB_OUTPUT_DIRECTORY` target properties were introduced to specify "
"the MSVC compiler program database file location (``cl /Fd``).  This "
"complements the existing :prop_tgt:`PDB_NAME` and :prop_tgt:"
"`PDB_OUTPUT_DIRECTORY` target properties that specify the linker program "
"database file location (``link /pdb``)."
msgstr ""

#: ../../../release/3.1.rst:143
msgid ""
"The :prop_tgt:`INTERFACE_LINK_LIBRARIES` target property now supports a "
"``$<LINK_ONLY:...>`` :manual:`generator expression <cmake-generator-"
"expressions(7)>`."
msgstr ""

#: ../../../release/3.1.rst:147
msgid ""
"A new :prop_tgt:`INTERFACE_SOURCES` target property was introduced. This is "
"consumed by dependent targets, which compile and link the listed sources."
msgstr ""

#: ../../../release/3.1.rst:150
msgid ""
"The :prop_tgt:`SOURCES` target property now contains :manual:`generator "
"expression <cmake-generator-expressions(7)>` such as ``TARGET_OBJECTS`` when "
"read at configure time, if policy :policy:`CMP0051` is ``NEW``."
msgstr ""

#: ../../../release/3.1.rst:155
msgid ""
"The :prop_tgt:`SOURCES` target property now generally supports :manual:"
"`generator expression <cmake-generator-expressions(7)>`.  The generator "
"expressions may be used in the :command:`add_library` and :command:"
"`add_executable` commands."
msgstr ""

#: ../../../release/3.1.rst:160
msgid ""
"It is now possible to write and append to the :prop_tgt:`SOURCES` target "
"property.  The :variable:`CMAKE_DEBUG_TARGET_PROPERTIES` variable may be "
"used to trace the origin of sources."
msgstr ""

#: ../../../release/3.1.rst:164
msgid ""
"A :prop_sf:`VS_DEPLOYMENT_CONTENT` source file property was added to tell "
"the Visual Studio generators to mark content for deployment in Windows Phone "
"and Windows Store projects."
msgstr ""

#: ../../../release/3.1.rst:168
msgid ""
"A :prop_sf:`VS_DEPLOYMENT_LOCATION` source file property was added to tell "
"the Visual Studio generators the relative location of content marked for "
"deployment in Windows Phone and Windows Store projects."
msgstr ""

#: ../../../release/3.1.rst:172
msgid ""
"The :prop_tgt:`VS_WINRT_COMPONENT` target property was created to tell "
"Visual Studio generators to compile a shared library as a Windows Runtime "
"(WinRT) component."
msgstr ""

#: ../../../release/3.1.rst:176
msgid ""
"The :generator:`Xcode` generator learned to check source file properties  :"
"prop_sf:`XCODE_EXPLICIT_FILE_TYPE` and :prop_sf:`XCODE_LAST_KNOWN_FILE_TYPE` "
"for a custom Xcode file reference type."
msgstr ""

#: ../../../release/3.1.rst:182
msgid "Modules"
msgstr ""

#: ../../../release/3.1.rst:184
msgid ""
"The :module:`BundleUtilities` module learned to resolve and replace "
"``@rpath`` placeholders on OS X to correctly bundle applications using them."
msgstr ""

#: ../../../release/3.1.rst:188
msgid ""
"The :module:`CMakePackageConfigHelpers` module :command:"
"`configure_package_config_file` command learned a new ``INSTALL_PREFIX`` "
"option to generate package configuration files meant for a prefix other "
"than :variable:`CMAKE_INSTALL_PREFIX`."
msgstr ""

#: ../../../release/3.1.rst:193
msgid ""
"The :module:`CheckFortranSourceCompiles` module was added to provide a "
"``CHECK_Fortran_SOURCE_COMPILES`` macro."
msgstr ""

#: ../../../release/3.1.rst:196
msgid ""
"The :module:`ExternalData` module learned to tolerate a ``DATA{}`` reference "
"to a missing source file with a warning instead of rejecting it with an "
"error.  This helps developers write new ``DATA{}`` references to test "
"reference outputs that have not yet been created."
msgstr ""

#: ../../../release/3.1.rst:202
msgid ""
"The :module:`ExternalProject` module learned to support lzma-compressed "
"source tarballs with ``.7z``, ``.tar.xz``, and ``.txz`` extensions."
msgstr ""

#: ../../../release/3.1.rst:205
msgid ""
"The :module:`ExternalProject` module ``ExternalProject_Add`` command learned "
"a new ``BUILD_ALWAYS`` option to cause the external project build step to "
"run every time the host project is built."
msgstr ""

#: ../../../release/3.1.rst:209
msgid ""
"The :module:`ExternalProject` module ``ExternalProject_Add`` command learned "
"a new ``EXCLUDE_FROM_ALL`` option to cause the external project target to "
"have the :prop_tgt:`EXCLUDE_FROM_ALL` target property set."
msgstr ""

#: ../../../release/3.1.rst:214
msgid ""
"The :module:`ExternalProject` module ``ExternalProject_Add_Step`` command "
"learned a new ``EXCLUDE_FROM_MAIN`` option to cause the step to not be a "
"direct dependency of the main external project target."
msgstr ""

#: ../../../release/3.1.rst:218
msgid ""
"The :module:`ExternalProject` module ``ExternalProject_Add`` command learned "
"a new ``DOWNLOAD_NO_PROGRESS`` option to disable progress output while "
"downloading the source tarball."
msgstr ""

#: ../../../release/3.1.rst:222
msgid ""
"The :module:`FeatureSummary` module ``feature_summary`` API learned to "
"accept multiple values for the ``WHAT`` option and combine them "
"appropriately."
msgstr ""

#: ../../../release/3.1.rst:226
msgid ""
"The :module:`FindCUDA` module learned to support ``fatbin`` and ``cubin`` "
"modules."
msgstr ""

#: ../../../release/3.1.rst:229
msgid ""
"The :module:`FindGTest` module ``gtest_add_tests`` macro learned a new "
"``AUTO`` option to automatically read the :prop_tgt:`SOURCES` target "
"property of the test executable and scan the source files for tests to be "
"added."
msgstr ""

#: ../../../release/3.1.rst:234
msgid "The :module:`FindGLEW` module now provides imported targets."
msgstr ""

#: ../../../release/3.1.rst:236
msgid "The :module:`FindGLUT` module now provides imported targets."
msgstr ""

#: ../../../release/3.1.rst:238
msgid ""
"The :module:`FindHg` module gained a new ``Hg_WC_INFO`` macro to help run "
"``hg`` to extract information about a Mercurial work copy."
msgstr ""

#: ../../../release/3.1.rst:241
msgid "The :module:`FindOpenCL` module was introduced."
msgstr ""

#: ../../../release/3.1.rst:243
msgid "The :module:`FindOpenMP` module learned to support Fortran."
msgstr ""

#: ../../../release/3.1.rst:245
msgid ""
"The :module:`FindPkgConfig` module learned to use the ``PKG_CONFIG`` "
"environment variable value as the ``pkg-config`` executable, if set."
msgstr ""

#: ../../../release/3.1.rst:248
msgid "The :module:`FindXercesC` module was introduced."
msgstr ""

#: ../../../release/3.1.rst:250
msgid "The :module:`FindZLIB` module now provides imported targets."
msgstr ""

#: ../../../release/3.1.rst:252
msgid ""
"The :module:`GenerateExportHeader` module ``generate_export_header`` "
"function learned to allow use with :ref:`Object Libraries`."
msgstr ""

#: ../../../release/3.1.rst:255
msgid ""
"The :module:`InstallRequiredSystemLibraries` module gained a new "
"``CMAKE_INSTALL_OPENMP_LIBRARIES`` option to install MSVC OpenMP runtime "
"libraries."
msgstr ""

#: ../../../release/3.1.rst:259
msgid ""
"The :module:`UseSWIG` module learned to detect the module name from ``.i`` "
"source files if possible to avoid the need to set the ``SWIG_MODULE_NAME`` "
"source file property explicitly."
msgstr ""

#: ../../../release/3.1.rst:263
msgid ""
"The :module:`WriteCompilerDetectionHeader` module was added to allow "
"creation of a portable header file for compiler optional feature detection."
msgstr ""

#: ../../../release/3.1.rst:267
msgid "Generator Expressions"
msgstr ""

#: ../../../release/3.1.rst:269
msgid ""
"New ``COMPILE_FEATURES`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` allows setting build properties based on available compiler "
"features."
msgstr ""

#: ../../../release/3.1.rst:274
msgid "CTest"
msgstr ""

#: ../../../release/3.1.rst:276
msgid ""
"The :command:`ctest_coverage` command learned to read variable "
"``CTEST_COVERAGE_EXTRA_FLAGS`` to set ``CoverageExtraFlags``."
msgstr ""

#: ../../../release/3.1.rst:279
msgid ""
"The :command:`ctest_coverage` command learned to support Intel coverage "
"files with the ``codecov`` tool."
msgstr ""

#: ../../../release/3.1.rst:282
msgid ""
"The :command:`ctest_memcheck` command learned to support sanitizer modes, "
"including ``AddressSanitizer``, ``MemorySanitizer``, ``ThreadSanitizer``, "
"and ``UndefinedBehaviorSanitizer``. Options may be set using the new :"
"variable:`CTEST_MEMORYCHECK_SANITIZER_OPTIONS` variable."
msgstr ""

#: ../../../release/3.1.rst:289
msgid "CPack"
msgstr ""

#: ../../../release/3.1.rst:291
msgid ""
":manual:`cpack(1)` gained an ``IFW`` generator to package using Qt Framework "
"Installer tools.  See the :module:`CPackIFW` module."
msgstr ""

#: ../../../release/3.1.rst:294
msgid ""
":manual:`cpack(1)` gained ``7Z`` and ``TXZ`` generators supporting lzma-"
"compressed archives."
msgstr ""

#: ../../../release/3.1.rst:297
msgid ""
"The :module:`CPackDeb` module learned a new :variable:"
"`CPACK_DEBIAN_COMPRESSION_TYPE` variable to set the tarball compression type."
msgstr ""

#: ../../../release/3.1.rst:301
msgid ""
"The :manual:`cpack(1)` ``WiX`` generator learned to support a :prop_inst:"
"`CPACK_WIX_ACL` installed file property to specify an Access Control List."
msgstr ""

#: ../../../release/3.1.rst:306
msgid "Other"
msgstr ""

#: ../../../release/3.1.rst:308
msgid "The :manual:`cmake(1)` ``-E`` option learned a new ``env`` command."
msgstr ""

#: ../../../release/3.1.rst:310
msgid ""
"The :manual:`cmake(1)` ``-E tar`` command learned to support lzma-compressed "
"files."
msgstr ""

#: ../../../release/3.1.rst:313
msgid ""
":ref:`Object Libraries` may now have extra sources that do not compile to "
"object files so long as they would not affect linking of a normal library (e."
"g. ``.dat`` is okay but not ``.def``)."
msgstr ""

#: ../../../release/3.1.rst:317
msgid ""
"Visual Studio generators for VS 8 and later learned to support the "
"``ASM_MASM`` language."
msgstr ""

#: ../../../release/3.1.rst:320
msgid ""
"The Visual Studio generators learned to treat ``.hlsl`` source files as High "
"Level Shading Language sources (using ``FXCompile`` in ``.vcxproj`` files).  "
"Source file properties :prop_sf:`VS_SHADER_TYPE`, :prop_sf:"
"`VS_SHADER_MODEL`, and :prop_sf:`VS_SHADER_ENTRYPOINT` were added added to "
"specify the shader type, model, and entry point name."
msgstr ""

#: ../../../release/3.1.rst:328
msgid "New Diagnostics"
msgstr ""

#: ../../../release/3.1.rst:330
msgid ""
"Policy :policy:`CMP0052` introduced to control directories in the :prop_tgt:"
"`INTERFACE_INCLUDE_DIRECTORIES` of exported targets."
msgstr ""

#: ../../../release/3.1.rst:334
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.1.rst:336
msgid ""
"In CMake 3.0 the :command:`target_link_libraries` command accidentally began "
"allowing unquoted arguments to use :manual:`generator expressions <cmake-"
"generator-expressions(7)>` containing a (``;`` separated) list within them.  "
"For example::"
msgstr ""

#: ../../../release/3.1.rst:341
msgid ""
"set(libs B C)\n"
"target_link_libraries(A PUBLIC $<BUILD_INTERFACE:${libs}>)"
msgstr ""

#: ../../../release/3.1.rst:344
msgid "This is equivalent to writing::"
msgstr ""

#: ../../../release/3.1.rst:346
msgid "target_link_libraries(A PUBLIC $<BUILD_INTERFACE:B C>)"
msgstr ""

#: ../../../release/3.1.rst:348
msgid ""
"and was never intended to work.  It did not work in CMake 2.8.12. Such "
"generator expressions should be in quoted arguments::"
msgstr ""

#: ../../../release/3.1.rst:351
msgid ""
"set(libs B C)\n"
"target_link_libraries(A PUBLIC \"$<BUILD_INTERFACE:${libs}>\")"
msgstr ""

#: ../../../release/3.1.rst:354
msgid "CMake 3.1 again requires the quotes for this to work correctly."
msgstr ""

#: ../../../release/3.1.rst:356
msgid ""
"Prior to CMake 3.1 the Makefile generators did not escape ``#`` correctly "
"inside make variable assignments used in generated makefiles, causing them "
"to be treated as comments.  This made code like::"
msgstr ""

#: ../../../release/3.1.rst:361
msgid "add_compile_options(-Wno-#pragma-messages)"
msgstr ""

#: ../../../release/3.1.rst:363
msgid ""
"not work in Makefile generators, but work in other generators. Now it is "
"escaped correctly, making the behavior consistent across generators.  "
"However, some projects may have tried to workaround the original bug with "
"code like::"
msgstr ""

#: ../../../release/3.1.rst:368
msgid "set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-\\\\#pragma-messages\")"
msgstr ""

#: ../../../release/3.1.rst:370
msgid ""
"This added the needed escape for Makefile generators but also caused other "
"generators to pass ``-Wno-\\#pragma-messages`` to the shell, which would "
"work only in POSIX shells. Unfortunately the escaping fix could not be made "
"in a compatible way so this platform- and generator-specific workaround no "
"longer works.  Project code may test the :variable:`CMAKE_VERSION` variable "
"value to make the workaround version-specific too."
msgstr ""

#: ../../../release/3.1.rst:378
msgid ""
"Callbacks established by the :command:`variable_watch` command will no "
"longer receive the ``ALLOWED_UNKNOWN_READ_ACCESS`` access type when the "
"undocumented ``CMAKE_ALLOW_UNKNOWN_VARIABLE_READ_ACCESS`` variable is set.  "
"Uninitialized variable accesses will always be reported as "
"``UNKNOWN_READ_ACCESS``."
msgstr ""

#: ../../../release/3.1.rst:384
msgid ""
"The :module:`CMakeDetermineVSServicePack` module now warns that it is "
"deprecated and should not longer be used.  Use the :variable:"
"`CMAKE_<LANG>_COMPILER_VERSION` variable instead."
msgstr ""

#: ../../../release/3.1.rst:388
msgid ""
"The :module:`FindITK` module has been removed altogether. It was a thin-"
"wrapper around ``find_package(ITK ... NO_MODULE)``. This produces much "
"clearer error messages when ITK is not found."
msgstr ""

#: ../../../release/3.1.rst:392
msgid ""
"The :module:`FindVTK` module has been removed altogether. It was a thin-"
"wrapper around ``find_package(VTK ... NO_MODULE)``. This produces much "
"clearer error messages when VTK is not found."
msgstr ""

#: ../../../release/3.1.rst:396
msgid ""
"The module also provided compatibility support for finding VTK 4.0. This "
"capability has been dropped."
msgstr ""

#: ../../../release/3.1.rst:400
msgid "Other Changes"
msgstr ""

#: ../../../release/3.1.rst:402
msgid ""
"The :manual:`cmake-gui(1)` learned to capture output from child processes "
"started by the :command:`execute_process` command and display it in the "
"output window."
msgstr ""

#: ../../../release/3.1.rst:406
msgid ""
"The :manual:`cmake-language(7)` internal implementation of generator "
"expression and list expansion parsers have been optimized and shows non-"
"trivial speedup on large projects."
msgstr ""

#: ../../../release/3.1.rst:410
msgid ""
"The Makefile generators learned to use response files with GNU tools on "
"Windows to pass library directories and names to the linker."
msgstr ""

#: ../../../release/3.1.rst:413
msgid ""
"When generating linker command-lines, CMake now avoids repeating items "
"corresponding to SHARED library targets."
msgstr ""

#: ../../../release/3.1.rst:416
msgid ""
"Support for the Open Watcom compiler has been overhauled. The :variable:"
"`CMAKE_<LANG>_COMPILER_ID` is now ``OpenWatcom``, and the :variable:"
"`CMAKE_<LANG>_COMPILER_VERSION` now uses the Open Watcom external version "
"numbering.  The external version numbers are lower than the internal version "
"number by 11."
msgstr ""

#: ../../../release/3.1.rst:423
msgid ""
"The ``cmake-mode.el`` major Emacs editing mode no longer treats ``_`` as "
"part of words, making it more consistent with other major modes."
msgstr ""
