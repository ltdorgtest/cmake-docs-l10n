# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.26\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0027.rst:2
msgid "CMP0027"
msgstr ""

#: ../../../policy/CMP0027.rst:4
msgid "Conditionally linked imported targets with missing include directories."
msgstr ""

#: ../../../policy/CMP0027.rst:6
msgid ""
"CMake 2.8.11 introduced introduced the concept of :prop_tgt:"
"`INTERFACE_INCLUDE_DIRECTORIES`, and a check at cmake time that the entries "
"in the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` of an ``IMPORTED`` target "
"actually exist.  CMake 2.8.11 also introduced generator expression support "
"in the :command:`target_link_libraries` command.  However, if an imported "
"target is linked as a result of a generator expression evaluation, the "
"entries in the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` of that target were "
"not checked for existence as they should be."
msgstr ""

#: ../../../policy/CMP0027.rst:15
msgid ""
"The ``OLD`` behavior of this policy is to report a warning if an entry in "
"the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` of a generator-expression "
"conditionally linked ``IMPORTED`` target does not exist."
msgstr ""

#: ../../../policy/CMP0027.rst:19
msgid ""
"The ``NEW`` behavior of this policy is to report an error if an entry in "
"the :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` of a generator-expression "
"conditionally linked ``IMPORTED`` target does not exist."
msgstr ""

#: ../../../policy/CMP0027.rst:23
msgid ""
"This policy was introduced in CMake version 3.0.  CMake version |release| "
"warns when the policy is not set and uses ``OLD`` behavior.  Use the :"
"command:`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
