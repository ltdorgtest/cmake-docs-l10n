# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckCXXSourceRuns.cmake:6
msgid "CheckCXXSourceRuns"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:8
msgid ""
"Check if given C++ source compiles and links into an executable and can "
"subsequently be run."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:13
msgid "check_cxx_source_runs(<code> <resultVar>)"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:17
msgid ""
"Check that the source supplied in ``<code>`` can be compiled as a C++ source "
"file, linked as an executable and then run. The ``<code>`` must contain at "
"least a ``main()`` function. If the ``<code>`` could be built and run "
"successfully, the internal cache variable specified by ``<resultVar>`` will "
"be set to 1, otherwise it will be set to an value that evaluates to boolean "
"false (e.g. an empty string or an error message)."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:24
msgid ""
"The underlying check is performed by the :command:`try_run` command. The "
"compile and link commands can be influenced by setting any of the following "
"variables prior to calling ``check_cxx_source_runs()``:"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:32
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:29
msgid ""
"Additional flags to pass to the compiler. Note that the contents of :"
"variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated "
"configuration-specific variable are automatically added to the compiler "
"command before the contents of ``CMAKE_REQUIRED_FLAGS``."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:37
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:35
msgid ""
"A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form "
"``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by "
"``<resultVar>`` will also be added automatically."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:43
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:40
msgid ""
"A :ref:`;-list <CMake Language Lists>` of header search paths to pass to the "
"compiler. These will be the only header search paths used by ``try_run()``, "
"i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:47
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:46
msgid ""
"A :ref:`;-list <CMake Language Lists>` of options to add to the link command "
"(see :command:`try_run` for further details)."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:53
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:50
msgid ""
"A :ref:`;-list <CMake Language Lists>` of libraries to add to the link "
"command. These can be the name of system libraries or they can be :ref:"
"`Imported Targets <Imported Targets>` (see :command:`try_run` for further "
"details)."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:57
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:56
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../../Modules/CheckCXXSourceRuns.cmake:59
msgid ""
"The check is only performed once, with the result cached in the variable "
"named by ``<resultVar>``. Every subsequent CMake run will re-use this cached "
"value rather than performing the check again, even if the ``<code>`` "
"changes. In order to force the check to be re-evaluated, the variable named "
"by ``<resultVar>`` must be manually removed from the cache."
msgstr ""
