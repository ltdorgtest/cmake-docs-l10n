# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/set.rst:2
msgid "set"
msgstr ""

#: ../../../command/set.rst:4
msgid ""
"Set a normal, cache, or environment variable to a given value. See the :ref:"
"`cmake-language(7) variables <CMake Language Variables>` documentation for "
"the scopes and interaction of normal variables and cache entries."
msgstr ""

#: ../../../command/set.rst:9
msgid ""
"Signatures of this command that specify a ``<value>...`` placeholder expect "
"zero or more arguments.  Multiple arguments will be joined as a :ref:"
"`semicolon-separated list <CMake Language Lists>` to form the actual "
"variable value to be set.  Zero arguments will cause normal variables to be "
"unset.  See the :command:`unset` command to unset variables explicitly."
msgstr ""

#: ../../../command/set.rst:16
msgid "Set Normal Variable"
msgstr ""

#: ../../../command/set.rst:18
msgid "set(<variable> <value>... [PARENT_SCOPE])"
msgstr ""

#: ../../../command/set.rst:22
msgid ""
"Sets the given ``<variable>`` in the current function or directory scope."
msgstr ""

#: ../../../command/set.rst:24
msgid ""
"If the ``PARENT_SCOPE`` option is given the variable will be set in the "
"scope above the current scope.  Each new directory or function creates a new "
"scope.  This command will set the value of a variable into the parent "
"directory or calling function (whichever is applicable to the case at hand). "
"The previous state of the variable's value stays the same in the current "
"scope (e.g., if it was undefined before, it is still undefined and if it had "
"a value, it is still that value)."
msgstr ""

#: ../../../command/set.rst:33
msgid "Set Cache Entry"
msgstr ""

#: ../../../command/set.rst:35
msgid "set(<variable> <value>... CACHE <type> <docstring> [FORCE])"
msgstr ""

#: ../../../command/set.rst:39
msgid ""
"Sets the given cache ``<variable>`` (cache entry).  Since cache entries are "
"meant to provide user-settable values this does not overwrite existing cache "
"entries by default.  Use the ``FORCE`` option to overwrite existing entries."
msgstr ""

#: ../../../command/set.rst:44
msgid "The ``<type>`` must be specified as one of:"
msgstr ""

#: ../../../command/set.rst:47
msgid "``BOOL``"
msgstr ""

#: ../../../command/set.rst:47
msgid "Boolean ``ON/OFF`` value.  :manual:`cmake-gui(1)` offers a checkbox."
msgstr ""

#: ../../../command/set.rst:50
msgid "``FILEPATH``"
msgstr ""

#: ../../../command/set.rst:50
msgid "Path to a file on disk.  :manual:`cmake-gui(1)` offers a file dialog."
msgstr ""

#: ../../../command/set.rst:53
msgid "``PATH``"
msgstr ""

#: ../../../command/set.rst:53
msgid ""
"Path to a directory on disk.  :manual:`cmake-gui(1)` offers a file dialog."
msgstr ""

#: ../../../command/set.rst:58
msgid "``STRING``"
msgstr ""

#: ../../../command/set.rst:56
msgid ""
"A line of text.  :manual:`cmake-gui(1)` offers a text field or a drop-down "
"selection if the :prop_cache:`STRINGS` cache entry property is set."
msgstr ""

#: ../../../command/set.rst:63
msgid "``INTERNAL``"
msgstr ""

#: ../../../command/set.rst:61
msgid ""
"A line of text.  :manual:`cmake-gui(1)` does not show internal entries. They "
"may be used to store variables persistently across runs. Use of this type "
"implies ``FORCE``."
msgstr ""

#: ../../../command/set.rst:65
msgid ""
"The ``<docstring>`` must be specified as a line of text providing a quick "
"summary of the option for presentation to :manual:`cmake-gui(1)` users."
msgstr ""

#: ../../../command/set.rst:69
msgid ""
"If the cache entry does not exist prior to the call or the ``FORCE`` option "
"is given then the cache entry will be set to the given value. Furthermore, "
"any normal variable binding in the current scope will be removed to expose "
"the newly cached value to any immediately following evaluation."
msgstr ""

#: ../../../command/set.rst:75
msgid ""
"It is possible for the cache entry to exist prior to the call but have no "
"type set if it was created on the :manual:`cmake(1)` command line by a user "
"through the ``-D<var>=<value>`` option without specifying a type.  In this "
"case the ``set`` command will add the type.  Furthermore, if the ``<type>`` "
"is ``PATH`` or ``FILEPATH`` and the ``<value>`` provided on the command line "
"is a relative path, then the ``set`` command will treat the path as relative "
"to the current working directory and convert it to an absolute path."
msgstr ""

#: ../../../command/set.rst:85
msgid "Set Environment Variable"
msgstr ""

#: ../../../command/set.rst:87
msgid "set(ENV{<variable>} [<value>])"
msgstr ""

#: ../../../command/set.rst:91
msgid ""
"Sets an :manual:`Environment Variable <cmake-env-variables(7)>` to the given "
"value. Subsequent calls of ``$ENV{<variable>}`` will return this new value."
msgstr ""

#: ../../../command/set.rst:95
msgid ""
"This command affects only the current CMake process, not the process from "
"which CMake was called, nor the system environment at large, nor the "
"environment of subsequent build or test processes."
msgstr ""

#: ../../../command/set.rst:99
msgid ""
"If no argument is given after ``ENV{<variable>}`` or if ``<value>`` is an "
"empty string, then this command will clear any existing value of the "
"environment variable."
msgstr ""

#: ../../../command/set.rst:103
msgid ""
"Arguments after ``<value>`` are ignored. If extra arguments are found, then "
"an author warning is issued."
msgstr ""
