# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/find_library.rst:2
msgid "find_library"
msgstr ""

#: ../../../command/FIND_XXX.txt:1
msgid "A short-hand signature is:"
msgstr ""

#: ../../../command/FIND_XXX.txt:43
msgid "|FIND_XXX| (<VAR> name1 [path1 path2 ...])"
msgstr ""

#: ../../../command/FIND_XXX.txt:7
msgid "The general signature is:"
msgstr ""

#: ../../../command/FIND_XXX.txt:49
msgid ""
"|FIND_XXX| (\n"
"          <VAR>\n"
"          name | |NAMES|\n"
"          [HINTS path1 [path2 ... ENV var]]\n"
"          [PATHS path1 [path2 ... ENV var]]\n"
"          [PATH_SUFFIXES suffix1 [suffix2 ...]]\n"
"          [DOC \"cache documentation string\"]\n"
"          [REQUIRED]\n"
"          [NO_DEFAULT_PATH]\n"
"          [NO_PACKAGE_ROOT_PATH]\n"
"          [NO_CMAKE_PATH]\n"
"          [NO_CMAKE_ENVIRONMENT_PATH]\n"
"          [NO_SYSTEM_ENVIRONMENT_PATH]\n"
"          [NO_CMAKE_SYSTEM_PATH]\n"
"          [CMAKE_FIND_ROOT_PATH_BOTH |\n"
"           ONLY_CMAKE_FIND_ROOT_PATH |\n"
"           NO_CMAKE_FIND_ROOT_PATH]\n"
"         )"
msgstr ""

#: ../../../command/FIND_XXX.txt:30
msgid ""
"This command is used to find a |SEARCH_XXX_DESC|. A cache entry named by "
"``<VAR>`` is created to store the result of this command. If the |"
"SEARCH_XXX| is found the result is stored in the variable and the search "
"will not be repeated unless the variable is cleared. If nothing is found, "
"the result will be ``<VAR>-NOTFOUND``. The ``REQUIRED`` option stops "
"processing with an error message if nothing is found, otherwise the search "
"will be attempted again the next time |FIND_XXX| is invoked with the same "
"variable."
msgstr ""

#: ../../../command/FIND_XXX.txt:40
msgid "Options include:"
msgstr ""

#: ../../../command/FIND_XXX.txt:48
msgid "``NAMES``"
msgstr ""

#: ../../../command/FIND_XXX.txt:43
msgid "Specify one or more possible names for the |SEARCH_XXX|."
msgstr ""

#: ../../../command/FIND_XXX.txt:45
msgid ""
"When using this to specify names with and without a version suffix, we "
"recommend specifying the unversioned name first so that locally-built "
"packages can be found before those provided by distributions."
msgstr ""

#: ../../../command/FIND_XXX.txt:53
msgid "``HINTS``, ``PATHS``"
msgstr ""

#: ../../../command/FIND_XXX.txt:51
msgid ""
"Specify directories to search in addition to the default locations. The "
"``ENV var`` sub-option reads paths from a system environment variable."
msgstr ""

#: ../../../command/FIND_XXX.txt:57
msgid "``PATH_SUFFIXES``"
msgstr ""

#: ../../../command/FIND_XXX.txt:56
msgid ""
"Specify additional subdirectories to check below each directory location "
"otherwise considered."
msgstr ""

#: ../../../command/FIND_XXX.txt:60
msgid "``DOC``"
msgstr ""

#: ../../../command/FIND_XXX.txt:60
msgid "Specify the documentation string for the ``<VAR>`` cache entry."
msgstr ""

#: ../../../command/FIND_XXX.txt:63
msgid "``REQUIRED``"
msgstr ""

#: ../../../command/FIND_XXX.txt:63
msgid "Stop processing with an error message if nothing is found."
msgstr ""

#: ../../../command/FIND_XXX.txt:65
msgid ""
"If ``NO_DEFAULT_PATH`` is specified, then no additional paths are added to "
"the search. If ``NO_DEFAULT_PATH`` is not specified, the search process is "
"as follows:"
msgstr ""

#: ../../../command/FIND_XXX.txt:87
msgid ""
"If called from within a find module or any other script loaded by a call to :"
"command:`find_package(<PackageName>)`, search prefixes unique to the current "
"package being found.  Specifically, look in the :variable:"
"`<PackageName>_ROOT` CMake variable and the :envvar:`<PackageName>_ROOT` "
"environment variable. The package root variables are maintained as a stack, "
"so if called from nested find modules or config packages, root paths from "
"the parent's find module or config package will be searched after paths from "
"the current module or package.  In other words, the search order would be "
"``<CurrentPackage>_ROOT``, ``ENV{<CurrentPackage>_ROOT}``, "
"``<ParentPackage>_ROOT``, ``ENV{<ParentPackage>_ROOT}``, etc. This can be "
"skipped if ``NO_PACKAGE_ROOT_PATH`` is passed or by setting the :variable:"
"`CMAKE_FIND_USE_PACKAGE_ROOT_PATH` to ``FALSE``. See policy :policy:"
"`CMP0074`."
msgstr ""

#: ../../../command/FIND_XXX.txt:102
msgid "|FIND_PACKAGE_ROOT_PREFIX_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:104
msgid ""
"Search paths specified in cmake-specific cache variables. These are intended "
"to be used on the command line with a ``-DVAR=value``. The values are "
"interpreted as :ref:`semicolon-separated lists <CMake Language Lists>`. This "
"can be skipped if ``NO_CMAKE_PATH`` is passed or by setting the :variable:"
"`CMAKE_FIND_USE_CMAKE_PATH` to ``FALSE``."
msgstr ""

#: ../../../command/FIND_XXX.txt:110 ../../../command/FIND_XXX.txt:121
msgid "|CMAKE_PREFIX_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:111 ../../../command/FIND_XXX.txt:122
msgid "|CMAKE_XXX_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:112 ../../../command/FIND_XXX.txt:123
msgid "|CMAKE_XXX_MAC_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:114
msgid ""
"Search paths specified in cmake-specific environment variables. These are "
"intended to be set in the user's shell configuration, and therefore use the "
"host's native path separator (``;`` on Windows and ``:`` on UNIX). This can "
"be skipped if ``NO_CMAKE_ENVIRONMENT_PATH`` is passed or by setting the :"
"variable:`CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH` to ``FALSE``."
msgstr ""

#: ../../../command/FIND_XXX.txt:125
msgid ""
"Search the paths specified by the ``HINTS`` option. These should be paths "
"computed by system introspection, such as a hint provided by the location of "
"another item already found. Hard-coded guesses should be specified with the "
"``PATHS`` option."
msgstr ""

#: ../../../command/FIND_XXX.txt:130
msgid ""
"Search the standard system environment variables. This can be skipped if "
"``NO_SYSTEM_ENVIRONMENT_PATH`` is passed or by setting the :variable:"
"`CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH` to ``FALSE``."
msgstr ""

#: ../../../command/FIND_XXX.txt:134
msgid "|SYSTEM_ENVIRONMENT_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:135
msgid "|SYSTEM_ENVIRONMENT_PATH_WINDOWS_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:137
msgid ""
"Search cmake variables defined in the Platform files for the current "
"system.  This can be skipped if ``NO_CMAKE_SYSTEM_PATH`` is passed or by "
"setting the :variable:`CMAKE_FIND_USE_CMAKE_SYSTEM_PATH` to ``FALSE``."
msgstr ""

#: ../../../command/FIND_XXX.txt:142
msgid "|CMAKE_SYSTEM_PREFIX_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:143
msgid "|CMAKE_SYSTEM_XXX_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:144
msgid "|CMAKE_SYSTEM_XXX_MAC_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:146
msgid ""
"The platform paths that these variables contain are locations that typically "
"include installed software. An example being ``/usr/local`` for UNIX based "
"platforms."
msgstr ""

#: ../../../command/FIND_XXX.txt:150
msgid ""
"Search the paths specified by the PATHS option or in the short-hand version "
"of the command. These are typically hard-coded guesses."
msgstr ""

#: ../../../command/FIND_XXX.txt:156
msgid ""
"On macOS the :variable:`CMAKE_FIND_FRAMEWORK` and :variable:"
"`CMAKE_FIND_APPBUNDLE` variables determine the order of preference between "
"Apple-style and unix-style package components."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:1
msgid ""
"The CMake variable :variable:`CMAKE_FIND_ROOT_PATH` specifies one or more "
"directories to be prepended to all other search directories.  This "
"effectively \"re-roots\" the entire search under given locations. Paths "
"which are descendants of the :variable:`CMAKE_STAGING_PREFIX` are excluded "
"from this re-rooting, because that variable is always a path on the host "
"system. By default the :variable:`CMAKE_FIND_ROOT_PATH` is empty."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:8
msgid ""
"The :variable:`CMAKE_SYSROOT` variable can also be used to specify exactly "
"one directory to use as a prefix.  Setting :variable:`CMAKE_SYSROOT` also "
"has other effects.  See the documentation for that variable for more."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:12
msgid ""
"These variables are especially useful when cross-compiling to point to the "
"root directory of the target environment and CMake will search there too.  "
"By default at first the directories listed in :variable:"
"`CMAKE_FIND_ROOT_PATH` are searched, then the :variable:`CMAKE_SYSROOT` "
"directory is searched, and then the non-rooted directories will be "
"searched.  The default behavior can be adjusted by setting |"
"CMAKE_FIND_ROOT_PATH_MODE_XXX|.  This behavior can be manually overridden on "
"a per-call basis using options:"
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:22
msgid "``CMAKE_FIND_ROOT_PATH_BOTH``"
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:22
msgid "Search in the order described above."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:25
msgid "``NO_CMAKE_FIND_ROOT_PATH``"
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:25
msgid "Do not use the :variable:`CMAKE_FIND_ROOT_PATH` variable."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:29
msgid "``ONLY_CMAKE_FIND_ROOT_PATH``"
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:28
msgid ""
"Search only the re-rooted directories and directories below :variable:"
"`CMAKE_STAGING_PREFIX`."
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:1
msgid ""
"The default search order is designed to be most-specific to least-specific "
"for common use cases. Projects may override the order by simply calling the "
"command multiple times and using the ``NO_*`` options:"
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:240
msgid ""
"|FIND_XXX| (|FIND_ARGS_XXX| PATHS paths... NO_DEFAULT_PATH)\n"
"|FIND_XXX| (|FIND_ARGS_XXX|)"
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:11
msgid ""
"Once one of the calls succeeds the result variable will be set and stored in "
"the cache so that no call will search again."
msgstr ""

#: ../../../command/find_library.rst:38
msgid ""
"When more than one value is given to the ``NAMES`` option this command by "
"default will consider one name at a time and search every directory for it.  "
"The ``NAMES_PER_DIR`` option tells this command to consider one directory at "
"a time and search for all names in it."
msgstr ""

#: ../../../command/find_library.rst:43
msgid ""
"Each library name given to the ``NAMES`` option is first considered as a "
"library file name and then considered with platform-specific prefixes (e.g. "
"``lib``) and suffixes (e.g. ``.so``).  Therefore one may specify library "
"file names such as ``libfoo.a`` directly. This can be used to locate static "
"libraries on UNIX-like systems."
msgstr ""

#: ../../../command/find_library.rst:49
msgid ""
"If the library found is a framework, then ``<VAR>`` will be set to the full "
"path to the framework ``<fullPath>/A.framework``.  When a full path to a "
"framework is used as a library, CMake will use a ``-framework A``, and a ``-"
"F<fullPath>`` to link the framework to the target."
msgstr ""

#: ../../../command/find_library.rst:54
msgid ""
"If the :variable:`CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX` variable is set all "
"search paths will be tested as normal, with the suffix appended, and with "
"all matches of ``lib/`` replaced with "
"``lib${CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX}/``.  This variable overrides "
"the :prop_gbl:`FIND_LIBRARY_USE_LIB32_PATHS`, :prop_gbl:"
"`FIND_LIBRARY_USE_LIBX32_PATHS`, and :prop_gbl:"
"`FIND_LIBRARY_USE_LIB64_PATHS` global properties."
msgstr ""

#: ../../../command/find_library.rst:62
msgid ""
"If the :prop_gbl:`FIND_LIBRARY_USE_LIB32_PATHS` global property is set all "
"search paths will be tested as normal, with ``32/`` appended, and with all "
"matches of ``lib/`` replaced with ``lib32/``.  This property is "
"automatically set for the platforms that are known to need it if at least "
"one of the languages supported by the :command:`project` command is enabled."
msgstr ""

#: ../../../command/find_library.rst:69
msgid ""
"If the :prop_gbl:`FIND_LIBRARY_USE_LIBX32_PATHS` global property is set all "
"search paths will be tested as normal, with ``x32/`` appended, and with all "
"matches of ``lib/`` replaced with ``libx32/``.  This property is "
"automatically set for the platforms that are known to need it if at least "
"one of the languages supported by the :command:`project` command is enabled."
msgstr ""

#: ../../../command/find_library.rst:76
msgid ""
"If the :prop_gbl:`FIND_LIBRARY_USE_LIB64_PATHS` global property is set all "
"search paths will be tested as normal, with ``64/`` appended, and with all "
"matches of ``lib/`` replaced with ``lib64/``.  This property is "
"automatically set for the platforms that are known to need it if at least "
"one of the languages supported by the :command:`project` command is enabled."
msgstr ""
