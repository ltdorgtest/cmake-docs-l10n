# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0091.rst:2
msgid "CMP0091"
msgstr ""

#: ../../../policy/CMP0091.rst:4
msgid "MSVC runtime library flags are selected by an abstraction."
msgstr ""

#: ../../../policy/CMP0091.rst:6
msgid ""
"Compilers targeting the MSVC ABI have flags to select the MSVC runtime "
"library. Runtime library selection typically varies with build configuration "
"because there is a separate runtime library for Debug builds."
msgstr ""

#: ../../../policy/CMP0091.rst:10
msgid ""
"In CMake 3.14 and below, MSVC runtime library selection flags are added to "
"the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` cache entries by CMake "
"automatically.  This allows users to edit their cache entries to adjust the "
"flags.  However, the presence of such default flags is problematic for "
"projects that want to choose a different runtime library programmatically. "
"In particular, it requires string editing of the :variable:"
"`CMAKE_<LANG>_FLAGS_<CONFIG>` variables with knowledge of the CMake builtin "
"defaults so they can be replaced."
msgstr ""

#: ../../../policy/CMP0091.rst:19
msgid ""
"CMake 3.15 and above prefer to leave the MSVC runtime library selection "
"flags out of the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` values and "
"instead offer a first-class abstraction.  The :variable:"
"`CMAKE_MSVC_RUNTIME_LIBRARY` variable and :prop_tgt:`MSVC_RUNTIME_LIBRARY` "
"target property may be set to select the MSVC runtime library.  If they are "
"not set then CMake uses the default value ``MultiThreaded$<$<CONFIG:Debug>:"
"Debug>DLL`` which is equivalent to the original flags."
msgstr ""

#: ../../../policy/CMP0091.rst:27
msgid ""
"This policy provides compatibility with projects that have not been updated "
"to be aware of the abstraction.  The policy setting takes effect as of the "
"first :command:`project` or :command:`enable_language` command that enables "
"a language whose compiler targets the MSVC ABI."
msgstr ""

#: ../../../policy/CMP0091.rst:34
msgid ""
"Once the policy has taken effect at the top of a project, that choice must "
"be used throughout the tree.  In projects that have nested projects in "
"subdirectories, be sure to convert everything together."
msgstr ""

#: ../../../policy/CMP0091.rst:38
msgid ""
"The ``OLD`` behavior for this policy is to place MSVC runtime library flags "
"in the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` cache entries and "
"ignore the :variable:`CMAKE_MSVC_RUNTIME_LIBRARY` abstraction. The ``NEW`` "
"behavior for this policy is to *not* place MSVC runtime library flags in the "
"default cache entries and use the abstraction instead."
msgstr ""

#: ../../../policy/CMP0091.rst:44
msgid ""
"This policy was introduced in CMake version 3.15.  Use the :command:"
"`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly. Unlike "
"many policies, CMake version |release| does *not* warn when this policy is "
"not set and simply uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
