# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.27\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/set.rst:2
msgid "set"
msgstr ""

#: ../../../command/set.rst:4
msgid ""
"Set a normal, cache, or environment variable to a given value. See the :ref:"
"`cmake-language(7) variables <CMake Language Variables>` documentation for "
"the scopes and interaction of normal variables and cache entries."
msgstr ""

#: ../../../command/set.rst:9
msgid ""
"Signatures of this command that specify a ``<value>...`` placeholder expect "
"zero or more arguments.  Multiple arguments will be joined as a :ref:"
"`semicolon-separated list <CMake Language Lists>` to form the actual "
"variable value to be set."
msgstr ""

#: ../../../command/set.rst:15
msgid "Set Normal Variable"
msgstr ""

#: ../../../command/set.rst:21
msgid "Set or unset ``<variable>`` in the current function or directory scope:"
msgstr ""

#: ../../../command/set.rst:23
msgid ""
"If at least one ``<value>...`` is given, set the variable to that value."
msgstr ""

#: ../../../command/set.rst:24
msgid ""
"If no value is given, unset the variable.  This is equivalent to :command:"
"`unset(<variable>) <unset>`."
msgstr ""

#: ../../../command/set.rst:27
msgid ""
"If the ``PARENT_SCOPE`` option is given the variable will be set in the "
"scope above the current scope.  Each new directory or :command:`function` "
"command creates a new scope.  A scope can also be created with the :command:"
"`block` command. This command will set the value of a variable into the "
"parent directory, calling function or encompassing scope (whichever is "
"applicable to the case at hand). The previous state of the variable's value "
"stays the same in the current scope (e.g., if it was undefined before, it is "
"still undefined and if it had a value, it is still that value)."
msgstr ""

#: ../../../command/set.rst:36
msgid ""
"The :command:`block(PROPAGATE)` and :command:`return(PROPAGATE)` commands "
"can be used as an alternate method to the :command:`set(PARENT_SCOPE)` and :"
"command:`unset(PARENT_SCOPE)` commands to update the parent scope."
msgstr ""

#: ../../../command/UNSET_NOTE.txt:3
msgid ""
"When evaluating :ref:`Variable References` of the form ``${VAR}``, CMake "
"first searches for a normal variable with that name.  If no such normal "
"variable exists, CMake will then search for a cache entry with that name. "
"Because of this, **unsetting a normal variable can expose a cache variable "
"that was previously hidden**.  To force a variable reference of the form "
"``${VAR}`` to return an empty string, use ``set(<variable> \"\")``, which "
"clears the normal variable but leaves it defined."
msgstr ""

#: ../../../command/set.rst:43
msgid "Set Cache Entry"
msgstr ""

#: ../../../command/set.rst:49
msgid ""
"Sets the given cache ``<variable>`` (cache entry).  Since cache entries are "
"meant to provide user-settable values this does not overwrite existing cache "
"entries by default.  Use the ``FORCE`` option to overwrite existing entries."
msgstr ""

#: ../../../command/set.rst:54
msgid "The ``<type>`` must be specified as one of:"
msgstr ""

#: ../../../command/set.rst:56
msgid "``BOOL``"
msgstr ""

#: ../../../command/set.rst:57
msgid "Boolean ``ON/OFF`` value. :manual:`cmake-gui(1)` offers a checkbox."
msgstr ""

#: ../../../command/set.rst:60
msgid "``FILEPATH``"
msgstr ""

#: ../../../command/set.rst:61
msgid "Path to a file on disk. :manual:`cmake-gui(1)` offers a file dialog."
msgstr ""

#: ../../../command/set.rst:64
msgid "``PATH``"
msgstr ""

#: ../../../command/set.rst:65
msgid ""
"Path to a directory on disk. :manual:`cmake-gui(1)` offers a file dialog."
msgstr ""

#: ../../../command/set.rst:68
msgid "``STRING``"
msgstr ""

#: ../../../command/set.rst:69
msgid ""
"A line of text. :manual:`cmake-gui(1)` offers a text field or a drop-down "
"selection if the :prop_cache:`STRINGS` cache entry property is set."
msgstr ""

#: ../../../command/set.rst:73
msgid "``INTERNAL``"
msgstr ""

#: ../../../command/set.rst:74
msgid ""
"A line of text. :manual:`cmake-gui(1)` does not show internal entries. They "
"may be used to store variables persistently across runs. Use of this type "
"implies ``FORCE``."
msgstr ""

#: ../../../command/set.rst:79
msgid ""
"The ``<docstring>`` must be specified as a line of text providing a quick "
"summary of the option for presentation to :manual:`cmake-gui(1)` users."
msgstr ""

#: ../../../command/set.rst:83
msgid ""
"If the cache entry does not exist prior to the call or the ``FORCE`` option "
"is given then the cache entry will be set to the given value."
msgstr ""

#: ../../../command/set.rst:88
msgid ""
"The content of the cache variable will not be directly accessible if a "
"normal variable of the same name already exists (see :ref:`rules of variable "
"evaluation <CMake Language Variables>`). If policy :policy:`CMP0126` is set "
"to ``OLD``, any normal variable binding in the current scope will be removed."
msgstr ""

#: ../../../command/set.rst:94
msgid ""
"It is possible for the cache entry to exist prior to the call but have no "
"type set if it was created on the :manual:`cmake(1)` command line by a user "
"through the :option:`-D\\<var\\>=\\<value\\> <cmake -D>` option without "
"specifying a type.  In this case the ``set`` command will add the type.  "
"Furthermore, if the ``<type>`` is ``PATH`` or ``FILEPATH`` and the "
"``<value>`` provided on the command line is a relative path, then the "
"``set`` command will treat the path as relative to the current working "
"directory and convert it to an absolute path."
msgstr ""

#: ../../../command/set.rst:104
msgid "Set Environment Variable"
msgstr ""

#: ../../../command/set.rst:110
msgid ""
"Sets an :manual:`Environment Variable <cmake-env-variables(7)>` to the given "
"value. Subsequent calls of ``$ENV{<variable>}`` will return this new value."
msgstr ""

#: ../../../command/set.rst:114
msgid ""
"This command affects only the current CMake process, not the process from "
"which CMake was called, nor the system environment at large, nor the "
"environment of subsequent build or test processes."
msgstr ""

#: ../../../command/set.rst:118
msgid ""
"If no argument is given after ``ENV{<variable>}`` or if ``<value>`` is an "
"empty string, then this command will clear any existing value of the "
"environment variable."
msgstr ""

#: ../../../command/set.rst:122
msgid ""
"Arguments after ``<value>`` are ignored. If extra arguments are found, then "
"an author warning is issued."
msgstr ""

#: ../../../command/set.rst:126
msgid "See Also"
msgstr ""

#: ../../../command/set.rst:128
msgid ":command:`unset`"
msgstr ""
