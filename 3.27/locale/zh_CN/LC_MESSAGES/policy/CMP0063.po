# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2023 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.27\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0063.rst:2
msgid "CMP0063"
msgstr ""

#: ../../../policy/CMP0063.rst:6
msgid "Honor visibility properties for all target types."
msgstr ""

#: ../../../policy/CMP0063.rst:8
msgid ""
"The :prop_tgt:`<LANG>_VISIBILITY_PRESET` and :prop_tgt:"
"`VISIBILITY_INLINES_HIDDEN` target properties affect visibility of symbols "
"during dynamic linking.  When first introduced these properties affected "
"compilation of sources only in shared libraries, module libraries, and "
"executables with the :prop_tgt:`ENABLE_EXPORTS` property set.  This was "
"sufficient for the basic use cases of shared libraries and executables with "
"plugins.  However, some sources may be compiled as part of static libraries "
"or object libraries and then linked into a shared library later. CMake 3.3 "
"and above prefer to honor these properties for sources compiled in all "
"target types.  This policy preserves compatibility for projects expecting "
"the properties to work only for some target types."
msgstr ""

#: ../../../policy/CMP0063.rst:20
msgid ""
"The ``OLD`` behavior for this policy is to ignore the visibility properties "
"for static libraries, object libraries, and executables without exports. The "
"``NEW`` behavior for this policy is to honor the visibility properties for "
"all target types."
msgstr ""

#: ../../../policy/CMP0063.rst:25
msgid ""
"This policy was introduced in CMake version 3.3.  CMake version |release| "
"warns when the policy is not set and uses ``OLD`` behavior.  Use the :"
"command:`cmake_policy()` command to set it to ``OLD`` or ``NEW`` explicitly."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
