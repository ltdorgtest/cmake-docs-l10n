# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/GenerateExportHeader.cmake:3
msgid "GenerateExportHeader"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:5
msgid "Function for generation of export macros for libraries"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:7
msgid "This module provides the function GENERATE_EXPORT_HEADER()."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:9
msgid ""
"The ``GENERATE_EXPORT_HEADER`` function can be used to generate a file "
"suitable for preprocessor inclusion which contains EXPORT macros to be used "
"in library classes::"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:13
msgid ""
"GENERATE_EXPORT_HEADER( LIBRARY_TARGET\n"
"          [BASE_NAME <base_name>]\n"
"          [EXPORT_MACRO_NAME <export_macro_name>]\n"
"          [EXPORT_FILE_NAME <export_file_name>]\n"
"          [DEPRECATED_MACRO_NAME <deprecated_macro_name>]\n"
"          [NO_EXPORT_MACRO_NAME <no_export_macro_name>]\n"
"          [STATIC_DEFINE <static_define>]\n"
"          [NO_DEPRECATED_MACRO_NAME <no_deprecated_macro_name>]\n"
"          [DEFINE_NO_DEPRECATED]\n"
"          [PREFIX_NAME <prefix_name>]\n"
")"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:26
msgid ""
"The target properties :prop_tgt:`CXX_VISIBILITY_PRESET "
"<<LANG>_VISIBILITY_PRESET>` and :prop_tgt:`VISIBILITY_INLINES_HIDDEN` can be "
"used to add the appropriate compile flags for targets.  See the "
"documentation of those target properties, and the convenience variables :"
"variable:`CMAKE_CXX_VISIBILITY_PRESET <CMAKE_<LANG>_VISIBILITY_PRESET>` and :"
"variable:`CMAKE_VISIBILITY_INLINES_HIDDEN`."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:33
msgid ""
"By default ``GENERATE_EXPORT_HEADER()`` generates macro names in a file name "
"determined by the name of the library.  This means that in the simplest "
"case, users of ``GenerateExportHeader`` will be equivalent to:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:37
msgid ""
"set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n"
"set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n"
"add_library(somelib someclass.cpp)\n"
"generate_export_header(somelib)\n"
"install(TARGETS somelib DESTINATION ${LIBRARY_INSTALL_DIR})\n"
"install(FILES\n"
" someclass.h\n"
" ${PROJECT_BINARY_DIR}/somelib_export.h DESTINATION ${INCLUDE_INSTALL_DIR}\n"
")"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:50
msgid "And in the ABI header files:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:52
msgid ""
"#include \"somelib_export.h\"\n"
"class SOMELIB_EXPORT SomeClass {\n"
"  ...\n"
"};"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:60
msgid ""
"The CMake fragment will generate a file in the ``${CMAKE_CURRENT_BINARY_DIR}"
"`` called ``somelib_export.h`` containing the macros ``SOMELIB_EXPORT``, "
"``SOMELIB_NO_EXPORT``, ``SOMELIB_DEPRECATED``, ``SOMELIB_DEPRECATED_EXPORT`` "
"and ``SOMELIB_DEPRECATED_NO_EXPORT``.  The resulting file should be "
"installed with other headers in the library."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:66
msgid ""
"The ``BASE_NAME`` argument can be used to override the file name and the "
"names used for the macros:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:69
msgid ""
"add_library(somelib someclass.cpp)\n"
"generate_export_header(somelib\n"
"  BASE_NAME other_name\n"
")"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:77
msgid ""
"Generates a file called ``other_name_export.h`` containing the macros "
"``OTHER_NAME_EXPORT``, ``OTHER_NAME_NO_EXPORT`` and "
"``OTHER_NAME_DEPRECATED`` etc."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:81
msgid ""
"The ``BASE_NAME`` may be overridden by specifiying other options in the "
"function.  For example:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:84
msgid ""
"add_library(somelib someclass.cpp)\n"
"generate_export_header(somelib\n"
"  EXPORT_MACRO_NAME OTHER_NAME_EXPORT\n"
")"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:92
msgid ""
"creates the macro ``OTHER_NAME_EXPORT`` instead of ``SOMELIB_EXPORT``, but "
"other macros and the generated file name is as default:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:95
msgid ""
"add_library(somelib someclass.cpp)\n"
"generate_export_header(somelib\n"
"  DEPRECATED_MACRO_NAME KDE_DEPRECATED\n"
")"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:103
msgid "creates the macro ``KDE_DEPRECATED`` instead of ``SOMELIB_DEPRECATED``."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:105
msgid ""
"If ``LIBRARY_TARGET`` is a static library, macros are defined without values."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:108
msgid ""
"If the same sources are used to create both a shared and a static library, "
"the uppercased symbol ``${BASE_NAME}_STATIC_DEFINE`` should be used when "
"building the static library:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:112
msgid ""
"add_library(shared_variant SHARED ${lib_SRCS})\n"
"add_library(static_variant ${lib_SRCS})\n"
"generate_export_header(shared_variant BASE_NAME libshared_and_static)\n"
"set_target_properties(static_variant PROPERTIES\n"
"  COMPILE_FLAGS -DLIBSHARED_AND_STATIC_STATIC_DEFINE)"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:120
msgid ""
"This will cause the export macros to expand to nothing when building the "
"static library."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:123
msgid ""
"If ``DEFINE_NO_DEPRECATED`` is specified, then a macro ``${BASE_NAME}"
"_NO_DEPRECATED`` will be defined This macro can be used to remove deprecated "
"code from preprocessor output:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:127
msgid ""
"option(EXCLUDE_DEPRECATED \"Exclude deprecated parts of the library\" "
"FALSE)\n"
"if (EXCLUDE_DEPRECATED)\n"
"  set(NO_BUILD_DEPRECATED DEFINE_NO_DEPRECATED)\n"
"endif()\n"
"generate_export_header(somelib ${NO_BUILD_DEPRECATED})"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:136
msgid "And then in somelib:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:138
msgid ""
"class SOMELIB_EXPORT SomeClass\n"
"{\n"
"public:\n"
"#ifndef SOMELIB_NO_DEPRECATED\n"
"  SOMELIB_DEPRECATED void oldMethod();\n"
"#endif\n"
"};"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:148
msgid ""
"#ifndef SOMELIB_NO_DEPRECATED\n"
"void SomeClass::oldMethod() {  }\n"
"#endif"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:155
msgid ""
"If ``PREFIX_NAME`` is specified, the argument will be used as a prefix to "
"all generated macros."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:158
msgid "For example:"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:160
msgid "generate_export_header(somelib PREFIX_NAME VTK_)"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:164
msgid "Generates the macros ``VTK_SOMELIB_EXPORT`` etc."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:168
msgid "ADD_COMPILER_EXPORT_FLAGS( [<output_variable>] )"
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:170
msgid ""
"The ``ADD_COMPILER_EXPORT_FLAGS`` function adds ``-fvisibility=hidden`` to :"
"variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` if supported, and is a no-op "
"on Windows which does not need extra compiler flags for exporting support. "
"You may optionally pass a single argument to ``ADD_COMPILER_EXPORT_FLAGS`` "
"that will be populated with the ``CXX_FLAGS`` required to enable visibility "
"support for the compiler/architecture in use."
msgstr ""

#: ../../../../Modules/GenerateExportHeader.cmake:177
msgid ""
"This function is deprecated.  Set the target properties :prop_tgt:"
"`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>` and :prop_tgt:"
"`VISIBILITY_INLINES_HIDDEN` instead."
msgstr ""
