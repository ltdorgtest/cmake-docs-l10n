# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindJava.cmake:6
msgid "FindJava"
msgstr ""

#: ../../../../Modules/FindJava.cmake:8
msgid "Find Java"
msgstr ""

#: ../../../../Modules/FindJava.cmake:10
msgid ""
"This module finds if Java is installed and determines where the include "
"files and libraries are.  The caller may set variable ``JAVA_HOME`` to "
"specify a Java installation prefix explicitly."
msgstr ""

#: ../../../../Modules/FindJava.cmake:14
msgid ""
"See also the :module:`FindJNI` module to find Java Native Interface (JNI)."
msgstr ""

#: ../../../../Modules/FindJava.cmake:16
msgid ""
"Specify one or more of the following components as you call this find "
"module. See example below."
msgstr ""

#: ../../../../Modules/FindJava.cmake:20
msgid ""
"Runtime     = Java Runtime Environment used to execute Java byte-compiled "
"applications\n"
"Development = Development tools (java, javac, javah, jar and javadoc), "
"includes Runtime component\n"
"IdlJ        = Interface Description Language (IDL) to Java compiler\n"
"JarSigner   = Signer and verifier tool for Java Archive (JAR) files"
msgstr ""

#: ../../../../Modules/FindJava.cmake:26
msgid "This module sets the following result variables:"
msgstr ""

#: ../../../../Modules/FindJava.cmake:30
msgid ""
"Java_JAVA_EXECUTABLE      = the full path to the Java runtime\n"
"Java_JAVAC_EXECUTABLE     = the full path to the Java compiler\n"
"Java_JAVAH_EXECUTABLE     = the full path to the Java header generator\n"
"Java_JAVADOC_EXECUTABLE   = the full path to the Java documentation "
"generator\n"
"Java_IDLJ_EXECUTABLE      = the full path to the Java idl compiler\n"
"Java_JAR_EXECUTABLE       = the full path to the Java archiver\n"
"Java_JARSIGNER_EXECUTABLE = the full path to the Java jar signer\n"
"Java_VERSION_STRING       = Version of java found, eg. 1.6.0_12\n"
"Java_VERSION_MAJOR        = The major version of the package found.\n"
"Java_VERSION_MINOR        = The minor version of the package found.\n"
"Java_VERSION_PATCH        = The patch version of the package found.\n"
"Java_VERSION_TWEAK        = The tweak version of the package found (after "
"'_')\n"
"Java_VERSION              = This is set to: $major[.$minor[.$patch[.$tweak]]]"
msgstr ""

#: ../../../../Modules/FindJava.cmake:46
msgid ""
"The minimum required version of Java can be specified using the :command:"
"`find_package` syntax, e.g."
msgstr ""

#: ../../../../Modules/FindJava.cmake:49
msgid "find_package(Java 1.8)"
msgstr ""

#: ../../../../Modules/FindJava.cmake:53
msgid ""
"NOTE: ``${Java_VERSION}`` and ``${Java_VERSION_STRING}`` are not guaranteed "
"to be identical.  For example some java version may return: "
"``Java_VERSION_STRING = 1.8.0_17`` and ``Java_VERSION = 1.8.0.17``"
msgstr ""

#: ../../../../Modules/FindJava.cmake:57
msgid ""
"another example is the Java OEM, with: ``Java_VERSION_STRING = 1.8.0-oem`` "
"and ``Java_VERSION = 1.8.0``"
msgstr ""

#: ../../../../Modules/FindJava.cmake:60
msgid "For these components the following variables are set:"
msgstr ""

#: ../../../../Modules/FindJava.cmake:64
msgid ""
"Java_FOUND                    - TRUE if all components are found.\n"
"Java_<component>_FOUND        - TRUE if <component> is found."
msgstr ""

#: ../../../../Modules/FindJava.cmake:69
msgid "Example Usages:"
msgstr ""

#: ../../../../Modules/FindJava.cmake:73
msgid ""
"find_package(Java)\n"
"find_package(Java 1.8 REQUIRED)\n"
"find_package(Java COMPONENTS Runtime)\n"
"find_package(Java COMPONENTS Development)"
msgstr ""
