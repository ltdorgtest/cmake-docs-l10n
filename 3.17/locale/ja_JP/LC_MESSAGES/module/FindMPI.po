# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindMPI.cmake:6
msgid "FindMPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:8
msgid "Find a Message Passing Interface (MPI) implementation."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:10
msgid ""
"The Message Passing Interface (MPI) is a library used to write high-"
"performance distributed-memory parallel applications, and is typically "
"deployed on a cluster.  MPI is a standard interface (defined by the MPI "
"forum) for which many implementations are available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:16
msgid "Variables for using MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:18
msgid ""
"The module exposes the components ``C``, ``CXX``, ``MPICXX`` and "
"``Fortran``. Each of these controls the various MPI languages to search for. "
"The difference between ``CXX`` and ``MPICXX`` is that ``CXX`` refers to the "
"MPI C API being usable from C++, whereas ``MPICXX`` refers to the MPI-2 C++ "
"API that was removed again in MPI-3."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:24
msgid ""
"Depending on the enabled components the following variables will be set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:28
msgid "``MPI_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:27
msgid ""
"Variable indicating that MPI settings for all requested languages have been "
"found. If no components are specified, this is true if MPI settings for all "
"enabled languages were detected. Note that the ``MPICXX`` component does not "
"affect this variable."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:32
msgid "``MPI_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:31
msgid ""
"Minimal version of MPI detected among the requested languages, or all "
"enabled languages if no components were specified."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:34
msgid ""
"This module will set the following variables per language in your project, "
"where ``<lang>`` is one of C, CXX, or Fortran:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:38
msgid "``MPI_<lang>_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:38
msgid ""
"Variable indicating the MPI settings for ``<lang>`` were found and that "
"simple MPI test programs compile with the provided settings."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:40 ../../../../Modules/FindMPI.cmake:121
msgid "``MPI_<lang>_COMPILER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:41
msgid "MPI compiler for ``<lang>`` if such a program exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:42
msgid "``MPI_<lang>_COMPILE_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:43
msgid ""
"Compilation options for MPI programs in ``<lang>``, given as a :ref:`;-list "
"<CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:44
msgid "``MPI_<lang>_COMPILE_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:45
msgid ""
"Compilation definitions for MPI programs in ``<lang>``, given as a :ref:`;-"
"list <CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:46
msgid "``MPI_<lang>_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:47
msgid "Include path(s) for MPI header."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:48
msgid "``MPI_<lang>_LINK_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:49
msgid "Linker flags for MPI programs."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:51
msgid "``MPI_<lang>_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:51
msgid "All libraries to link MPI programs against."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:53
msgid "Additionally, the following :prop_tgt:`IMPORTED` targets are defined:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:56
msgid "``MPI::MPI_<lang>``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:56
msgid "Target for using MPI from ``<lang>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:58
msgid ""
"The following variables indicating which bindings are present will be "
"defined:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:60
msgid "``MPI_MPICXX_FOUND``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:61
msgid ""
"Variable indicating whether the MPI-2 C++ bindings are present (introduced "
"in MPI-2, removed with MPI-3)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:62
msgid "``MPI_Fortran_HAVE_F77_HEADER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:63
msgid "True if the Fortran 77 header ``mpif.h`` is available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:64
msgid "``MPI_Fortran_HAVE_F90_MODULE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:65
msgid ""
"True if the Fortran 90 module ``mpi`` can be used for accessing MPI (MPI-2 "
"and higher only)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:67
msgid "``MPI_Fortran_HAVE_F08_MODULE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:67
msgid ""
"True if the Fortran 2008 ``mpi_f08`` is available to MPI programs (MPI-3 and "
"higher only)."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:69
msgid ""
"If possible, the MPI version will be determined by this module. The "
"facilities to detect the MPI version were introduced with MPI-1.2, and "
"therefore cannot be found for older MPI versions."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:72
msgid "``MPI_<lang>_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:73
msgid ""
"Major version of MPI implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:74
msgid "``MPI_<lang>_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:75
msgid ""
"Minor version of MPI implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:77
msgid "``MPI_<lang>_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:77
msgid "MPI version implemented for ``<lang>`` by the MPI distribution."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:79
msgid ""
"Note that there's no variable for the C bindings being accessible through "
"``mpi.h``, since the MPI standards always have required this binding to work "
"in both C and C++ code."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:82
msgid "For running MPI programs, the module sets the following variables"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:84 ../../../../Modules/FindMPI.cmake:110
msgid "``MPIEXEC_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:85
msgid "Executable for running MPI programs, if such exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:86
msgid "``MPIEXEC_NUMPROC_FLAG``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:87
msgid ""
"Flag to pass to ``mpiexec`` before giving it the number of processors to run "
"on."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:89
msgid "``MPIEXEC_MAX_NUMPROCS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:89
msgid ""
"Number of MPI processors to utilize. Defaults to the number of processors "
"detected on the host system."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:91
msgid "``MPIEXEC_PREFLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:92
msgid "Flags to pass to ``mpiexec`` directly before the executable to run."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:94
msgid "``MPIEXEC_POSTFLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:94
msgid "Flags to pass to ``mpiexec`` after other flags."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:97
msgid "Variables for locating MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:99
msgid "This module performs a four step search for an MPI implementation:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:101
msgid ""
"Search for ``MPIEXEC_EXECUTABLE`` and, if found, use its base directory."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:102
msgid ""
"Check if the compiler has MPI support built-in. This is the case if the user "
"passed a compiler wrapper as ``CMAKE_<LANG>_COMPILER`` or if they're on a "
"Cray system."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:104
msgid ""
"Attempt to find an MPI compiler wrapper and determine the compiler "
"information from it."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:105
msgid ""
"Try to find an MPI implementation that does not ship such a wrapper by "
"guessing settings. Currently, only Microsoft MPI and MPICH2 on Windows are "
"supported."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:108
msgid ""
"For controlling the ``MPIEXEC_EXECUTABLE`` step, the following variables may "
"be set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:111
msgid "Manually specify the location of ``mpiexec``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:112
msgid "``MPI_HOME``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:113
msgid "Specify the base directory of the MPI installation."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:114
msgid "``ENV{MPI_HOME}``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:115 ../../../../Modules/FindMPI.cmake:117
msgid ""
"Environment variable to specify the base directory of the MPI installation."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:117
msgid "``ENV{I_MPI_ROOT}``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:119
msgid ""
"For controlling the compiler wrapper step, the following variables may be "
"set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:122
msgid "Search for the specified compiler wrapper and use it."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:125
msgid "``MPI_<lang>_COMPILER_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:124
msgid ""
"Flags to pass to the MPI compiler wrapper during interrogation. Some "
"compiler wrappers support linking debug or tracing libraries if a specific "
"flag is passed and this variable may be used to obtain them."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:128
msgid "``MPI_COMPILER_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:128
msgid ""
"Used to initialize ``MPI_<lang>_COMPILER_FLAGS`` if no language specific "
"flag has been given. Empty by default."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:132
msgid "``MPI_EXECUTABLE_SUFFIX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:131
msgid ""
"A suffix which is appended to all names that are being looked for. For "
"instance you may set this to ``.mpich`` or ``.openmpi`` to prefer the one or "
"the other on Debian and its derivatives."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:134
msgid ""
"In order to control the guessing step, the following variable may be set:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:139
msgid "``MPI_GUESS_LIBRARY_NAME``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:137
msgid ""
"Valid values are ``MSMPI`` and ``MPICH2``. If set, only the given library "
"will be searched for. By default, ``MSMPI`` will be preferred over "
"``MPICH2`` if both are available. This also sets "
"``MPI_SKIP_COMPILER_WRAPPER`` to ``true``, which may be overridden."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:141
msgid ""
"Each of the search steps may be skipped with the following control variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:144
msgid "``MPI_ASSUME_NO_BUILTIN_MPI``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:144
msgid ""
"If true, the module assumes that the compiler itself does not provide an MPI "
"implementation and skips to step 2."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:146
msgid "``MPI_SKIP_COMPILER_WRAPPER``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:147
msgid "If true, no compiler wrapper will be searched for."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:149
msgid "``MPI_SKIP_GUESSING``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:149
msgid "If true, the guessing step will be skipped."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:151
msgid ""
"Additionally, the following control variable is available to change search "
"behavior:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:156
msgid "``MPI_CXX_SKIP_MPICXX``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:154
msgid ""
"Add some definitions that will disable the MPI-2 C++ bindings. Currently "
"supported are MPICH, Open MPI, Platform MPI and derivatives thereof, for "
"example MVAPICH or Intel MPI."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:158
msgid ""
"If the find procedure fails for a variable ``MPI_<lang>_WORKS``, then the "
"settings detected by or passed to the module did not work and even a simple "
"MPI test program failed to compile."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:161
msgid ""
"If all of these parameters were not sufficient to find the right MPI "
"implementation, a user may disable the entire autodetection process by "
"specifying both a list of libraries in ``MPI_<lang>_LIBRARIES`` and a list "
"of include directories in ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``. Any other "
"variable may be set in addition to these two. The module will then validate "
"the MPI settings and store the settings in the cache."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:168
msgid "Cache variables for MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:170
msgid ""
"The variable ``MPI_<lang>_INCLUDE_DIRS`` will be assembled from the "
"following variables. For C and CXX:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:174
msgid "``MPI_<lang>_HEADER_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:174
msgid "Location of the ``mpi.h`` header on disk."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:176
msgid "For Fortran:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:178
msgid "``MPI_Fortran_F77_HEADER_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:179
msgid "Location of the Fortran 77 header ``mpif.h``, if it exists."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:181
msgid "``MPI_Fortran_MODULE_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:181
msgid "Location of the ``mpi`` or ``mpi_f08`` modules, if available."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:183
msgid "For all languages the following variables are additionally considered:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:185
msgid "``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:186
msgid ""
"A :ref:`;-list <CMake Language Lists>` of paths needed in addition to the "
"normal include directories."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:187
msgid "``MPI_<include_name>_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:188
msgid "Path variables for include folders referred to by ``<include_name>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:190
msgid "``MPI_<lang>_ADDITIONAL_INCLUDE_VARS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:190
msgid ""
"A :ref:`;-list <CMake Language Lists>` of ``<include_name>`` that will be "
"added to the include locations of ``<lang>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:192
msgid ""
"The variable ``MPI_<lang>_LIBRARIES`` will be assembled from the following "
"variables:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:194
msgid "``MPI_<lib_name>_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:195
msgid "The location of a library called ``<lib_name>`` for use with MPI."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:197
msgid "``MPI_<lang>_LIB_NAMES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:197
msgid ""
"A :ref:`;-list <CMake Language Lists>` of ``<lib_name>`` that will be added "
"to the include locations of ``<lang>``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:200
msgid "Usage of mpiexec"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:202
msgid ""
"When using ``MPIEXEC_EXECUTABLE`` to execute MPI applications, you should "
"typically use all of the ``MPIEXEC_EXECUTABLE`` flags as follows:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:207
msgid ""
"${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS}\n"
"  ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:210
msgid ""
"where ``EXECUTABLE`` is the MPI program, and ``ARGS`` are the arguments to "
"pass to the MPI program."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:214
msgid "Advanced variables for using MPI"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:216
msgid ""
"The module can perform some advanced feature detections upon explicit "
"request."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:218
msgid ""
"**Important notice:** The following checks cannot be performed without "
"*executing* an MPI test program. Consider the special considerations for the "
"behavior of :command:`try_run` during cross compilation. Moreover, running "
"an MPI program can cause additional issues, like a firewall notification on "
"some systems. You should only enable these detections if you absolutely need "
"the information."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:223
msgid ""
"If the following variables are set to true, the respective search will be "
"performed:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:228
msgid "``MPI_DETERMINE_Fortran_CAPABILITIES``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:226
msgid ""
"Determine for all available Fortran bindings what the values of "
"``MPI_SUBARRAYS_SUPPORTED`` and ``MPI_ASYNC_PROTECTS_NONBLOCKING`` are and "
"make their values available as ``MPI_Fortran_<binding>_SUBARRAYS`` and "
"``MPI_Fortran_<binding>_ASYNCPROT``, where ``<binding>`` is one of "
"``F77_HEADER``, ``F90_MODULE`` and ``F08_MODULE``."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:234
msgid "``MPI_DETERMINE_LIBRARY_VERSION``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:231
msgid ""
"For each language, find the output of ``MPI_Get_library_version`` and make "
"it available as ``MPI_<lang>_LIBRARY_VERSION_STRING``. This information is "
"usually tied to the runtime component of an MPI implementation and might "
"differ depending on ``<lang>``. Note that the return value is entirely "
"implementation defined. This information might be used to identify the MPI "
"vendor and for example pick the correct one of multiple third party binaries "
"that matches the MPI vendor."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:237
msgid "Backward Compatibility"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:239
msgid ""
"For backward compatibility with older versions of FindMPI, these variables "
"are set, but deprecated:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:244
msgid ""
"MPI_COMPILER        MPI_LIBRARY        MPI_EXTRA_LIBRARY\n"
"MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH   MPI_LINK_FLAGS\n"
"MPI_LIBRARIES"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:248
msgid ""
"In new projects, please use the ``MPI_<lang>_XXX`` equivalents. "
"Additionally, the following variables are deprecated:"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:251
msgid "``MPI_<lang>_COMPILE_FLAGS``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:252
msgid ""
"Use ``MPI_<lang>_COMPILE_OPTIONS`` and ``MPI_<lang>_COMPILE_DEFINITIONS`` "
"instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:253
msgid "``MPI_<lang>_INCLUDE_PATH``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:254
msgid ""
"For consumption use ``MPI_<lang>_INCLUDE_DIRS`` and for specifying folders "
"use ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS`` instead."
msgstr ""

#: ../../../../Modules/FindMPI.cmake:1787
msgid "``MPIEXEC``"
msgstr ""

#: ../../../../Modules/FindMPI.cmake:256
msgid "Use ``MPIEXEC_EXECUTABLE`` instead."
msgstr ""
