# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.29\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_gbl/USE_FOLDERS.rst:2
msgid "USE_FOLDERS"
msgstr ""

#: ../../../prop_gbl/USE_FOLDERS.rst:4
msgid ""
"Controls whether to use the :prop_tgt:`FOLDER` target property to organize "
"targets into folders.  The value of ``USE_FOLDERS`` at the end of the top "
"level ``CMakeLists.txt`` file is what determines the behavior."
msgstr ""

#: ../../../prop_gbl/USE_FOLDERS.rst:10
msgid ""
"CMake treats this property as ``ON`` by default. See policy :policy:"
"`CMP0143`."
msgstr ""

#: ../../../prop_gbl/USE_FOLDERS.rst:13
msgid ""
"Not all CMake generators support recording folder details for targets. The :"
"generator:`Xcode` and :ref:`Visual Studio <Visual Studio Generators>` "
"generators are examples of generators that do.  Similarly, not all IDEs "
"support presenting targets using folder hierarchies, even if the CMake "
"generator used provides the necessary information."
msgstr ""
