# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2020 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindOpenSSL.cmake:6
msgid "FindOpenSSL"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:8
msgid "Find the OpenSSL encryption library."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:11
msgid "Optional COMPONENTS"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:13
msgid ""
"This module supports two optional COMPONENTS: ``Crypto`` and ``SSL``.  Both "
"components have associated imported targets, as described below."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:17
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:19
msgid "This module defines the following :prop_tgt:`IMPORTED` targets:"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:21
msgid "``OpenSSL::SSL``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:22
msgid "The OpenSSL ``ssl`` library, if found."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:23
msgid "``OpenSSL::Crypto``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:24
msgid "The OpenSSL ``crypto`` library, if found."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:25
msgid "``OpenSSL::applink``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:26
msgid ""
"The OpenSSL ``applink`` components that might be need to be compiled into "
"projects under MSVC. This target is available only if found OpenSSL version "
"is not less than 0.9.8. By linking this target the above OpenSSL targets can "
"be linked even if the project has different MSVC runtime configurations with "
"the above OpenSSL targets. This target has no effect on platforms other than "
"MSVC."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:33
msgid ""
"NOTE: Due to how ``INTERFACE_SOURCES`` are consumed by the consuming target, "
"unless you certainly know what you are doing, it is always preferred to link "
"``OpenSSL::applink`` target as ``PRIVATE`` and to make sure that this target "
"is linked at most once for the whole dependency graph of any library or "
"executable:"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:39
msgid "target_link_libraries(myTarget PRIVATE OpenSSL::applink)"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:43
msgid ""
"Otherwise you would probably encounter unexpected random problems when "
"building and linking, as both the ISO C and the ISO C++ standard claims "
"almost nothing about what a link process should be."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:48
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:50
msgid "This module will set the following variables in your project:"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:52
msgid "``OPENSSL_FOUND``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:53
msgid ""
"System has the OpenSSL library. If no components are requested it only "
"requires the crypto library."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:55
msgid "``OPENSSL_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:56
msgid "The OpenSSL include directory."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:57
msgid "``OPENSSL_CRYPTO_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:58
msgid "The OpenSSL crypto library."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:59
msgid "``OPENSSL_CRYPTO_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:60
msgid "The OpenSSL crypto library and its dependencies."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:61
msgid "``OPENSSL_SSL_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:62
msgid "The OpenSSL SSL library."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:63
msgid "``OPENSSL_SSL_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:64
msgid "The OpenSSL SSL library and its dependencies."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:65
msgid "``OPENSSL_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:66
msgid "All OpenSSL libraries and their dependencies."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:67
msgid "``OPENSSL_VERSION``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:68
msgid "This is set to ``$major.$minor.$revision$patch`` (e.g. ``0.9.8s``)."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:69
msgid "``OPENSSL_APPLINK_SOURCE``"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:70
msgid ""
"The sources in the target ``OpenSSL::applink`` that is mentioned above. This "
"variable shall always be undefined if found openssl version is less than "
"0.9.8 or if platform is not MSVC."
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:75
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindOpenSSL.cmake:77
msgid ""
"Set ``OPENSSL_ROOT_DIR`` to the root directory of an OpenSSL installation. "
"Set ``OPENSSL_USE_STATIC_LIBS`` to ``TRUE`` to look for static libraries. "
"Set ``OPENSSL_MSVC_STATIC_RT`` set ``TRUE`` to choose the MT version of the "
"lib."
msgstr ""
