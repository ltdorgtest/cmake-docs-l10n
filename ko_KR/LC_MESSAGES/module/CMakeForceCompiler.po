# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2017 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CMakeForceCompiler.cmake:6
msgid "CMakeForceCompiler"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:8
msgid "Deprecated.  Do not use."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:10
msgid ""
"The macros provided by this module were once intended for use by cross-"
"compiling toolchain files when CMake was not able to automatically detect "
"the compiler identification.  Since the introduction of this module, CMake's "
"compiler identification capabilities have improved and can now be taught to "
"recognize any compiler.  Furthermore, the suite of information CMake detects "
"from a compiler is now too extensive to be provided by toolchain files using "
"these macros."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:18
msgid ""
"One common use case for this module was to skip CMake's checks for a working "
"compiler when using a cross-compiler that cannot link binaries without "
"special flags or custom linker scripts.  This case is now supported by "
"setting the :variable:`CMAKE_TRY_COMPILE_TARGET_TYPE` variable in the "
"toolchain file instead."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:26
msgid "Macro CMAKE_FORCE_C_COMPILER has the following signature:"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:30
msgid "CMAKE_FORCE_C_COMPILER(<compiler> <compiler-id>)"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:32
msgid ""
"It sets CMAKE_C_COMPILER to the given compiler and the cmake internal "
"variable CMAKE_C_COMPILER_ID to the given compiler-id.  It also bypasses the "
"check for working compiler and basic compiler information tests."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:37
msgid "Macro CMAKE_FORCE_CXX_COMPILER has the following signature:"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:41
msgid "CMAKE_FORCE_CXX_COMPILER(<compiler> <compiler-id>)"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:43
msgid ""
"It sets CMAKE_CXX_COMPILER to the given compiler and the cmake internal "
"variable CMAKE_CXX_COMPILER_ID to the given compiler-id.  It also bypasses "
"the check for working compiler and basic compiler information tests."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:48
msgid "Macro CMAKE_FORCE_Fortran_COMPILER has the following signature:"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:52
msgid "CMAKE_FORCE_Fortran_COMPILER(<compiler> <compiler-id>)"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:54
msgid ""
"It sets CMAKE_Fortran_COMPILER to the given compiler and the cmake internal "
"variable CMAKE_Fortran_COMPILER_ID to the given compiler-id. It also "
"bypasses the check for working compiler and basic compiler information tests."
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:59
msgid "So a simple toolchain file could look like this:"
msgstr ""

#: ../../../../Modules/CMakeForceCompiler.cmake:63
msgid ""
"include (CMakeForceCompiler)\n"
"set(CMAKE_SYSTEM_NAME Generic)\n"
"CMAKE_FORCE_C_COMPILER   (chc12 MetrowerksHicross)\n"
"CMAKE_FORCE_CXX_COMPILER (chc12 MetrowerksHicross)"
msgstr ""
