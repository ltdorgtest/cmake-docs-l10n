# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_test/FIXTURES_REQUIRED.rst:2
msgid "FIXTURES_REQUIRED"
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:6
msgid ""
"Specifies a list of fixtures the test requires. Fixture names are case "
"sensitive and they are not required to have any similarity to test names."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:9
msgid ""
"Fixtures are a way to attach setup and cleanup tasks to a set of tests. If a "
"test requires a given fixture, then all tests marked as setup tasks for that "
"fixture will be executed first (once for the whole set of tests, not once "
"per test requiring the fixture). After all tests requiring a particular "
"fixture have completed, CTest will ensure all tests marked as cleanup tasks "
"for that fixture are then executed. Tests are marked as setup tasks with "
"the :prop_test:`FIXTURES_SETUP` property and as cleanup tasks with the :"
"prop_test:`FIXTURES_CLEANUP` property. If any of a fixture's setup tests "
"fail, all tests listing that fixture in their ``FIXTURES_REQUIRED`` property "
"will not be executed. The cleanup tests for the fixture will always be "
"executed, even if some setup tests fail."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:21
msgid ""
"When CTest is asked to execute only a subset of tests (e.g. by the use of "
"regular expressions or when run with the ``--rerun-failed`` command line "
"option), it will automatically add any setup or cleanup tests for fixtures "
"required by any of the tests that are in the execution set. This behavior "
"can be overridden with the ``-FS``, ``-FC`` and ``-FA`` command line options "
"to :manual:`ctest(1)` if desired."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:28
msgid ""
"Since setup and cleanup tasks are also tests, they can have an ordering "
"specified by the :prop_test:`DEPENDS` test property just like any other "
"tests. This can be exploited to implement setup or cleanup using multiple "
"tests for a single fixture to modularise setup or cleanup logic."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:33
msgid ""
"The concept of a fixture is different to that of a resource specified by :"
"prop_test:`RESOURCE_LOCK`, but they may be used together. A fixture defines "
"a set of tests which share setup and cleanup requirements, whereas a "
"resource lock has the effect of ensuring a particular set of tests do not "
"run in parallel. Some situations may need both, such as setting up a "
"database, serialising test access to that database and deleting the database "
"again at the end. For such cases, tests would populate both "
"``FIXTURES_REQUIRED`` and :prop_test:`RESOURCE_LOCK` to combine the two "
"behaviours. Names used for :prop_test:`RESOURCE_LOCK` have no relationship "
"with names of fixtures, so note that a resource lock does not imply a "
"fixture and vice versa."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:44
msgid ""
"Consider the following example which represents a database test scenario "
"similar to that mentioned above:"
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:47
msgid ""
"add_test(NAME testsDone   COMMAND emailResults)\n"
"add_test(NAME fooOnly     COMMAND testFoo)\n"
"add_test(NAME dbOnly      COMMAND testDb)\n"
"add_test(NAME dbWithFoo   COMMAND testDbWithFoo)\n"
"add_test(NAME createDB    COMMAND initDB)\n"
"add_test(NAME setupUsers  COMMAND userCreation)\n"
"add_test(NAME cleanupDB   COMMAND deleteDB)\n"
"add_test(NAME cleanupFoo  COMMAND removeFoos)\n"
"\n"
"set_tests_properties(setupUsers PROPERTIES DEPENDS createDB)\n"
"\n"
"set_tests_properties(createDB   PROPERTIES FIXTURES_SETUP    DB)\n"
"set_tests_properties(setupUsers PROPERTIES FIXTURES_SETUP    DB)\n"
"set_tests_properties(cleanupDB  PROPERTIES FIXTURES_CLEANUP  DB)\n"
"set_tests_properties(cleanupFoo PROPERTIES FIXTURES_CLEANUP  Foo)\n"
"set_tests_properties(testsDone  PROPERTIES FIXTURES_CLEANUP  \"DB;Foo\")\n"
"\n"
"set_tests_properties(fooOnly    PROPERTIES FIXTURES_REQUIRED Foo)\n"
"set_tests_properties(dbOnly     PROPERTIES FIXTURES_REQUIRED DB)\n"
"set_tests_properties(dbWithFoo  PROPERTIES FIXTURES_REQUIRED \"DB;Foo\")\n"
"\n"
"set_tests_properties(dbOnly dbWithFoo createDB setupUsers cleanupDB\n"
"                     PROPERTIES RESOURCE_LOCK DbAccess)"
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:73
msgid "Key points from this example:"
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:75
msgid ""
"Two fixtures are defined: ``DB`` and ``Foo``. Tests can require a single "
"fixture as ``fooOnly`` and ``dbOnly`` do, or they can depend on multiple "
"fixtures like ``dbWithFoo`` does."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:79
msgid ""
"A ``DEPENDS`` relationship is set up to ensure ``setupUsers`` happens after "
"``createDB``, both of which are setup tests for the ``DB`` fixture and will "
"therefore be executed before the ``dbOnly`` and ``dbWithFoo`` tests "
"automatically."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:84
msgid ""
"No explicit ``DEPENDS`` relationships were needed to make the setup tests "
"run before or the cleanup tests run after the regular tests."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:87
msgid ""
"The ``Foo`` fixture has no setup tests defined, only a single cleanup test."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:89
msgid ""
"``testsDone`` is a cleanup test for both the ``DB`` and ``Foo`` fixtures. "
"Therefore, it will only execute once regular tests for both fixtures have "
"finished (i.e. after ``fooOnly``, ``dbOnly`` and ``dbWithFoo``). No "
"``DEPENDS`` relationship was specified for ``testsDone``, so it is free to "
"run before, after or concurrently with other cleanup tests for either "
"fixture."
msgstr ""

#: ../../../prop_test/FIXTURES_REQUIRED.rst:96
msgid ""
"The setup and cleanup tests never list the fixtures they are for in their "
"own ``FIXTURES_REQUIRED`` property, as that would result in a dependency on "
"themselves and be considered an error."
msgstr ""
