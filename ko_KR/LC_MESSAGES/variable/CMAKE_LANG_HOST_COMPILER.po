# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:2
msgid "CMAKE_<LANG>_HOST_COMPILER"
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:4
msgid "``CMAKE_CUDA_HOST_COMPILER``"
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:7
msgid "``CMAKE_HIP_HOST_COMPILER``"
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:10
msgid "This variable is available when ``<LANG>`` is ``CUDA`` or ``HIP``."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:12
msgid ""
"When :variable:`CMAKE_<LANG>_COMPILER_ID` is ``NVIDIA``, "
"``CMAKE_<LANG>_HOST_COMPILER`` selects the compiler executable to use when "
"compiling host code for ``CUDA`` or ``HIP`` language files. This maps to the "
"``nvcc -ccbin`` option."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:17
msgid ""
"The ``CMAKE_<LANG>_HOST_COMPILER`` variable may be set explicitly before "
"CUDA or HIP is first enabled by a :command:`project` or :command:"
"`enable_language` command. This can be done via ``-"
"DCMAKE_<LANG>_HOST_COMPILER=...`` on the command line or in a :ref:"
"`toolchain file <Cross Compiling Toolchain>`.  Or, one may set the :envvar:"
"`CUDAHOSTCXX` or :envvar:`HIPHOSTCXX` environment variable to provide a "
"default value."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:25
msgid ""
"Once the CUDA or HIP language is enabled, the ``CMAKE_<LANG>_HOST_COMPILER`` "
"variable is read-only and changes to it are undefined behavior."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:30
msgid ""
"Since ``CMAKE_<LANG>_HOST_COMPILER`` is meaningful only when the :variable:"
"`CMAKE_<LANG>_COMPILER_ID` is ``NVIDIA``, it does not make sense to set "
"``CMAKE_<LANG>_HOST_COMPILER`` without also setting "
"``CMAKE_<LANG>_COMPILER`` to NVCC."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:37
msgid ""
"Projects should not try to set ``CMAKE_<LANG>_HOST_COMPILER`` to match :"
"variable:`CMAKE_CXX_COMPILER <CMAKE_<LANG>_COMPILER>` themselves. It is the "
"end-user's responsibility, not the project's, to ensure that NVCC targets "
"the same ABI as the C++ compiler."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:44
msgid "Ignored when using :ref:`Visual Studio Generators`."
msgstr ""

#: ../../../variable/CMAKE_LANG_HOST_COMPILER.rst:46
msgid ""
"See the :variable:`CMAKE_<LANG>_HOST_COMPILER_ID` and :variable:"
"`CMAKE_<LANG>_HOST_COMPILER_VERSION` variables for information about the "
"host compiler used by ``nvcc``, whether by default or specified by "
"``CMAKE_<LANG>_HOST_COMPILER``."
msgstr ""
