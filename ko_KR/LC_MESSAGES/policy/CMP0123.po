# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-21 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0123.rst:2
msgid "CMP0123"
msgstr ""

#: ../../../policy/CMP0123.rst:6
msgid "``ARMClang`` cpu/arch compile and link flags must be set explicitly."
msgstr ""

#: ../../../policy/CMP0123.rst:8
msgid ""
"CMake 3.20 and lower automatically maps the :variable:"
"`CMAKE_SYSTEM_PROCESSOR` variable and an undocumented ``CMAKE_SYSTEM_ARCH`` "
"to compile and link options for ``ARMClang``.  For example, the ``-"
"mcpu=cortex-m33`` flag is added when :variable:`CMAKE_SYSTEM_PROCESSOR` "
"equals ``cortex-m33``.  CMake requires projects to set either variable or it "
"raises a fatal error.  However, the project may need to additionally specify "
"CPU features using e.g. ``-mcpu=cortex-m33+nodsp``, conflicting with the ``-"
"mcpu=cortex-m33`` added by CMake.  This results in either link errors or "
"unusable binaries."
msgstr ""

#: ../../../policy/CMP0123.rst:17
msgid ""
"CMake 3.21 and above prefer instead to not add any cpu/arch compile and link "
"flags automatically.  Instead, projects must specify them explicitly. This "
"policy provides compatibility for projects that have not been updated."
msgstr ""

#: ../../../policy/CMP0123.rst:21
msgid ""
"The ``OLD`` behavior of this policy requires projects that use ``ARMClang`` "
"to set either :variable:`CMAKE_SYSTEM_PROCESSOR` or ``CMAKE_SYSTEM_ARCH`` "
"and it automatically adds a compile option ``-mcpu=`` or ``-march=`` and a "
"link option ``--cpu=`` based on those variables.  The ``NEW`` behavior does "
"not add compile or link options, and projects are responsible for setting "
"correct options."
msgstr ""

#: ../../../policy/include/STANDARD_ADVICE.rst:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/include/DEPRECATED.rst:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
