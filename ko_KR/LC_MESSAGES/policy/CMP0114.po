# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.23\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0114.rst:2
msgid "CMP0114"
msgstr ""

#: ../../../policy/CMP0114.rst:6
msgid ":module:`ExternalProject` step targets fully adopt their steps."
msgstr ""

#: ../../../policy/CMP0114.rst:8
msgid ""
"The :command:`ExternalProject_Add` ``STEP_TARGETS`` option, and the :command:"
"`ExternalProject_Add_StepTargets` function, can be used to create build "
"targets for individual steps of an external project."
msgstr ""

#: ../../../policy/CMP0114.rst:12
msgid "In CMake 3.18 and below, step targets have some limitations:"
msgstr ""

#: ../../../policy/CMP0114.rst:14
msgid ""
"Step targets always depend on targets named by the :command:"
"`ExternalProject_Add` ``DEPENDS`` option even though not all steps need "
"them.  In order to allow step targets to be created without those "
"dependencies, the :command:`ExternalProject_Add` "
"``INDEPENDENT_STEP_TARGETS`` option or the :command:"
"`ExternalProject_Add_StepTargets` ``NO_DEPENDS`` option may be used.  "
"However, adding such \"independent\" step targets makes sense only for "
"specific steps such as ``download``, ``update``, and ``patch`` because they "
"do not need any of the external project's build dependencies. Furthermore, "
"it does not make sense to create independent step targets for steps that "
"depend on non-independent steps.  Such rules are not enforced, and projects "
"that do not follow them can generate build systems with confusing and "
"generator-specific behavior."
msgstr ""

#: ../../../policy/CMP0114.rst:28
msgid ""
"Step targets hold copies of the custom commands implementing their steps "
"that are separate from the copies in the primary target created by :command:"
"`ExternalProject_Add`, and the primary target does not depend on the step "
"targets.  In parallel builds that drive the primary target and step targets "
"concurrently, multiple copies of the steps' commands may run concurrently "
"and race each other."
msgstr ""

#: ../../../policy/CMP0114.rst:35
msgid ""
"Also, prior to policy :policy:`CMP0113`, the step targets generated by :ref:"
"`Makefile Generators` also contain all the custom commands on which their "
"step depends.  This can lead to repeated execution of those steps even in "
"serial builds."
msgstr ""

#: ../../../policy/CMP0114.rst:40
msgid ""
"In CMake 3.19 and above, the :module:`ExternalProject` module prefers a "
"revised design to address these problems:"
msgstr ""

#: ../../../policy/CMP0114.rst:43
msgid ""
"Each step is classified as \"independent\" if it does not depend on other "
"targets named by the :command:`ExternalProject_Add` ``DEPENDS``. The "
"predefined steps are automatically classified by default:"
msgstr ""

#: ../../../policy/CMP0114.rst:47
msgid "The ``download``, ``update``, and ``patch`` steps are independent."
msgstr ""

#: ../../../policy/CMP0114.rst:48
msgid "The ``configure``, ``build``, ``test``, and ``install`` steps are not."
msgstr ""

#: ../../../policy/CMP0114.rst:50
msgid ""
"For custom steps, the :command:`ExternalProject_Add_Step` command provides "
"an ``INDEPENDENT`` option to mark them as independent.  It is an error to "
"mark a step as independent if it depends on other steps that are not.  Note "
"that this use of the term \"independent\" refers only to independence from "
"external targets and is orthogonal to a step's dependencies on other steps."
msgstr ""

#: ../../../policy/CMP0114.rst:56
msgid ""
"Step targets created by the :command:`ExternalProject_Add` ``STEP_TARGETS`` "
"option or the :command:`ExternalProject_Add_Step` function are now "
"independent if and only if their steps are marked as independent. The :"
"command:`ExternalProject_Add` ``INDEPENDENT_STEP_TARGETS`` option and :"
"command:`ExternalProject_Add_StepTargets` ``NO_DEPENDS`` option are no "
"longer allowed."
msgstr ""

#: ../../../policy/CMP0114.rst:63
msgid ""
"Step targets, when created, are fully responsible for holding the custom "
"commands implementing their steps.  The primary target created by :command:"
"`ExternalProject_Add` depends on the step targets, and the step targets "
"depend on each other.  The target-level dependencies match the file-level "
"dependencies used by the custom commands for each step."
msgstr ""

#: ../../../policy/CMP0114.rst:69
msgid ""
"When the :command:`ExternalProject_Add` ``UPDATE_DISCONNECTED`` or "
"``TEST_EXCLUDE_FROM_MAIN`` option is used, or the :command:"
"`ExternalProject_Add_Step` ``EXCLUDE_FROM_MAIN`` option is used for a custom "
"step, some step targets may be created automatically. These are needed to "
"hold the steps commonly depended upon by the primary target and the "
"disconnected step targets."
msgstr ""

#: ../../../policy/CMP0114.rst:76
msgid ""
"Policy ``CMP0114`` provides compatibility for projects that have not been "
"updated to expect the new behavior.  The ``OLD`` behavior for this policy is "
"to use the above-documented behavior from 3.18 and below.  The ``NEW`` "
"behavior for this policy is to use the above-documented behavior preferred "
"by 3.19 and above."
msgstr ""

#: ../../../policy/CMP0114.rst:82
msgid ""
"This policy was introduced in CMake version 3.19.  CMake version |release| "
"warns when the policy is not set and uses ``OLD`` behavior. Use the :command:"
"`cmake_policy` command to set it to ``OLD`` or ``NEW`` explicitly."
msgstr ""
