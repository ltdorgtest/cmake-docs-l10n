# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/cmake_host_system_information.rst:2
msgid "cmake_host_system_information"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:4
msgid "Query host system specific information."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:6
msgid "cmake_host_system_information(RESULT <variable> QUERY <key> ...)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:10
msgid ""
"Queries system information of the host system on which cmake runs. One or "
"more ``<key>`` can be provided to select the information to be queried.  The "
"list of queried values is stored in ``<variable>``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:14
msgid "``<key>`` can be one of the following values:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:16
msgid "``NUMBER_OF_LOGICAL_CORES``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:17
msgid "Number of logical cores"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:19
msgid "``NUMBER_OF_PHYSICAL_CORES``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:20
msgid "Number of physical cores"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:22
msgid "``HOSTNAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:23
msgid "Hostname"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:25
msgid "``FQDN``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:26
msgid "Fully qualified domain name"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:28
msgid "``TOTAL_VIRTUAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:29
msgid "Total virtual memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:31
msgid "``AVAILABLE_VIRTUAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:32
msgid "Available virtual memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:34
msgid "``TOTAL_PHYSICAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:35
msgid "Total physical memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:37
msgid "``AVAILABLE_PHYSICAL_MEMORY``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:38
msgid "Available physical memory in MiB [#mebibytes]_"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:40
msgid "``IS_64BIT``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:43
msgid "One if processor is 64Bit"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:45
msgid "``HAS_FPU``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:48
msgid "One if processor has floating point unit"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:50
msgid "``HAS_MMX``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:53
msgid "One if processor supports MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:55
msgid "``HAS_MMX_PLUS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:58
msgid "One if processor supports Ext. MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:60
msgid "``HAS_SSE``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:63
msgid "One if processor supports SSE instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:65
msgid "``HAS_SSE2``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:68
msgid "One if processor supports SSE2 instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:70
msgid "``HAS_SSE_FP``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:73
msgid "One if processor supports SSE FP instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:75
msgid "``HAS_SSE_MMX``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:78
msgid "One if processor supports SSE MMX instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:80
msgid "``HAS_AMD_3DNOW``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:83
msgid "One if processor supports 3DNow instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:85
msgid "``HAS_AMD_3DNOW_PLUS``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:88
msgid "One if processor supports 3DNow+ instructions"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:90
msgid "``HAS_IA64``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:93
msgid "One if IA64 processor emulating x86"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:95
msgid "``HAS_SERIAL_NUMBER``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:98
msgid "One if processor has serial number"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:100
msgid "``PROCESSOR_SERIAL_NUMBER``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:103
msgid "Processor serial number"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:105
msgid "``PROCESSOR_NAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:108
msgid "Human readable processor name"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:110
msgid "``PROCESSOR_DESCRIPTION``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:113
msgid "Human readable full processor description"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:115
msgid "``OS_NAME``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:118
msgid "See :variable:`CMAKE_HOST_SYSTEM_NAME`"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:120
msgid "``OS_RELEASE``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:123
msgid "The OS sub-type e.g. on Windows ``Professional``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:125
msgid "``OS_VERSION``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:128
msgid "The OS build ID"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:130
msgid "``OS_PLATFORM``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:133
msgid "See :variable:`CMAKE_HOST_SYSTEM_PROCESSOR`"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:135
msgid "``DISTRIB_INFO``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:138
msgid ""
"Read :file:`/etc/os-release` file and define the given ``<variable>`` into a "
"list of read variables"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:141
msgid "``DISTRIB_<name>``"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:144
msgid ""
"Get the ``<name>`` variable (see `man 5 os-release`_) if it exists in the :"
"file:`/etc/os-release` file"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:147
#: ../../../command/cmake_host_system_information.rst:204
msgid "Example:"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:149
msgid ""
"cmake_host_system_information(RESULT PRETTY_NAME QUERY DISTRIB_PRETTY_NAME)\n"
"message(STATUS \"${PRETTY_NAME}\")\n"
"\n"
"cmake_host_system_information(RESULT DISTRO QUERY DISTRIB_INFO)\n"
"\n"
"foreach(VAR IN LISTS DISTRO)\n"
"  message(STATUS \"${VAR}=`${${VAR}}`\")\n"
"endforeach()"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:161
msgid "Output::"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:163
msgid ""
"-- Ubuntu 20.04.2 LTS\n"
"-- DISTRO_BUG_REPORT_URL=`https://bugs.launchpad.net/ubuntu/`\n"
"-- DISTRO_HOME_URL=`https://www.ubuntu.com/`\n"
"-- DISTRO_ID=`ubuntu`\n"
"-- DISTRO_ID_LIKE=`debian`\n"
"-- DISTRO_NAME=`Ubuntu`\n"
"-- DISTRO_PRETTY_NAME=`Ubuntu 20.04.2 LTS`\n"
"-- DISTRO_PRIVACY_POLICY_URL=`https://www.ubuntu.com/legal/terms-and-"
"policies/privacy-policy`\n"
"-- DISTRO_SUPPORT_URL=`https://help.ubuntu.com/`\n"
"-- DISTRO_UBUNTU_CODENAME=`focal`\n"
"-- DISTRO_VERSION=`20.04.2 LTS (Focal Fossa)`\n"
"-- DISTRO_VERSION_CODENAME=`focal`\n"
"-- DISTRO_VERSION_ID=`20.04`"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:177
msgid ""
"If :file:`/etc/os-release` file is not found, the command tries to gather OS "
"identification via fallback scripts.  The fallback script can use `various "
"distribution-specific files`_ to collect OS identification data and map it "
"into `man 5 os-release`_ variables."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:183
msgid "Fallback Interface Variables"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:187
msgid ""
"In addition to the scripts shipped with CMake, a user may append full paths "
"to his script(s) to the this list.  The script filename has the following "
"format: ``NNN-<name>.cmake``, where ``NNN`` is three digits used to apply "
"collected scripts in a specific order."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:194
msgid ""
"Variables collected by the user provided fallback script ought to be "
"assigned to CMake variables using this naming convention.  Example, the "
"``ID`` variable from the manual becomes "
"``CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID``."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:201
msgid ""
"The fallback script ought to store names of all assigned "
"``CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_<varname>`` variables in this list."
msgstr ""

#: ../../../command/cmake_host_system_information.rst:206
msgid ""
"# Try to detect some old distribution\n"
"# See also\n"
"# - http://linuxmafia.com/faq/Admin/release-files.html\n"
"#\n"
"if(NOT EXISTS \"${CMAKE_SYSROOT}/etc/foobar-release\")\n"
"  return()\n"
"endif()\n"
"# Get the first string only\n"
"file(\n"
"    STRINGS \"${CMAKE_SYSROOT}/etc/foobar-release\" "
"CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT\n"
"    LIMIT_COUNT 1\n"
"  )\n"
"#\n"
"# Example:\n"
"#\n"
"#   Foobar distribution release 1.2.3 (server)\n"
"#\n"
"if(CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT MATCHES \"Foobar distribution "
"release ([0-9\\.]+) .*\")\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_NAME Foobar)\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_PRETTY_NAME "
"\"${CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT}\")\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID foobar)\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION ${CMAKE_MATCH_1})\n"
"  set(CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION_ID ${CMAKE_MATCH_1})\n"
"  list(\n"
"      APPEND CMAKE_GET_OS_RELEASE_FALLBACK_RESULT\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_NAME\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_PRETTY_NAME\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_ID\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION\n"
"      CMAKE_GET_OS_RELEASE_FALLBACK_RESULT_VERSION_ID\n"
"    )\n"
"endif()\n"
"unset(CMAKE_GET_OS_RELEASE_FALLBACK_CONTENT)"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:244
msgid "Footnotes"
msgstr ""

#: ../../../command/cmake_host_system_information.rst:245
msgid "One MiB (mebibyte) is equal to 1024x1024 bytes."
msgstr ""
