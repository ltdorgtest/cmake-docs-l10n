# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:2
msgid "INTERFACE_INCLUDE_DIRECTORIES"
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:4
msgid "List of public include directories for a library."
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:6
msgid ""
"The :command:`target_include_directories` command populates this property "
"with values given to the ``PUBLIC`` and ``INTERFACE`` keywords.  Projects "
"may also get and set the property directly."
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:10
msgid ""
"Targets may populate this property to publish the include directories "
"required to compile against the headers for the target.  Consuming targets "
"can add entries to their own :prop_tgt:`INCLUDE_DIRECTORIES` property such "
"as ``$<TARGET_PROPERTY:foo,INTERFACE_INCLUDE_DIRECTORIES>`` to use the "
"include directories specified in the interface of ``foo``."
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:16
msgid ""
"Contents of ``INTERFACE_INCLUDE_DIRECTORIES`` may use \"generator "
"expressions\" with the syntax ``$<...>``.  See the :manual:`cmake-generator-"
"expressions(7)` manual for available expressions.  See the :manual:`cmake-"
"buildsystem(7)` manual for more on defining buildsystem properties."
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:21
msgid ""
"Include directories usage requirements commonly differ between the build-"
"tree and the install-tree.  The ``BUILD_INTERFACE`` and "
"``INSTALL_INTERFACE`` generator expressions can be used to describe separate "
"usage requirements based on the usage location.  Relative paths are allowed "
"within the ``INSTALL_INTERFACE`` expression and are interpreted relative to "
"the installation prefix.  For example:"
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:28
msgid ""
"set_property(TARGET mylib APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES\n"
"  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/mylib>\n"
"  $<INSTALL_INTERFACE:include/mylib>  # <prefix>/include/mylib\n"
"  )"
msgstr ""
