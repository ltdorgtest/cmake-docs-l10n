# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FortranCInterface.cmake:3
msgid "FortranCInterface"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:5
msgid "Fortran/C Interface Detection"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:7
msgid ""
"This module automatically detects the API by which C and Fortran languages "
"interact.  Variables indicate if the mangling is found:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:12
msgid ""
"FortranCInterface_GLOBAL_FOUND = Global subroutines and functions\n"
"FortranCInterface_MODULE_FOUND = Module subroutines and functions\n"
"                                 (declared by \"MODULE PROCEDURE\")"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:16
msgid ""
"A function is provided to generate a C header file containing macros to "
"mangle symbol names:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:21
msgid ""
"FortranCInterface_HEADER(<file>\n"
"                         [MACRO_NAMESPACE <macro-ns>]\n"
"                         [SYMBOL_NAMESPACE <ns>]\n"
"                         [SYMBOLS [<module>:]<function> ...])"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:26
msgid "It generates in <file> definitions of the following macros:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:30
msgid ""
"#define FortranCInterface_GLOBAL (name,NAME) ...\n"
"#define FortranCInterface_GLOBAL_(name,NAME) ...\n"
"#define FortranCInterface_MODULE (mod,name, MOD,NAME) ...\n"
"#define FortranCInterface_MODULE_(mod,name, MOD,NAME) ..."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:35
msgid "These macros mangle four categories of Fortran symbols, respectively:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:39
msgid ""
"- Global symbols without '_': call mysub()\n"
"- Global symbols with '_'   : call my_sub()\n"
"- Module symbols without '_': use mymod; call mysub()\n"
"- Module symbols with '_'   : use mymod; call my_sub()"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:44
msgid ""
"If mangling for a category is not known, its macro is left undefined. All "
"macros require raw names in both lower case and upper case.  The "
"MACRO_NAMESPACE option replaces the default \"FortranCInterface_\" prefix "
"with a given namespace \"<macro-ns>\"."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:49
msgid ""
"The SYMBOLS option lists symbols to mangle automatically with C preprocessor "
"definitions:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:54
msgid ""
"<function>          ==> #define <ns><function> ...\n"
"<module>:<function> ==> #define <ns><module>_<function> ..."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:57
msgid ""
"If the mangling for some symbol is not known then no preprocessor definition "
"is created, and a warning is displayed.  The SYMBOL_NAMESPACE option "
"prefixes all preprocessor definitions generated by the SYMBOLS option with a "
"given namespace \"<ns>\"."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:62
#: ../../../../Modules/FortranCInterface.cmake:72
msgid "Example usage:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:66
msgid ""
"include(FortranCInterface)\n"
"FortranCInterface_HEADER(FC.h MACRO_NAMESPACE \"FC_\")"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:69
msgid ""
"This creates a \"FC.h\" header that defines mangling macros FC_GLOBAL(), "
"FC_GLOBAL_(), FC_MODULE(), and FC_MODULE_()."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:76
msgid ""
"include(FortranCInterface)\n"
"FortranCInterface_HEADER(FCMangle.h\n"
"                         MACRO_NAMESPACE \"FC_\"\n"
"                         SYMBOL_NAMESPACE \"FC_\"\n"
"                         SYMBOLS mysub mymod:my_sub)"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:82
msgid ""
"This creates a \"FCMangle.h\" header that defines the same FC_*() mangling "
"macros as the previous example plus preprocessor symbols FC_mysub and "
"FC_mymod_my_sub."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:86
msgid ""
"Another function is provided to verify that the Fortran and C/C++ compilers "
"work together:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:91
msgid "FortranCInterface_VERIFY([CXX] [QUIET])"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:93
msgid ""
"It tests whether a simple test executable using Fortran and C (and C++ when "
"the CXX option is given) compiles and links successfully.  The result is "
"stored in the cache entry FortranCInterface_VERIFIED_C (or "
"FortranCInterface_VERIFIED_CXX if CXX is given) as a boolean.  If the check "
"fails and QUIET is not given the function terminates with a FATAL_ERROR "
"message describing the problem.  The purpose of this check is to stop a "
"build early for incompatible compiler combinations.  The test is built in "
"the Release configuration."
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:102
msgid ""
"FortranCInterface is aware of possible GLOBAL and MODULE manglings for many "
"Fortran compilers, but it also provides an interface to specify new possible "
"manglings.  Set the variables"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:108
msgid ""
"FortranCInterface_GLOBAL_SYMBOLS\n"
"FortranCInterface_MODULE_SYMBOLS"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:111
msgid ""
"before including FortranCInterface to specify manglings of the symbols "
"\"MySub\", \"My_Sub\", \"MyModule:MySub\", and \"My_Module:My_Sub\".  For "
"example, the code:"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:117
msgid ""
"set(FortranCInterface_GLOBAL_SYMBOLS mysub_ my_sub__ MYSUB_)\n"
"  #                                  ^^^^^  ^^^^^^   ^^^^^\n"
"set(FortranCInterface_MODULE_SYMBOLS\n"
"    __mymodule_MOD_mysub __my_module_MOD_my_sub)\n"
"  #   ^^^^^^^^     ^^^^^   ^^^^^^^^^     ^^^^^^\n"
"include(FortranCInterface)"
msgstr ""

#: ../../../../Modules/FortranCInterface.cmake:124
msgid ""
"tells FortranCInterface to try given GLOBAL and MODULE manglings. (The "
"carets point at raw symbol names for clarity in this example but are not "
"needed.)"
msgstr ""
