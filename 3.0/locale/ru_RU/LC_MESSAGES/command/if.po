# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/if.rst:2
msgid "if"
msgstr ""

#: ../../../command/if.rst:4
msgid "Conditionally execute a group of commands."
msgstr ""

#: ../../../command/if.rst:6
msgid ""
"if(expression)\n"
"  # then section.\n"
"  COMMAND1(ARGS ...)\n"
"  COMMAND2(ARGS ...)\n"
"  ...\n"
"elseif(expression2)\n"
"  # elseif section.\n"
"  COMMAND1(ARGS ...)\n"
"  COMMAND2(ARGS ...)\n"
"  ...\n"
"else(expression)\n"
"  # else section.\n"
"  COMMAND1(ARGS ...)\n"
"  COMMAND2(ARGS ...)\n"
"  ...\n"
"endif(expression)"
msgstr ""

#: ../../../command/if.rst:25
msgid ""
"Evaluates the given expression.  If the result is true, the commands in the "
"THEN section are invoked.  Otherwise, the commands in the else section are "
"invoked.  The elseif and else sections are optional.  You may have multiple "
"elseif clauses.  Note that the expression in the else and endif clause is "
"optional.  Long expressions can be used and there is a traditional order of "
"precedence.  Parenthetical expressions are evaluated first followed by unary "
"tests such as ``EXISTS``, ``COMMAND``, and ``DEFINED``.  Then any binary "
"tests such as ``EQUAL``, ``LESS``, ``GREATER``, ``STRLESS``, ``STRGREATER``, "
"``STREQUAL``, and ``MATCHES`` will be evaluated.  Then boolean ``NOT`` "
"operators and finally boolean ``AND`` and then ``OR`` operators will be "
"evaluated."
msgstr ""

#: ../../../command/if.rst:38
msgid "Possible expressions are:"
msgstr ""

#: ../../../command/if.rst:46
msgid "``if(<constant>)``"
msgstr ""

#: ../../../command/if.rst:41
msgid ""
"True if the constant is ``1``, ``ON``, ``YES``, ``TRUE``, ``Y``, or a non-"
"zero number.  False if the constant is ``0``, ``OFF``, ``NO``, ``FALSE``, "
"``N``, ``IGNORE``, ``NOTFOUND``, the empty string, or ends in the suffix ``-"
"NOTFOUND``.  Named boolean constants are case-insensitive.  If the argument "
"is not one of these constants, it is treated as a variable."
msgstr ""

#: ../../../command/if.rst:50
msgid "``if(<variable>)``"
msgstr ""

#: ../../../command/if.rst:49
msgid ""
"True if the variable is defined to a value that is not a false constant.  "
"False otherwise.  (Note macro arguments are not variables.)"
msgstr ""

#: ../../../command/if.rst:53
msgid "``if(NOT <expression>)``"
msgstr ""

#: ../../../command/if.rst:53
msgid "True if the expression is not true."
msgstr ""

#: ../../../command/if.rst:56
msgid "``if(<expr1> AND <expr2>)``"
msgstr ""

#: ../../../command/if.rst:56
msgid "True if both expressions would be considered true individually."
msgstr ""

#: ../../../command/if.rst:59
msgid "``if(<expr1> OR <expr2>)``"
msgstr ""

#: ../../../command/if.rst:59
msgid "True if either expression would be considered true individually."
msgstr ""

#: ../../../command/if.rst:63
msgid "``if(COMMAND command-name)``"
msgstr ""

#: ../../../command/if.rst:62
msgid ""
"True if the given name is a command, macro or function that can be invoked."
msgstr ""

#: ../../../command/if.rst:66
msgid "``if(POLICY policy-id)``"
msgstr ""

#: ../../../command/if.rst:66
msgid ""
"True if the given name is an existing policy (of the form ``CMP<NNNN>``)."
msgstr ""

#: ../../../command/if.rst:71
msgid "``if(TARGET target-name)``"
msgstr ""

#: ../../../command/if.rst:69
msgid ""
"True if the given name is an existing logical target name such as those "
"created by the :command:`add_executable`, :command:`add_library`, or :"
"command:`add_custom_target` commands."
msgstr ""

#: ../../../command/if.rst:75
msgid "``if(EXISTS path-to-file-or-directory)``"
msgstr ""

#: ../../../command/if.rst:74
msgid ""
"True if the named file or directory exists.  Behavior is well-defined only "
"for full paths."
msgstr ""

#: ../../../command/if.rst:83
msgid "``if(file1 IS_NEWER_THAN file2)``"
msgstr ""

#: ../../../command/if.rst:78
msgid ""
"True if file1 is newer than file2 or if one of the two files doesn't exist.  "
"Behavior is well-defined only for full paths.  If the file time stamps are "
"exactly the same, an ``IS_NEWER_THAN`` comparison returns true, so that any "
"dependent build operations will occur in the event of a tie.  This includes "
"the case of passing the same file name for both file1 and file2."
msgstr ""

#: ../../../command/if.rst:87
msgid "``if(IS_DIRECTORY path-to-directory)``"
msgstr ""

#: ../../../command/if.rst:86
msgid ""
"True if the given name is a directory.  Behavior is well-defined only for "
"full paths."
msgstr ""

#: ../../../command/if.rst:91
msgid "``if(IS_SYMLINK file-name)``"
msgstr ""

#: ../../../command/if.rst:90
msgid ""
"True if the given name is a symbolic link.  Behavior is well-defined only "
"for full paths."
msgstr ""

#: ../../../command/if.rst:94
msgid "``if(IS_ABSOLUTE path)``"
msgstr ""

#: ../../../command/if.rst:94
msgid "True if the given path is an absolute path."
msgstr ""

#: ../../../command/if.rst:98
msgid "``if(<variable|string> MATCHES regex)``"
msgstr ""

#: ../../../command/if.rst:97
msgid ""
"True if the given string or variable's value matches the given regular "
"expression."
msgstr ""

#: ../../../command/if.rst:102
msgid "``if(<variable|string> LESS <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:101
msgid ""
"True if the given string or variable's value is a valid number and less than "
"that on the right."
msgstr ""

#: ../../../command/if.rst:106
msgid "``if(<variable|string> GREATER <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:105
msgid ""
"True if the given string or variable's value is a valid number and greater "
"than that on the right."
msgstr ""

#: ../../../command/if.rst:110
msgid "``if(<variable|string> EQUAL <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:109
msgid ""
"True if the given string or variable's value is a valid number and equal to "
"that on the right."
msgstr ""

#: ../../../command/if.rst:114
msgid "``if(<variable|string> STRLESS <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:113
msgid ""
"True if the given string or variable's value is lexicographically less than "
"the string or variable on the right."
msgstr ""

#: ../../../command/if.rst:118
msgid "``if(<variable|string> STRGREATER <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:117
msgid ""
"True if the given string or variable's value is lexicographically greater "
"than the string or variable on the right."
msgstr ""

#: ../../../command/if.rst:122
msgid "``if(<variable|string> STREQUAL <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:121
msgid ""
"True if the given string or variable's value is lexicographically equal to "
"the string or variable on the right."
msgstr ""

#: ../../../command/if.rst:126
msgid "``if(<variable|string> VERSION_LESS <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:125 ../../../command/if.rst:129
#: ../../../command/if.rst:133
msgid ""
"Component-wise integer version number comparison (version format is ``major[."
"minor[.patch[.tweak]]]``)."
msgstr ""

#: ../../../command/if.rst:130
msgid "``if(<variable|string> VERSION_EQUAL <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:134
msgid "``if(<variable|string> VERSION_GREATER <variable|string>)``"
msgstr ""

#: ../../../command/if.rst:139
msgid "``if(DEFINED <variable>)``"
msgstr ""

#: ../../../command/if.rst:137
msgid ""
"True if the given variable is defined.  It does not matter if the variable "
"is true or false just if it has been set.  (Note macro arguments are not "
"variables.)"
msgstr ""

#: ../../../command/if.rst:145
msgid "``if((expression) AND (expression OR (expression)))``"
msgstr ""

#: ../../../command/if.rst:142
msgid ""
"The expressions inside the parenthesis are evaluated first and then the "
"remaining expression is evaluated as in the previous examples. Where there "
"are nested parenthesis the innermost are evaluated as part of evaluating the "
"expression that contains them."
msgstr ""

#: ../../../command/if.rst:147
msgid ""
"The if command was written very early in CMake's history, predating the ``${}"
"`` variable evaluation syntax, and for convenience evaluates variables named "
"by its arguments as shown in the above signatures. Note that normal variable "
"evaluation with ``${}`` applies before the if command even receives the "
"arguments.  Therefore code like::"
msgstr ""

#: ../../../command/if.rst:153
msgid ""
"set(var1 OFF)\n"
"set(var2 \"var1\")\n"
"if(${var2})"
msgstr ""

#: ../../../command/if.rst:157
msgid "appears to the if command as::"
msgstr ""

#: ../../../command/if.rst:159
msgid "if(var1)"
msgstr ""

#: ../../../command/if.rst:161
msgid ""
"and is evaluated according to the ``if(<variable>)`` case documented above.  "
"The result is ``OFF`` which is false.  However, if we remove the ``${}`` "
"from the example then the command sees::"
msgstr ""

#: ../../../command/if.rst:165
msgid "if(var2)"
msgstr ""

#: ../../../command/if.rst:167
msgid ""
"which is true because ``var2`` is defined to \"var1\" which is not a false "
"constant."
msgstr ""

#: ../../../command/if.rst:170
msgid ""
"Automatic evaluation applies in the other cases whenever the above-"
"documented signature accepts ``<variable|string>``:"
msgstr ""

#: ../../../command/if.rst:173
msgid ""
"The left hand argument to ``MATCHES`` is first checked to see if it is a "
"defined variable, if so the variable's value is used, otherwise the original "
"value is used."
msgstr ""

#: ../../../command/if.rst:177
msgid ""
"If the left hand argument to ``MATCHES`` is missing it returns false without "
"error"
msgstr ""

#: ../../../command/if.rst:180
msgid ""
"Both left and right hand arguments to ``LESS``, ``GREATER``, and ``EQUAL`` "
"are independently tested to see if they are defined variables, if so their "
"defined values are used otherwise the original value is used."
msgstr ""

#: ../../../command/if.rst:185
msgid ""
"Both left and right hand arguments to ``STRLESS``, ``STREQUAL``, and "
"``STRGREATER`` are independently tested to see if they are defined "
"variables, if so their defined values are used otherwise the original value "
"is used."
msgstr ""

#: ../../../command/if.rst:190
msgid ""
"Both left and right hand arguments to ``VERSION_LESS``, ``VERSION_EQUAL``, "
"and ``VERSION_GREATER`` are independently tested to see if they are defined "
"variables, if so their defined values are used otherwise the original value "
"is used."
msgstr ""

#: ../../../command/if.rst:195
msgid ""
"The right hand argument to ``NOT`` is tested to see if it is a boolean "
"constant, if so the value is used, otherwise it is assumed to be a variable "
"and it is dereferenced."
msgstr ""

#: ../../../command/if.rst:199
msgid ""
"The left and right hand arguments to ``AND`` and ``OR`` are independently "
"tested to see if they are boolean constants, if so they are used as such, "
"otherwise they are assumed to be variables and are dereferenced."
msgstr ""
