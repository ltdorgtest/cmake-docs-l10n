# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/string.rst:2
msgid "string"
msgstr ""

#: ../../../command/string.rst:4
msgid "String operations."
msgstr ""

#: ../../../command/string.rst:8
msgid ""
"string(REGEX MATCH <regular_expression>\n"
"       <output variable> <input> [<input>...])\n"
"string(REGEX MATCHALL <regular_expression>\n"
"       <output variable> <input> [<input>...])\n"
"string(REGEX REPLACE <regular_expression>\n"
"       <replace_expression> <output variable>\n"
"       <input> [<input>...])\n"
"string(REPLACE <match_string>\n"
"       <replace_string> <output variable>\n"
"       <input> [<input>...])\n"
"string(CONCAT <output variable> [<input>...])\n"
"string(<MD5|SHA1|SHA224|SHA256|SHA384|SHA512>\n"
"       <output variable> <input>)\n"
"string(COMPARE EQUAL <string1> <string2> <output variable>)\n"
"string(COMPARE NOTEQUAL <string1> <string2> <output variable>)\n"
"string(COMPARE LESS <string1> <string2> <output variable>)\n"
"string(COMPARE GREATER <string1> <string2> <output variable>)\n"
"string(ASCII <number> [<number> ...] <output variable>)\n"
"string(CONFIGURE <string1> <output variable>\n"
"       [@ONLY] [ESCAPE_QUOTES])\n"
"string(TOUPPER <string1> <output variable>)\n"
"string(TOLOWER <string1> <output variable>)\n"
"string(LENGTH <string> <output variable>)\n"
"string(SUBSTRING <string> <begin> <length> <output variable>)\n"
"string(STRIP <string> <output variable>)\n"
"string(RANDOM [LENGTH <length>] [ALPHABET <alphabet>]\n"
"       [RANDOM_SEED <seed>] <output variable>)\n"
"string(FIND <string> <substring> <output variable> [REVERSE])\n"
"string(TIMESTAMP <output variable> [<format string>] [UTC])\n"
"string(MAKE_C_IDENTIFIER <input string> <output variable>)\n"
"string(GENEX_STRIP <input string> <output variable>)\n"
"string(UUID <output variable> NAMESPACE <namespace> NAME <name>\n"
"       TYPE <MD5|SHA1> [UPPER])"
msgstr ""

#: ../../../command/string.rst:42
msgid ""
"REGEX MATCH will match the regular expression once and store the match in "
"the output variable."
msgstr ""

#: ../../../command/string.rst:45
msgid ""
"REGEX MATCHALL will match the regular expression as many times as possible "
"and store the matches in the output variable as a list."
msgstr ""

#: ../../../command/string.rst:48
msgid ""
"REGEX REPLACE will match the regular expression as many times as possible "
"and substitute the replacement expression for the match in the output.  The "
"replace expression may refer to paren-delimited subexpressions of the match "
"using \\1, \\2, ..., \\9.  Note that two backslashes (\\\\1) are required in "
"CMake code to get a backslash through argument parsing."
msgstr ""

#: ../../../command/string.rst:55
msgid ""
"REPLACE will replace all occurrences of match_string in the input with "
"replace_string and store the result in the output."
msgstr ""

#: ../../../command/string.rst:58
msgid ""
"CONCAT will concatenate all the input arguments together and store the "
"result in the named output variable."
msgstr ""

#: ../../../command/string.rst:61
msgid ""
"MD5, SHA1, SHA224, SHA256, SHA384, and SHA512 will compute a cryptographic "
"hash of the input string."
msgstr ""

#: ../../../command/string.rst:64
msgid ""
"COMPARE EQUAL/NOTEQUAL/LESS/GREATER will compare the strings and store true "
"or false in the output variable."
msgstr ""

#: ../../../command/string.rst:67
msgid "ASCII will convert all numbers into corresponding ASCII characters."
msgstr ""

#: ../../../command/string.rst:69
msgid ""
"CONFIGURE will transform a string like CONFIGURE_FILE transforms a file."
msgstr ""

#: ../../../command/string.rst:72
msgid "TOUPPER/TOLOWER will convert string to upper/lower characters."
msgstr ""

#: ../../../command/string.rst:74
msgid "LENGTH will return a given string's length."
msgstr ""

#: ../../../command/string.rst:76
msgid ""
"SUBSTRING will return a substring of a given string. If length is -1 the "
"remainder of the string starting at begin will be returned. If string is "
"shorter than length then end of string is used instead."
msgstr ""

#: ../../../command/string.rst:81
msgid ""
"CMake 3.1 and below reported an error if length pointed past the end of "
"string."
msgstr ""

#: ../../../command/string.rst:84
msgid ""
"STRIP will return a substring of a given string with leading and trailing "
"spaces removed."
msgstr ""

#: ../../../command/string.rst:87
msgid ""
"RANDOM will return a random string of given length consisting of characters "
"from the given alphabet.  Default length is 5 characters and default "
"alphabet is all numbers and upper and lower case letters. If an integer "
"RANDOM_SEED is given, its value will be used to seed the random number "
"generator."
msgstr ""

#: ../../../command/string.rst:93
msgid ""
"FIND will return the position where the given substring was found in the "
"supplied string.  If the REVERSE flag was used, the command will search for "
"the position of the last occurrence of the specified substring."
msgstr ""

#: ../../../command/string.rst:98
msgid "The following characters have special meaning in regular expressions:"
msgstr ""

#: ../../../command/string.rst:102
msgid ""
"^         Matches at beginning of input\n"
"$         Matches at end of input\n"
".         Matches any single character\n"
"[ ]       Matches any character(s) inside the brackets\n"
"[^ ]      Matches any character(s) not inside the brackets\n"
" -        Inside brackets, specifies an inclusive range between\n"
"          characters on either side e.g. [a-f] is [abcdef]\n"
"          To match a literal - using brackets, make it the first\n"
"          or the last character e.g. [+*/-] matches basic\n"
"          mathematical operators.\n"
"*         Matches preceding pattern zero or more times\n"
"+         Matches preceding pattern one or more times\n"
"?         Matches preceding pattern zero or once only\n"
"|         Matches a pattern on either side of the |\n"
"()        Saves a matched subexpression, which can be referenced\n"
"          in the REGEX REPLACE operation. Additionally it is saved\n"
"          by all regular expression-related commands, including\n"
"          e.g. if( MATCHES ), in the variables CMAKE_MATCH_(0..9)."
msgstr ""

#: ../../../command/string.rst:121
msgid ""
"``*``, ``+`` and ``?`` have higher precedence than concatenation.  | has "
"lower precedence than concatenation.  This means that the regular expression "
"\"^ab+d$\" matches \"abbd\" but not \"ababd\", and the regular expression "
"\"^(ab|cd)$\" matches \"ab\" but not \"abd\"."
msgstr ""

#: ../../../command/string.rst:126
msgid ""
"TIMESTAMP will write a string representation of the current date and/or time "
"to the output variable."
msgstr ""

#: ../../../command/string.rst:129
msgid ""
"Should the command be unable to obtain a timestamp the output variable will "
"be set to the empty string \"\"."
msgstr ""

#: ../../../command/string.rst:132
msgid ""
"The optional UTC flag requests the current date/time representation to be in "
"Coordinated Universal Time (UTC) rather than local time."
msgstr ""

#: ../../../command/string.rst:135
msgid ""
"The optional <format string> may contain the following format specifiers:"
msgstr ""

#: ../../../command/string.rst:140
msgid ""
"%d        The day of the current month (01-31).\n"
"%H        The hour on a 24-hour clock (00-23).\n"
"%I        The hour on a 12-hour clock (01-12).\n"
"%j        The day of the current year (001-366).\n"
"%m        The month of the current year (01-12).\n"
"%M        The minute of the current hour (00-59).\n"
"%S        The second of the current minute.\n"
"          60 represents a leap second. (00-60)\n"
"%U        The week number of the current year (00-53).\n"
"%w        The day of the current week. 0 is Sunday. (0-6)\n"
"%y        The last two digits of the current year (00-99)\n"
"%Y        The current year."
msgstr ""

#: ../../../command/string.rst:153
msgid ""
"Unknown format specifiers will be ignored and copied to the output as-is."
msgstr ""

#: ../../../command/string.rst:156
msgid "If no explicit <format string> is given it will default to:"
msgstr ""

#: ../../../command/string.rst:160
msgid ""
"%Y-%m-%dT%H:%M:%S    for local time.\n"
"%Y-%m-%dT%H:%M:%SZ   for UTC."
msgstr ""

#: ../../../command/string.rst:163
msgid ""
"MAKE_C_IDENTIFIER will write a string which can be used as an identifier in "
"C."
msgstr ""

#: ../../../command/string.rst:166
msgid ""
"``GENEX_STRIP`` will strip any :manual:`generator expressions <cmake-"
"generator-expressions(7)>` from the ``input string`` and store the result in "
"the ``output variable``."
msgstr ""

#: ../../../command/string.rst:170
msgid ""
"UUID creates a univerally unique identifier (aka GUID) as per RFC4122 based "
"on the hash of the combined values of <namespace> (which itself has to be a "
"valid UUID) and <name>. The hash algorithm can be either ``MD5`` (Version 3 "
"UUID) or ``SHA1`` (Version 5 UUID). A UUID has the format ``xxxxxxxx-xxxx-"
"xxxx-xxxx-xxxxxxxxxxxx`` where each `x` represents a lower case hexadecimal "
"character. Where required an uppercase representation can be requested with "
"the optional ``UPPER`` flag."
msgstr ""
