# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/target_include_directories.rst:2
msgid "target_include_directories"
msgstr ""

#: ../../../command/target_include_directories.rst:4
msgid "Add include directories to a target."
msgstr ""

#: ../../../command/target_include_directories.rst:8
msgid ""
"target_include_directories(<target> [SYSTEM] [BEFORE]\n"
"  <INTERFACE|PUBLIC|PRIVATE> [items1...]\n"
"  [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])"
msgstr ""

#: ../../../command/target_include_directories.rst:12
msgid ""
"Specify include directories or targets to use when compiling a given "
"target.  The named ``<target>`` must have been created by a command such as :"
"command:`add_executable` or :command:`add_library` and must not be an :"
"prop_tgt:`IMPORTED` target."
msgstr ""

#: ../../../command/target_include_directories.rst:17
msgid ""
"If ``BEFORE`` is specified, the content will be prepended to the property "
"instead of being appended."
msgstr ""

#: ../../../command/target_include_directories.rst:20
msgid ""
"The ``INTERFACE``, ``PUBLIC`` and ``PRIVATE`` keywords are required to "
"specify the scope of the following arguments.  ``PRIVATE`` and ``PUBLIC`` "
"items will populate the :prop_tgt:`INCLUDE_DIRECTORIES` property of "
"``<target>``. ``PUBLIC`` and ``INTERFACE`` items will populate the :prop_tgt:"
"`INTERFACE_INCLUDE_DIRECTORIES` property of ``<target>``.  The following "
"arguments specify include directories."
msgstr ""

#: ../../../command/target_include_directories.rst:28
msgid ""
"Specified include directories may be absolute paths or relative paths. "
"Repeated calls for the same <target> append items in the order called.  If "
"``SYSTEM`` is specified, the compiler will be told the directories are meant "
"as system include directories on some platforms (signalling this setting "
"might achieve effects such as the compiler skipping warnings, or these fixed-"
"install system files not being considered in dependency calculations - see "
"compiler docs).  If ``SYSTEM`` is used together with ``PUBLIC`` or "
"``INTERFACE``, the :prop_tgt:`INTERFACE_SYSTEM_INCLUDE_DIRECTORIES` target "
"property will be populated with the specified directories."
msgstr ""

#: ../../../command/target_include_directories.rst:39
msgid ""
"Arguments to ``target_include_directories`` may use \"generator "
"expressions\" with the syntax ``$<...>``.  See the :manual:`cmake-generator-"
"expressions(7)` manual for available expressions.  See the :manual:`cmake-"
"buildsystem(7)` manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/target_include_directories.rst:44
msgid ""
"Include directories usage requirements commonly differ between the build-"
"tree and the install-tree.  The ``BUILD_INTERFACE`` and "
"``INSTALL_INTERFACE`` generator expressions can be used to describe separate "
"usage requirements based on the usage location.  Relative paths are allowed "
"within the ``INSTALL_INTERFACE`` expression and are interpreted relative to "
"the installation prefix.  For example:"
msgstr ""

#: ../../../command/target_include_directories.rst:51
msgid ""
"target_include_directories(mylib PUBLIC\n"
"  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/mylib>\n"
"  $<INSTALL_INTERFACE:include/mylib>  # <prefix>/include/mylib\n"
")"
msgstr ""
