# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/list.rst:2
msgid "list"
msgstr ""

#: ../../../command/list.rst:4
msgid "Operations on :ref:`semicolon-separated lists <CMake Language Lists>`."
msgstr ""

#: ../../../command/list.rst:7
msgid "Synopsis"
msgstr ""

#: ../../../command/list.rst:11
msgid ""
"`Reading`_\n"
"  list(`LENGTH`_ <list> <out-var>)\n"
"  list(`GET`_ <list> <element index> [<index> ...] <out-var>)\n"
"  list(`JOIN`_ <list> <glue> <out-var>)\n"
"  list(`SUBLIST`_ <list> <begin> <length> <out-var>)\n"
"\n"
"`Search`_\n"
"  list(`FIND`_ <list> <value> <out-var>)\n"
"\n"
"`Modification`_\n"
"  list(`APPEND`_ <list> [<element>...])\n"
"  list(`FILTER`_ <list> {INCLUDE | EXCLUDE} REGEX <regex>)\n"
"  list(`INSERT`_ <list> <index> [<element>...])\n"
"  list(`POP_BACK`_ <list> [<out-var>...])\n"
"  list(`POP_FRONT`_ <list> [<out-var>...])\n"
"  list(`PREPEND`_ <list> [<element>...])\n"
"  list(`REMOVE_ITEM`_ <list> <value>...)\n"
"  list(`REMOVE_AT`_ <list> <index>...)\n"
"  list(`REMOVE_DUPLICATES`_ <list>)\n"
"  list(`TRANSFORM`_ <list> <ACTION> [...])\n"
"\n"
"`Ordering`_\n"
"  list(`REVERSE`_ <list>)\n"
"  list(`SORT`_ <list> [...])"
msgstr ""

#: ../../../command/list.rst:37
msgid "Introduction"
msgstr ""

#: ../../../command/list.rst:39
msgid ""
"The list subcommands :cref:`APPEND`, :cref:`INSERT`, :cref:`FILTER`, :cref:"
"`PREPEND`, :cref:`POP_BACK`, :cref:`POP_FRONT`, :cref:`REMOVE_AT`, :cref:"
"`REMOVE_ITEM`, :cref:`REMOVE_DUPLICATES`, :cref:`REVERSE` and :cref:`SORT` "
"may create new values for the list within the current CMake variable scope.  "
"Similar to the :command:`set` command, the ``list`` command creates new "
"variable values in the current scope, even if the list itself is actually "
"defined in a parent scope.  To propagate the results of these operations "
"upwards, use :command:`set` with ``PARENT_SCOPE``, :command:`set` with "
"``CACHE INTERNAL``, or some other means of value propagation."
msgstr ""

#: ../../../command/list.rst:52
msgid ""
"A list in cmake is a ``;`` separated group of strings.  To create a list, "
"the :command:`set` command can be used.  For example, ``set(var a b c d e)`` "
"creates a list with ``a;b;c;d;e``, and ``set(var \"a b c d e\")`` creates a "
"string or a list with one item in it. (Note that macro arguments are not "
"variables, and therefore cannot be used in ``LIST`` commands.)"
msgstr ""

#: ../../../command/list.rst:59
msgid ""
"Individual elements may not contain an unequal number of ``[`` and ``]`` "
"characters, and may not end in a backslash (``\\``). See :ref:`semicolon-"
"separated lists <CMake Language Lists>` for details."
msgstr ""

#: ../../../command/list.rst:65
msgid ""
"When specifying index values, if ``<element index>`` is 0 or greater, it is "
"indexed from the beginning of the list, with 0 representing the first list "
"element.  If ``<element index>`` is -1 or lesser, it is indexed from the end "
"of the list, with -1 representing the last list element. Be careful when "
"counting with negative indices: they do not start from 0.  -0 is equivalent "
"to 0, the first list element."
msgstr ""

#: ../../../command/list.rst:73
msgid "Reading"
msgstr ""

#: ../../../command/list.rst:78
msgid "Returns the list's length."
msgstr ""

#: ../../../command/list.rst:83
msgid "Returns the list of elements specified by indices from the list."
msgstr ""

#: ../../../command/list.rst:89
msgid ""
"Returns a string joining all list's elements using the glue string. To join "
"multiple strings, which are not part of a list, use :command:`string(JOIN)`."
msgstr ""

#: ../../../command/list.rst:98
msgid ""
"Returns a sublist of the given list. If ``<length>`` is 0, an empty list "
"will be returned. If ``<length>`` is -1 or the list is smaller than "
"``<begin>+<length>`` then the remaining elements of the list starting at "
"``<begin>`` will be returned."
msgstr ""

#: ../../../command/list.rst:104
msgid "Search"
msgstr ""

#: ../../../command/list.rst:109
msgid ""
"Returns the index of the element specified in the list or ``-1`` if it "
"wasn't found."
msgstr ""

#: ../../../command/list.rst:113
msgid "Modification"
msgstr ""

#: ../../../command/list.rst:118
msgid ""
"Appends elements to the list. If no variable named ``<list>`` exists in the "
"current scope its value is treated as empty and the elements are appended to "
"that empty list."
msgstr ""

#: ../../../command/list.rst:127
msgid ""
"Includes or removes items from the list that match the mode's pattern. In "
"``REGEX`` mode, items will be matched against the given regular expression."
msgstr ""

#: ../../../command/list.rst:130
msgid ""
"For more information on regular expressions look under :ref:`string(REGEX) "
"<Regex Specification>`."
msgstr ""

#: ../../../command/list.rst:136
msgid ""
"Inserts elements to the list to the specified index. It is an error to "
"specify an out-of-range index. Valid indexes are 0 to `N` where `N` is the "
"length of the list, inclusive. An empty list has length 0. If no variable "
"named ``<list>`` exists in the current scope its value is treated as empty "
"and the elements are inserted in that empty list."
msgstr ""

#: ../../../command/list.rst:148
msgid ""
"If no variable name is given, removes exactly one element. Otherwise, with "
"`N` variable names provided, assign the last `N` elements' values to the "
"given variables and then remove the last `N` values from ``<list>``."
msgstr ""

#: ../../../command/list.rst:158
msgid ""
"If no variable name is given, removes exactly one element. Otherwise, with "
"`N` variable names provided, assign the first `N` elements' values to the "
"given variables and then remove the first `N` values from ``<list>``."
msgstr ""

#: ../../../command/list.rst:168
msgid ""
"Insert elements to the 0th position in the list. If no variable named "
"``<list>`` exists in the current scope its value is treated as empty and the "
"elements are prepended to that empty list."
msgstr ""

#: ../../../command/list.rst:175
msgid "Removes all instances of the given items from the list."
msgstr ""

#: ../../../command/list.rst:180
msgid "Removes items at given indices from the list."
msgstr ""

#: ../../../command/list.rst:185
msgid ""
"Removes duplicated items in the list. The relative order of items is "
"preserved, but if duplicates are encountered, only the first instance is "
"preserved."
msgstr ""

#: ../../../command/list.rst:195
msgid ""
"Transforms the list by applying an ``<ACTION>`` to all or, by specifying a "
"``<SELECTOR>``, to the selected elements of the list, storing the result in-"
"place or in the specified output variable."
msgstr ""

#: ../../../command/list.rst:201
msgid ""
"The ``TRANSFORM`` sub-command does not change the number of elements in the "
"list. If a ``<SELECTOR>`` is specified, only some elements will be changed, "
"the other ones will remain the same as before the transformation."
msgstr ""

#: ../../../command/list.rst:205
msgid ""
"``<ACTION>`` specifies the action to apply to the elements of the list. The "
"actions have exactly the same semantics as sub-commands of the :command:"
"`string` command.  ``<ACTION>`` must be one of the following:"
msgstr ""

#: ../../../command/list.rst:209
msgid ""
":command:`APPEND <string(APPEND)>`, :command:`PREPEND <string(PREPEND)>`"
msgstr ""

#: ../../../command/list.rst:210
msgid "Append, prepend specified value to each element of the list."
msgstr ""

#: ../../../command/list.rst:216
msgid ""
":command:`TOLOWER <string(TOLOWER)>`, :command:`TOUPPER <string(TOUPPER)>`"
msgstr ""

#: ../../../command/list.rst:217
msgid "Convert each element of the list to lower, upper characters."
msgstr ""

#: ../../../command/list.rst:223
msgid ":command:`STRIP <string(STRIP)>`"
msgstr ""

#: ../../../command/list.rst:224
msgid "Remove leading and trailing spaces from each element of the list."
msgstr ""

#: ../../../command/list.rst:230
msgid ":command:`GENEX_STRIP <string(GENEX_STRIP)>`"
msgstr ""

#: ../../../command/list.rst:231
msgid ""
"Strip any :manual:`generator expressions <cmake-generator-expressions(7)>` "
"from each element of the list."
msgstr ""

#: ../../../command/list.rst:239
msgid ":command:`REPLACE <string(REGEX REPLACE)>`:"
msgstr ""

#: ../../../command/list.rst:240
msgid ""
"Match the regular expression as many times as possible and substitute the "
"replacement expression for the match for each element of the list (same "
"semantic as :command:`string(REGEX REPLACE)`)."
msgstr ""

#: ../../../command/list.rst:249
msgid ""
"``<SELECTOR>`` determines which elements of the list will be transformed. "
"Only one type of selector can be specified at a time. When given, "
"``<SELECTOR>`` must be one of the following:"
msgstr ""

#: ../../../command/list.rst:253
msgid "``AT``"
msgstr ""

#: ../../../command/list.rst:254
msgid "Specify a list of indexes."
msgstr ""

#: ../../../command/list.rst:256
msgid "list(TRANSFORM <list> <ACTION> AT <index> [<index> ...] ...)"
msgstr ""

#: ../../../command/list.rst:260
msgid "``FOR``"
msgstr ""

#: ../../../command/list.rst:261
msgid ""
"Specify a range with, optionally, an increment used to iterate over the "
"range."
msgstr ""

#: ../../../command/list.rst:264
msgid "list(TRANSFORM <list> <ACTION> FOR <start> <stop> [<step>] ...)"
msgstr ""

#: ../../../command/list.rst:268
msgid "``REGEX``"
msgstr ""

#: ../../../command/list.rst:269
msgid ""
"Specify a regular expression. Only elements matching the regular expression "
"will be transformed."
msgstr ""

#: ../../../command/list.rst:272
msgid "list(TRANSFORM <list> <ACTION> REGEX <regular_expression> ...)"
msgstr ""

#: ../../../command/list.rst:278
msgid "Ordering"
msgstr ""

#: ../../../command/list.rst:283
msgid "Reverses the contents of the list in-place."
msgstr ""

#: ../../../command/list.rst:288
msgid "Sorts the list in-place alphabetically."
msgstr ""

#: ../../../command/list.rst:290
msgid "Added the ``COMPARE``, ``CASE``, and ``ORDER`` options."
msgstr ""

#: ../../../command/list.rst:293
msgid "Added the ``COMPARE NATURAL`` option."
msgstr ""

#: ../../../command/list.rst:296
msgid ""
"Use the ``COMPARE`` keyword to select the comparison method for sorting. The "
"``<compare>`` option should be one of:"
msgstr ""

#: ../../../command/list.rst:299
msgid "``STRING``"
msgstr ""

#: ../../../command/list.rst:300
msgid ""
"Sorts a list of strings alphabetically. This is the default behavior if the "
"``COMPARE`` option is not given."
msgstr ""

#: ../../../command/list.rst:303
msgid "``FILE_BASENAME``"
msgstr ""

#: ../../../command/list.rst:304
msgid "Sorts a list of pathnames of files by their basenames."
msgstr ""

#: ../../../command/list.rst:306
msgid "``NATURAL``"
msgstr ""

#: ../../../command/list.rst:307
msgid ""
"Sorts a list of strings using natural order (see ``strverscmp(3)`` manual), "
"i.e. such that contiguous digits are compared as whole numbers. For example: "
"the following list `10.0 1.1 2.1 8.0 2.0 3.1` will be sorted as `1.1 2.0 2.1 "
"3.1 8.0 10.0` if the ``NATURAL`` comparison is selected where it will be "
"sorted as `1.1 10.0 2.0 2.1 3.1 8.0` with the ``STRING`` comparison."
msgstr ""

#: ../../../command/list.rst:315
msgid ""
"Use the ``CASE`` keyword to select a case sensitive or case insensitive sort "
"mode.  The ``<case>`` option should be one of:"
msgstr ""

#: ../../../command/list.rst:318
msgid "``SENSITIVE``"
msgstr ""

#: ../../../command/list.rst:319
msgid ""
"List items are sorted in a case-sensitive manner. This is the default "
"behavior if the ``CASE`` option is not given."
msgstr ""

#: ../../../command/list.rst:322
msgid "``INSENSITIVE``"
msgstr ""

#: ../../../command/list.rst:323
msgid ""
"List items are sorted case insensitively.  The order of items which differ "
"only by upper/lowercase is not specified."
msgstr ""

#: ../../../command/list.rst:326
msgid ""
"To control the sort order, the ``ORDER`` keyword can be given. The "
"``<order>`` option should be one of:"
msgstr ""

#: ../../../command/list.rst:329
msgid "``ASCENDING``"
msgstr ""

#: ../../../command/list.rst:330
msgid ""
"Sorts the list in ascending order. This is the default behavior when the "
"``ORDER`` option is not given."
msgstr ""

#: ../../../command/list.rst:333
msgid "``DESCENDING``"
msgstr ""

#: ../../../command/list.rst:334
msgid "Sorts the list in descending order."
msgstr ""
