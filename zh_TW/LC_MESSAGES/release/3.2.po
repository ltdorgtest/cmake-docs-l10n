# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.2.rst:2
msgid "CMake 3.2 Release Notes"
msgstr ""

#: ../../../release/3.2.rst:8
msgid "Changes made since CMake 3.1 include the following."
msgstr ""

#: ../../../release/3.2.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.2.rst:14
msgid "Syntax"
msgstr ""

#: ../../../release/3.2.rst:16
msgid ""
"CMake learned to support unicode characters :ref:`encoded as UTF-8 <CMake "
"Language Encoding>` on Windows.  This was already supported on platforms "
"whose system APIs accept UTF-8 encoded strings. Unicode characters may now "
"be used in CMake code, paths to source files, configured files such as ``.h."
"in`` files, and other files read and written by CMake.  Note that because "
"CMake interoperates with many other tools, there may still be some "
"limitations when using certain unicode characters."
msgstr ""

#: ../../../release/3.2.rst:27
msgid "Commands"
msgstr ""

#: ../../../release/3.2.rst:29
msgid ""
"The :command:`add_custom_command` and :command:`add_custom_target` commands "
"learned a new ``BYPRODUCTS`` option to specify files produced as side "
"effects of the custom commands.  These are not outputs because they do not "
"always have to be newer than inputs."
msgstr ""

#: ../../../release/3.2.rst:34
msgid ""
"The :command:`add_custom_command` and :command:`add_custom_target` commands "
"learned a new ``USES_TERMINAL`` option to request that the command be given "
"direct access to the terminal if possible. The :generator:`Ninja` generator "
"will places such commands in the ``console`` :prop_gbl:`pool <JOB_POOLS>`.  "
"Build targets provided by CMake that are meant for individual interactive "
"use, such as ``install``, are now placed in this pool."
msgstr ""

#: ../../../release/3.2.rst:42
msgid ""
"A new :command:`continue` command was added that can be called inside loop "
"contexts to end the current iteration and start the next one at the top of "
"the loop block."
msgstr ""

#: ../../../release/3.2.rst:46
msgid ""
"The :command:`file(LOCK)` subcommand was created to allow CMake processes to "
"synchronize through file and directory locks."
msgstr ""

#: ../../../release/3.2.rst:49
msgid ""
"The :command:`file(STRINGS)` now supports UTF-16LE, UTF-16BE, UTF-32LE, "
"UTF-32BE as ``ENCODING`` options."
msgstr ""

#: ../../../release/3.2.rst:52
msgid ""
"The :command:`install(EXPORT)` command now works with an absolute "
"``DESTINATION`` even if targets in the export set are installed with a "
"destination or :ref:`usage requirements <Target Usage Requirements>` "
"specified relative to the install prefix.  The value of the :variable:"
"`CMAKE_INSTALL_PREFIX` variable is hard-coded into the installed export file "
"as the base for relative references."
msgstr ""

#: ../../../release/3.2.rst:59
msgid ""
"The :command:`try_compile` command source file signature now honors link "
"flags (e.g. :variable:`CMAKE_EXE_LINKER_FLAGS`) in the generated test "
"project.  See policy :policy:`CMP0056`."
msgstr ""

#: ../../../release/3.2.rst:63
msgid ""
"The :command:`try_run` command learned to honor the ``LINK_LIBRARIES`` "
"option just as :command:`try_compile` already does."
msgstr ""

#: ../../../release/3.2.rst:66
msgid ""
"The :command:`file(GENERATE)` command now generates the output file with the "
"same permissions as the input file if set."
msgstr ""

#: ../../../release/3.2.rst:69
msgid ""
"The :command:`file(GENERATE)` command can now generate files which are used "
"as source files for buildsystem targets.  Generated files automatically get "
"their :prop_sf:`GENERATED` property set to ``TRUE``."
msgstr ""

#: ../../../release/3.2.rst:74
msgid "Variables"
msgstr ""

#: ../../../release/3.2.rst:76
msgid ""
"The :variable:`CMAKE_MATCH_COUNT` variable was introduced to record the "
"number of matches made in the last regular expression matched in an :command:"
"`if` command or a :command:`string` command."
msgstr ""

#: ../../../release/3.2.rst:81
msgid "Properties"
msgstr ""

#: ../../../release/3.2.rst:83
msgid ""
"An :prop_tgt:`ANDROID_API_MIN` target property was introduced to specify the "
"minimum version to be targeted by the toolchain."
msgstr ""

#: ../../../release/3.2.rst:86
msgid ""
"A :prop_sf:`VS_SHADER_FLAGS` source file property was added to specify "
"additional shader flags to ``.hlsl`` files, for the Visual Studio generators."
msgstr ""

#: ../../../release/3.2.rst:91
msgid "Modules"
msgstr ""

#: ../../../release/3.2.rst:93
msgid ""
"The :module:`ExternalData` module learned to support :ref:`Custom Fetch "
"Scripts <ExternalData Custom Fetch Scripts>`. This allows projects to "
"specify custom ``.cmake`` scripts for fetching data objects during the build."
msgstr ""

#: ../../../release/3.2.rst:98
msgid ""
"The :module:`ExternalProject` module learned options to create independent "
"external project step targets that do not depend on the builtin steps."
msgstr ""

#: ../../../release/3.2.rst:102
msgid ""
"The :module:`ExternalProject` module :command:`ExternalProject_Add` command "
"learned a new ``CMAKE_CACHE_DEFAULT_ARGS`` option to initialize cache values "
"in the external project without setting them on future builds."
msgstr ""

#: ../../../release/3.2.rst:107
msgid ""
"The :module:`ExternalProject` module :command:`ExternalProject_Add` command "
"learned a new ``TEST_EXCLUDE_FROM_MAIN`` option to exclude tests from the "
"main build."
msgstr ""

#: ../../../release/3.2.rst:111
msgid ""
"The :module:`ExternalProject` module :command:`ExternalProject_Add` command "
"learned a new ``UPDATE_DISCONNECTED`` option to avoid automatically updating "
"the source tree checkout from version control."
msgstr ""

#: ../../../release/3.2.rst:115
msgid ""
"The :module:`FindCUDA` module learned about the ``cusolver`` library in CUDA "
"7.0."
msgstr ""

#: ../../../release/3.2.rst:118
msgid ""
"The :module:`FindGit` module learned to find the ``git`` command-line tool "
"that comes with GitHub for Windows installed in user home directories."
msgstr ""

#: ../../../release/3.2.rst:121
msgid ""
"A :module:`FindGSL` module was introduced to find the GNU Scientific Library."
msgstr ""

#: ../../../release/3.2.rst:124
msgid ""
"A :module:`FindIntl` module was introduced to find the Gettext ``libintl`` "
"library."
msgstr ""

#: ../../../release/3.2.rst:127
msgid "The :module:`FindLATEX` module learned to support components."
msgstr ""

#: ../../../release/3.2.rst:129
msgid "The :module:`FindMPI` module learned to find MS-MPI on Windows."
msgstr ""

#: ../../../release/3.2.rst:131
msgid ""
"The :module:`FindOpenSSL` module now reports ``crypto`` and ``ssl`` "
"libraries separately in ``OPENSSL_CRYPTO_LIBRARY`` and "
"``OPENSSL_SSL_LIBRARY``, respectively, to allow applications to link to one "
"without the other."
msgstr ""

#: ../../../release/3.2.rst:136
msgid ""
"The :module:`WriteCompilerDetectionHeader` module learned to create a define "
"for portability of the ``cxx_thread_local`` feature. The define expands to "
"either the C++11 ``thread_local`` keyword, or a pre-standardization compiler-"
"specific equivalent, as appropriate."
msgstr ""

#: ../../../release/3.2.rst:141
msgid ""
"The :module:`WriteCompilerDetectionHeader` module learned to create multiple "
"output files per compiler and per language, instead of creating one large "
"file."
msgstr ""

#: ../../../release/3.2.rst:146
msgid "CTest"
msgstr ""

#: ../../../release/3.2.rst:148
msgid ""
"The :command:`ctest_coverage` command learned to support Delphi coverage."
msgstr ""

#: ../../../release/3.2.rst:150
msgid ""
"The :command:`ctest_coverage` command learned to support Javascript coverage."
msgstr ""

#: ../../../release/3.2.rst:152
msgid ""
"The :module:`CTestCoverageCollectGCOV` module was introduced as an "
"alternative to the :command:`ctest_coverage` command for collecting ``gcov`` "
"results for submission to CDash."
msgstr ""

#: ../../../release/3.2.rst:157
msgid "CPack"
msgstr ""

#: ../../../release/3.2.rst:159
msgid ""
"The :module:`CPackRPM` module learned options to set per-component "
"descriptions and summaries.  See the :variable:"
"`CPACK_RPM_<component>_PACKAGE_DESCRIPTION` and :variable:"
"`CPACK_RPM_<component>_PACKAGE_SUMMARY` variables."
msgstr ""

#: ../../../release/3.2.rst:164
msgid ""
"The :module:`CPackRPM` module learned options to specify requirements for "
"pre- and post-install scripts.  See the :variable:"
"`CPACK_RPM_PACKAGE_REQUIRES_PRE` and :variable:"
"`CPACK_RPM_PACKAGE_REQUIRES_POST` variables."
msgstr ""

#: ../../../release/3.2.rst:169
msgid ""
"The :module:`CPackRPM` module learned options to specify requirements for "
"pre- and post-uninstall scripts.  See the :variable:"
"`CPACK_RPM_PACKAGE_REQUIRES_PREUN` and :variable:"
"`CPACK_RPM_PACKAGE_REQUIRES_POSTUN` variables."
msgstr ""

#: ../../../release/3.2.rst:174
msgid ""
"The :module:`CPackRPM` module learned a new :variable:"
"`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` variable to specify a component-"
"specific value to use instead of :variable:`CPACK_PACKAGING_INSTALL_PREFIX`."
msgstr ""

#: ../../../release/3.2.rst:179
msgid ""
"The :module:`CPackRPM` module learned a new :variable:"
"`CPACK_RPM_RELOCATION_PATHS` variable to specify multiple relocation "
"prefixes for a single rpm package."
msgstr ""

#: ../../../release/3.2.rst:184
msgid "Other"
msgstr ""

#: ../../../release/3.2.rst:186
msgid ""
"The :manual:`cmake(1)` ``-E tar`` command now supports creating ``.xz``-"
"compressed archives with the ``J`` flag."
msgstr ""

#: ../../../release/3.2.rst:189
msgid ""
"The :manual:`cmake(1)` ``-E tar`` command learned a new ``--files-"
"from=<file>`` option to specify file names using lines in a file to overcome "
"command-line length limits."
msgstr ""

#: ../../../release/3.2.rst:193
msgid ""
"The :manual:`cmake(1)` ``-E tar`` command learned a new ``--mtime=<date>`` "
"option to specify the modification time recorded in tarball entries."
msgstr ""

#: ../../../release/3.2.rst:197
msgid ""
"The :manual:`Compile Features <cmake-compile-features(7)>` functionality is "
"now aware of features supported by more compilers, including:"
msgstr ""

#: ../../../release/3.2.rst:200
msgid "Apple Clang (``AppleClang``) for Xcode versions 4.4 though 6.1."
msgstr ""

#: ../../../release/3.2.rst:201
msgid "GNU compiler versions 4.4 through 5.0 on UNIX and Apple (``GNU``)."
msgstr ""

#: ../../../release/3.2.rst:202
msgid "Microsoft Visual Studio (``MSVC``) for versions 2010 through 2015."
msgstr ""

#: ../../../release/3.2.rst:203
msgid "Oracle SolarisStudio (``SunPro``) version 12.4."
msgstr ""

#: ../../../release/3.2.rst:205
msgid ""
"The :ref:`Qt AUTORCC` feature now tracks files listed in ``.qrc`` files as "
"dependencies. If an input file to the ``rcc`` tool is changed, the tool is "
"automatically re-run."
msgstr ""

#: ../../../release/3.2.rst:210
msgid "New Diagnostics"
msgstr ""

#: ../../../release/3.2.rst:212
msgid ""
"The :command:`break` command now rejects calls outside of a loop context or "
"that pass arguments to the command. See policy :policy:`CMP0055`."
msgstr ""

#: ../../../release/3.2.rst:217
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.2.rst:219
msgid ""
"Files written in the :manual:`cmake-language(7)`, such as ``CMakeLists.txt`` "
"or ``*.cmake`` files, are now expected to be encoded as UTF-8.  If files are "
"already ASCII, they will be compatible.  If files were in a different "
"encoding, including Latin 1, they will need to be converted."
msgstr ""

#: ../../../release/3.2.rst:225
msgid ""
"The :module:`FindOpenGL` module no longer explicitly searches for any "
"dependency on X11 libraries with the :module:`FindX11` module.  Such "
"dependencies should not need to be explicit. Applications using X11 APIs "
"themselves should find and link to X11 libraries explicitly."
msgstr ""

#: ../../../release/3.2.rst:231
msgid ""
"The implementation of CMake now relies on some C++ compiler features which "
"are not supported by some older compilers.  As a result, those old compilers "
"can no longer be used to build CMake itself.  CMake continues to be able to "
"generate Makefiles and project files for users of those old compilers "
"however.  Compilers known to no longer be capable of building CMake are:"
msgstr ""

#: ../../../release/3.2.rst:237
msgid "Visual Studio 6 and 7.0 -- superseded by VisualStudio 7.1 and newer."
msgstr ""

#: ../../../release/3.2.rst:238
msgid "GCC 2.95 -- superseded by GCC 3 and newer compilers."
msgstr ""

#: ../../../release/3.2.rst:239
msgid "Borland compilers -- superseded by other Windows compilers."
msgstr ""

#: ../../../release/3.2.rst:240
msgid "Compaq compilers -- superseded by other compilers."
msgstr ""

#: ../../../release/3.2.rst:241
msgid "SGI compilers -- IRIX was dropped as a host platform."
msgstr ""

#: ../../../release/3.2.rst:244
msgid "Other Changes"
msgstr ""

#: ../../../release/3.2.rst:246
msgid ""
"On Windows and OS X, commands supporting network communication via "
"``https``, such as :command:`file(DOWNLOAD)`, :command:`file(UPLOAD)`, and :"
"command:`ctest_submit`, now support SSL/TLS even when CMake is not built "
"against OpenSSL. The Windows or OS X native SSL/TLS implementation is used "
"by default. OS-configured certificate authorities will be trusted "
"automatically."
msgstr ""

#: ../../../release/3.2.rst:253
msgid ""
"On other platforms, when CMake is built with OpenSSL, these commands now "
"search for OS-configured certificate authorities in a few ``/etc`` paths to "
"be trusted automatically."
msgstr ""

#: ../../../release/3.2.rst:257
msgid ""
"On OS X with Makefile and Ninja generators, when a compiler is found in ``/"
"usr/bin`` it is now mapped to the corresponding compiler inside the Xcode "
"application folder, if any.  This allows such build trees to continue to "
"work with their original compiler even when ``xcode-select`` switches to a "
"different Xcode installation."
msgstr ""

#: ../../../release/3.2.rst:263
msgid ""
"The Visual Studio generators now write solution and project files in UTF-8 "
"instead of Windows-1252.  Windows-1252 supported Latin 1 languages such as "
"those found in North and South America and Western Europe.  With UTF-8, "
"additional languages are now supported."
msgstr ""

#: ../../../release/3.2.rst:269
msgid ""
"The :generator:`Xcode` generator no longer requires a value for the :"
"variable:`CMAKE_MAKE_PROGRAM` variable to be located up front. It now "
"locates ``xcodebuild`` when needed at build time."
msgstr ""

#: ../../../release/3.2.rst:273
msgid ""
"When building CMake itself using SolarisStudio 12, the default ``libCStd`` "
"standard library is not sufficient to build CMake.  The SolarisStudio "
"distribution supports compiler options to use ``STLPort4`` or ``libstdc++``. "
"An appropriate option to select the standard library is now added "
"automatically when building CMake with SolarisStudio compilers."
msgstr ""
