# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../release/3.9.rst:2
msgid "CMake 3.9 Release Notes"
msgstr ""

#: ../../../release/3.9.rst:5
msgid "Contents"
msgstr ""

#: ../../../release/3.9.rst:8
msgid "Changes made since CMake 3.8 include the following."
msgstr ""

#: ../../../release/3.9.rst:11
msgid "New Features"
msgstr ""

#: ../../../release/3.9.rst:14
msgid "Languages"
msgstr ""

#: ../../../release/3.9.rst:16
msgid ""
"``CUDA`` is now supported by the :ref:`Visual Studio Generators` for VS 2010 "
"and above.  This complements the existing support by the :ref:`Makefile "
"Generators` and the :generator:`Ninja` generator. CUDA 8.0.61 or higher is "
"recommended due to known bugs in the VS integration by earlier versions."
msgstr ""

#: ../../../release/3.9.rst:22
msgid ""
"CMake is now aware of the :prop_tgt:`C++ standards <CXX_STANDARD>` and :"
"prop_tgt:`C standards <C_STANDARD>` and their associated meta-features for "
"the following :variable:`compiler ids <CMAKE_<LANG>_COMPILER_ID>`: ``Cray``, "
"``PGI``, and ``XL``."
msgstr ""

#: ../../../release/3.9.rst:28
msgid "Generators"
msgstr ""

#: ../../../release/3.9.rst:30
msgid ""
":ref:`Visual Studio Generators` for VS 2010 and above learned to support the "
"``ASM_NASM`` language when ``nasm`` is installed."
msgstr ""

#: ../../../release/3.9.rst:33
msgid ""
"The :generator:`Xcode` generator learned to create Xcode schema files. This "
"is an experimental feature and can be activated by setting the :variable:"
"`CMAKE_XCODE_GENERATE_SCHEME` variable to a ``TRUE`` value."
msgstr ""

#: ../../../release/3.9.rst:38
msgid "Commands"
msgstr ""

#: ../../../release/3.9.rst:40
msgid ""
"The :command:`add_library` command ``IMPORTED`` option learned to support :"
"ref:`Object Libraries`."
msgstr ""

#: ../../../release/3.9.rst:43
msgid ""
"The :command:`find_library` command learned to search ``libx32`` paths when "
"the build targets the ``x32`` ABI.  See the :prop_gbl:"
"`FIND_LIBRARY_USE_LIBX32_PATHS` global property."
msgstr ""

#: ../../../release/3.9.rst:47
msgid ""
"The :command:`include_external_msproject` command learned to use the :"
"prop_tgt:`MAP_IMPORTED_CONFIG_<CONFIG>` target property to map current "
"configurations to the external configurations."
msgstr ""

#: ../../../release/3.9.rst:51
msgid ""
"The :command:`install(TARGETS)` command learned a new ``OBJECTS`` option to "
"specify where to install :ref:`Object Libraries`."
msgstr ""

#: ../../../release/3.9.rst:54
msgid ""
"The :command:`install(EXPORT)` command learned how to export :ref:`Object "
"Libraries`."
msgstr ""

#: ../../../release/3.9.rst:57
msgid ""
"The :command:`project` command learned an optional ``DESCRIPTION`` parameter "
"to set the :variable:`PROJECT_DESCRIPTION` variable."
msgstr ""

#: ../../../release/3.9.rst:60
msgid ""
"The :command:`separate_arguments` command gained a ``NATIVE_COMMAND`` mode "
"that performs argument separation depending on the host operating system."
msgstr ""

#: ../../../release/3.9.rst:64
msgid "Variables"
msgstr ""

#: ../../../release/3.9.rst:66
msgid ""
"A :variable:`CMAKE_ANDROID_NDK_DEPRECATED_HEADERS` variable was added for "
"use when :ref:`Cross Compiling for Android with the NDK` to request use of "
"the deprecated headers even when unified headers are available. The default "
"is now to use unified headers if available."
msgstr ""

#: ../../../release/3.9.rst:71
msgid ""
"A :variable:`CMAKE_AUTOMOC_DEPEND_FILTERS` variable was introduced to allow :"
"variable:`CMAKE_AUTOMOC` to extract additional dependency file names for "
"``moc`` from the contents of source files."
msgstr ""

#: ../../../release/3.9.rst:75
msgid ""
"A :variable:`CMAKE_AUTOUIC_SEARCH_PATHS` variable was introduced to allow :"
"variable:`CMAKE_AUTOUIC` to search for ``foo.ui`` in more places than the "
"vicinity of the file including ``ui_foo.h``."
msgstr ""

#: ../../../release/3.9.rst:79
msgid ""
"A :variable:`CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX` variable was added to "
"tell the :command:`find_library` command to search in a ``lib<suffix>`` "
"directory before each ``lib`` directory that would normally be searched."
msgstr ""

#: ../../../release/3.9.rst:83
msgid ""
"A :variable:`CMAKE_INTERPROCEDURAL_OPTIMIZATION` variable was added to "
"initialize the :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` property on all "
"targets."
msgstr ""

#: ../../../release/3.9.rst:87
msgid ""
"A :variable:`CMAKE_<LANG>_COMPILER_AR` variable was added to hold the path "
"to the GCC/Clang wrapper of ``ar``."
msgstr ""

#: ../../../release/3.9.rst:90
msgid ""
"A :variable:`CMAKE_<LANG>_COMPILER_RANLIB` variable was added to hold the "
"path to the GCC/Clang wrapper of ``ranlib``."
msgstr ""

#: ../../../release/3.9.rst:93
msgid ""
"The :variable:`CMAKE_SYSROOT_COMPILE` and :variable:`CMAKE_SYSROOT_LINK` "
"variables were added to use separate sysroots for compiling and linking."
msgstr ""

#: ../../../release/3.9.rst:97
msgid "Properties"
msgstr ""

#: ../../../release/3.9.rst:99
msgid ""
"A new :prop_tgt:`AUTOGEN_BUILD_DIR` target property was introduced to set a "
"custom output directory for :prop_tgt:`AUTOMOC`, :prop_tgt:`AUTOUIC`, and :"
"prop_tgt:`AUTORCC`."
msgstr ""

#: ../../../release/3.9.rst:103
msgid ""
"A new :prop_tgt:`AUTOMOC_DEPEND_FILTERS` target property was introduced to "
"allow :prop_tgt:`AUTOMOC` to extract additional dependency file names for "
"``moc`` from the contents of source files."
msgstr ""

#: ../../../release/3.9.rst:107
msgid ""
"A new :prop_tgt:`AUTOUIC_SEARCH_PATHS` target property was introduced to "
"allow :prop_tgt:`AUTOUIC` to search for ``foo.ui`` in more places than the "
"vicinity of the file including ``ui_foo.h``."
msgstr ""

#: ../../../release/3.9.rst:111
msgid ""
"Global properties :prop_gbl:`AUTOGEN_SOURCE_GROUP`, :prop_gbl:"
"`AUTOMOC_SOURCE_GROUP` and :prop_gbl:`AUTORCC_SOURCE_GROUP` were introduced "
"to allow files generated by :prop_tgt:`AUTOMOC` or :prop_tgt:`AUTORCC` to be "
"placed in a :command:`source_group`."
msgstr ""

#: ../../../release/3.9.rst:117
msgid ""
"A :prop_tgt:`BUILD_WITH_INSTALL_NAME_DIR` target property and corresponding :"
"variable:`CMAKE_BUILD_WITH_INSTALL_NAME_DIR` variable were added to control "
"whether to use the :prop_tgt:`INSTALL_NAME_DIR` target property value for "
"binaries in the build tree.  This is for macOS ``install_name`` as :prop_tgt:"
"`BUILD_WITH_INSTALL_RPATH` is for ``RPATH``."
msgstr ""

#: ../../../release/3.9.rst:123
msgid ""
"A :prop_tgt:`CUDA_PTX_COMPILATION` target property was added to :ref:`Object "
"Libraries` to support compiling to ``.ptx`` files instead of host object "
"files."
msgstr ""

#: ../../../release/3.9.rst:127
msgid ""
"A :prop_gbl:`GENERATOR_IS_MULTI_CONFIG` global property was added to "
"determine whether the current generator is a multi-configuration generator "
"(such as :ref:`Visual Studio Generators` or :generator:`Xcode`)."
msgstr ""

#: ../../../release/3.9.rst:131
msgid ""
"The :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target property is now enforced "
"when enabled.  CMake will add IPO flags unconditionally or produce an error "
"if it does not know the flags for the current compiler.  The project is now "
"responsible to use the :module:`CheckIPOSupported` module to check for IPO "
"support before enabling the target property.  See policy :policy:`CMP0069`."
msgstr ""

#: ../../../release/3.9.rst:137
msgid ""
"The :prop_tgt:`WINDOWS_EXPORT_ALL_SYMBOLS` target property may now be used "
"in combination with explicit ``.def`` files in order to export all symbols "
"from the object files within a target plus an explicit list of symbols that "
"the linker finds in dependencies (e.g. ``msvcrt.lib``)."
msgstr ""

#: ../../../release/3.9.rst:144
msgid "Modules"
msgstr ""

#: ../../../release/3.9.rst:146
msgid ""
"A :module:`CheckIPOSupported` module was added to help projects check "
"whether interprocedural optimization (IPO) is supported by the current "
"toolchain and CMake version."
msgstr ""

#: ../../../release/3.9.rst:150
msgid ""
"The :module:`CMakeFindDependencyMacro` module ``find_dependency`` macro now "
"forwards all arguments to the underlying :command:`find_package` call.  "
"Existing uses will continue to function as before, but callers can now "
"access the full suite of arguments that :command:`find_package` accepts."
msgstr ""

#: ../../../release/3.9.rst:155
msgid ""
"The :module:`FeatureSummary` module :command:`feature_summary` command now "
"accepts the new ``DEFAULT_DESCRIPTION`` option that will print the default "
"title for the selected package type."
msgstr ""

#: ../../../release/3.9.rst:159
msgid ""
"The :module:`FeatureSummary` module gained a new :variable:"
"`FeatureSummary_<TYPE>_DESCRIPTION` variable that can be defined for each "
"``<TYPE>`` to replace the type name with the specified string whenever the "
"package type is used in an output string by the module."
msgstr ""

#: ../../../release/3.9.rst:164
msgid ""
"The :module:`FindDoxygen` module learned to control Doxygen behavior using "
"CMake variables and generate documentation via the newly added :command:"
"`doxygen_add_docs` function. The Doxygen input file (``Doxyfile``) is "
"automatically generated and doxygen is run as part of a custom target. "
"Additional components can be specified to find optional tools: ``dot``, "
"``mscgen`` and ``dia``."
msgstr ""

#: ../../../release/3.9.rst:171
msgid "The :module:`FindMPI` module now provides imported targets."
msgstr ""

#: ../../../release/3.9.rst:173
msgid ""
"The :module:`FindProtobuf` module :command:`protobuf_generate_cpp` command "
"gained an ``EXPORT_MACRO`` option to specify the name of a DLL export markup "
"macro."
msgstr ""

#: ../../../release/3.9.rst:177
msgid ""
"The :module:`FindProtobuf` module now supports usage of static libraries for "
"Unix via a new ``Protobuf_USE_STATIC_LIBS`` input variable."
msgstr ""

#: ../../../release/3.9.rst:180
msgid ""
"The :module:`FindProtobuf` module now provides imported targets when the "
"libraries are found."
msgstr ""

#: ../../../release/3.9.rst:183
msgid ""
"A new :module:`GoogleTest` module was added to provide the :command:"
"`gtest_add_tests` function independently of the :module:`FindGTest` module. "
"The function was also updated to support keyword arguments, with "
"functionality expanded to allow a test name prefix and suffix to be "
"specified, the dependency on the source files to be optional and the list of "
"discovered test cases to be returned to the caller."
msgstr ""

#: ../../../release/3.9.rst:191
msgid "CTest"
msgstr ""

#: ../../../release/3.9.rst:193
msgid ""
"The :command:`ctest_submit` command gained a ``HTTPHEADER`` option to "
"specify custom headers to send during submission."
msgstr ""

#: ../../../release/3.9.rst:196
msgid ""
"The :manual:`ctest(1)` executable gained new options which allow the "
"developer to disable automatically adding tests to the test set to satisfy "
"fixture dependencies. ``-FS`` prevents adding setup tests for fixtures "
"matching the provided regular expression, ``-FC`` prevents adding cleanup "
"tests for matching fixtures and ``-FA`` prevents adding any test for "
"matching fixtures."
msgstr ""

#: ../../../release/3.9.rst:203
msgid ""
"A :prop_test:`DISABLED` test property was added to mark tests that are "
"configured but explicitly disabled so they do not run."
msgstr ""

#: ../../../release/3.9.rst:207
msgid "CPack"
msgstr ""

#: ../../../release/3.9.rst:209
msgid ""
"The :cpack_gen:`CPack Archive Generator` learned to modify the filename per-"
"component.  See the :variable:`CPACK_ARCHIVE_FILE_NAME` variable and its per-"
"component version :variable:`CPACK_ARCHIVE_<component>_FILE_NAME`."
msgstr ""

#: ../../../release/3.9.rst:213
msgid ""
"The :module:`CPackComponent` module :command:`cpack_add_component` command "
"gained a new ``PLIST <filename>`` option to specify the ``pkgbuild`` ``--"
"component-plist`` argument when using the :module:`productbuild "
"<CPackProductBuild>` generator."
msgstr ""

#: ../../../release/3.9.rst:218
msgid ""
"The :module:`CPackIFW` module :command:`cpack_ifw_configure_component` and :"
"command:`cpack_ifw_configure_component_group` commands gained "
"internationalization support for ``DISPLAY_NAME`` and ``DESCRIPTION`` "
"options."
msgstr ""

#: ../../../release/3.9.rst:223
msgid ""
"The :cpack_gen:`CPack IFW Generator` learned the new hint :variable:"
"`CPACK_IFW_ROOT` variable for finding the QtIFW tool suite installed in a "
"non-standard place."
msgstr ""

#: ../../../release/3.9.rst:227
msgid ""
"The :cpack_gen:`CPack productbuild Generator` gained a new :variable:"
"`CPACK_PRODUCTBUILD_RESOURCES_DIR` variable to specify resources to be "
"copied into the ``Resources`` directory."
msgstr ""

#: ../../../release/3.9.rst:232
msgid ""
"The :cpack_gen:`CPack RPM Generator` learned to modify the ``debuginfo`` "
"package name.  See the :variable:`CPACK_RPM_DEBUGINFO_FILE_NAME` variable."
msgstr ""

#: ../../../release/3.9.rst:235
msgid ""
"The :cpack_gen:`CPack WIX Generator` patching system now has the ability to "
"set additional attributes.  This can be done by specifying attributes with "
"the ``CPackWiXFragment`` XML tag after the ``Id`` attribute. See the :"
"variable:`CPACK_WIX_PATCH_FILE` variable."
msgstr ""

#: ../../../release/3.9.rst:240
msgid ""
"The :cpack_gen:`CPack WIX Generator` implemented a new :variable:"
"`CPACK_WIX_ROOT_FOLDER_ID` variable which allows using a custom root folder "
"ID instead of the default ``ProgramFilesFolder`` / ``ProgramFiles64Folder``."
msgstr ""

#: ../../../release/3.9.rst:246
msgid "Other"
msgstr ""

#: ../../../release/3.9.rst:248
msgid ""
"Interprocedural optimization (IPO) is now supported for GNU and Clang "
"compilers using link time optimization (LTO) flags.  See the :prop_tgt:"
"`INTERPROCEDURAL_OPTIMIZATION` target property and :module:"
"`CheckIPOSupported` module."
msgstr ""

#: ../../../release/3.9.rst:253
msgid ""
"The ``TARGET_OBJECTS`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` is now supported by the :command:`add_custom_command` and :"
"command:`file(GENERATE)` commands."
msgstr ""

#: ../../../release/3.9.rst:258
msgid ""
"Two new informational generator expressions to retrieve Apple Bundle "
"directories have been added. The first one ``$<TARGET_BUNDLE_DIR:tgt>`` "
"outputs the full path to the Bundle directory, the other one "
"``$<TARGET_BUNDLE_CONTENT_DIR:tgt>`` outputs the full path to the "
"``Contents`` directory of macOS Bundles and App Bundles. For all other "
"bundle types and SDKs it is identical with ``$<TARGET_BUNDLE_DIR:tgt>``. The "
"new expressions are helpful to query Bundle locations independent of the "
"different Bundle types and layouts on macOS and iOS."
msgstr ""

#: ../../../release/3.9.rst:268
msgid "Deprecated and Removed Features"
msgstr ""

#: ../../../release/3.9.rst:270
msgid ""
"An explicit deprecation diagnostic was added for policies ``CMP0036`` and "
"below.  The :manual:`cmake-policies(7)` manual explains that the OLD "
"behaviors of all policies are deprecated and that projects should always "
"port to the NEW behaviors as soon as possible."
msgstr ""

#: ../../../release/3.9.rst:275
msgid ""
"The :generator:`Visual Studio 8 2005` generator is now deprecated and will "
"be removed in a future version of CMake."
msgstr ""

#: ../../../release/3.9.rst:278
msgid "The :generator:`Visual Studio 7 .NET 2003` generator has been removed."
msgstr ""

#: ../../../release/3.9.rst:280
msgid ""
"The :generator:`Xcode` generator dropped support for Xcode versions older "
"than 3."
msgstr ""

#: ../../../release/3.9.rst:283
msgid "The :module:`FindDoxygen` module has deprecated several variables."
msgstr ""

#: ../../../release/3.9.rst:285
msgid ""
"The version of curl bundled with CMake no longer accepts URLs of the form "
"``file://c:/...`` on Windows due to a change in upstream curl 7.52.  Use the "
"form ``file:///c:/...`` instead to work on all versions."
msgstr ""

#: ../../../release/3.9.rst:290
msgid "Other Changes"
msgstr ""

#: ../../../release/3.9.rst:292
msgid ""
"When using :prop_tgt:`AUTOMOC`, CMake now scans for the presence of the "
"``Q_PLUGIN_METADATA`` macro and reruns moc when the file from the macro's "
"``FILE`` argument changes."
msgstr ""

#: ../../../release/3.9.rst:296
msgid ""
"When :prop_tgt:`AUTOMOC` detects an include statement of the form ``#include "
"\"moc_<basename>.cpp\"`` the search for the respective header file now looks "
"in the :prop_tgt:`INCLUDE_DIRECTORIES` of the target as well."
msgstr ""

#: ../../../release/3.9.rst:300
msgid ""
"When running tests, CTest learned to treat skipped tests (using the :"
"prop_test:`SKIP_RETURN_CODE` property) the same as tests with the new :"
"prop_test:`DISABLED` property. Due to this change, CTest will not indicate "
"failure when all tests are either skipped or pass."
msgstr ""

#: ../../../release/3.9.rst:305
msgid ""
"The :generator:`Ninja` generator has loosened the dependencies of object "
"compilation.  Object compilation now depends only on custom targets and "
"custom commands associated with libraries on which the object's target "
"depends and no longer depends on the libraries themselves.  Source files in "
"dependent targets may now compile without waiting for their targets' "
"dependencies to link."
msgstr ""

#: ../../../release/3.9.rst:312
msgid ""
"On macOS, ``RPATH`` settings such as :prop_tgt:`BUILD_WITH_INSTALL_RPATH` no "
"longer affect the ``install_name`` field.  See policy :policy:`CMP0068`."
msgstr ""

#: ../../../release/3.9.rst:315
msgid ""
"The :generator:`Visual Studio 14 2015` generator has been taught about a "
"change to the ``v140`` toolset made by a VS 2015 update.  VS changed the set "
"of values it understands for the ``GenerateDebugInformation`` linker setting "
"that produces the ``-DEBUG`` linker flag variants."
msgstr ""

#: ../../../release/3.9.rst:321
msgid "Updates"
msgstr ""

#: ../../../release/3.9.rst:323
msgid "Changes made since CMake 3.9.0 include the following."
msgstr ""

#: ../../../release/3.9.rst:326
msgid "3.9.1"
msgstr ""

#: ../../../release/3.9.rst:328
msgid ""
"The ``find_`` command ``PACKAGE_ROOT`` search path group added by CMake "
"3.9.0 has been removed for the 3.9 series due to regressions caused by new "
"use of ``<PackageName>_ROOT`` variables.  The behavior may be re-introduced "
"in the future in a more-compatible way."
msgstr ""

#: ../../../release/3.9.rst:334
msgid "3.9.2"
msgstr ""

#: ../../../release/3.9.rst:336
msgid ""
"On macOS, the default application bundle ``Info.plist`` file no longer "
"enables Hi-DPI support as it did in 3.9.0 and 3.9.1.  The change had to be "
"reverted because it broke iOS applications."
msgstr ""

#: ../../../release/3.9.rst:340
msgid ""
"The Xcode generator no longer adds \"outputPaths\" to custom script build "
"phases as it did in 3.9.0 and 3.9.1.  This was added in an attempt to "
"support Xcode 9's new build system, but broke incremental rebuilds for both "
"the old and new Xcode build systems."
msgstr ""
