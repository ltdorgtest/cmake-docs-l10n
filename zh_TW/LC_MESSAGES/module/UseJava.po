# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/UseJava.cmake:3
msgid "UseJava"
msgstr ""

#: ../../../../Modules/UseJava.cmake:5
msgid "Use Module for Java"
msgstr ""

#: ../../../../Modules/UseJava.cmake:7
msgid ""
"This file provides functions for Java.  It is assumed that FindJava.cmake "
"has already been loaded.  See FindJava.cmake for information on how to load "
"Java into your CMake project."
msgstr ""

#: ../../../../Modules/UseJava.cmake:13
msgid ""
"add_jar(target_name\n"
"        [SOURCES] source1 [source2 ...] [resource1 ...]\n"
"        [INCLUDE_JARS jar1 [jar2 ...]]\n"
"        [ENTRY_POINT entry]\n"
"        [VERSION version]\n"
"        [OUTPUT_NAME name]\n"
"        [OUTPUT_DIR dir]\n"
"        )"
msgstr ""

#: ../../../../Modules/UseJava.cmake:22
msgid ""
"This command creates a <target_name>.jar.  It compiles the given source "
"files (source) and adds the given resource files (resource) to the jar "
"file.  If only resource files are given then just a jar file is created.  "
"The list of include jars are added to the classpath when compiling the java "
"sources and also to the dependencies of the target. INCLUDE_JARS also "
"accepts other target names created by add_jar.  For backwards compatibility, "
"jar files listed as sources are ignored (as they have been since the first "
"version of this module)."
msgstr ""

#: ../../../../Modules/UseJava.cmake:31
msgid ""
"The default OUTPUT_DIR can also be changed by setting the variable "
"CMAKE_JAVA_TARGET_OUTPUT_DIR."
msgstr ""

#: ../../../../Modules/UseJava.cmake:34
msgid "Additional instructions:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:38
msgid ""
"To add compile flags to the target you can set these flags with\n"
"the following variable:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:45
msgid "set(CMAKE_JAVA_COMPILE_FLAGS -nowarn)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:51
msgid ""
"To add a path or a jar file to the class path you can do this\n"
"with the CMAKE_JAVA_INCLUDE_PATH variable."
msgstr ""

#: ../../../../Modules/UseJava.cmake:58
msgid "set(CMAKE_JAVA_INCLUDE_PATH /usr/share/java/shibboleet.jar)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:64
msgid "To use a different output name for the target you can set it with:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:70
msgid "add_jar(foobar foobar.java OUTPUT_NAME shibboleet.jar)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:76
msgid ""
"To use a different output directory than CMAKE_CURRENT_BINARY_DIR\n"
"you can set it with:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:83
msgid "add_jar(foobar foobar.java OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:89
msgid ""
"To define an entry point in your jar you can set it with the ENTRY_POINT\n"
"named argument:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:96
msgid "add_jar(example ENTRY_POINT com/examples/MyProject/Main)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:102
msgid ""
"To define a custom manifest for the jar, you can set it with the manifest\n"
"named argument:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:109
msgid "add_jar(example MANIFEST /path/to/manifest)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:115
msgid ""
"To add a VERSION to the target output name you can set it using\n"
"the VERSION named argument to add_jar. This will create a jar file with the\n"
"name shibboleet-1.0.0.jar and will create a symlink shibboleet.jar\n"
"pointing to the jar with the version information."
msgstr ""

#: ../../../../Modules/UseJava.cmake:124
msgid "add_jar(shibboleet shibbotleet.java VERSION 1.2.0)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:130
msgid ""
"If the target is a JNI library, utilize the following commands to\n"
"create a JNI symbolic link:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:137
msgid ""
"set(CMAKE_JNI_TARGET TRUE)\n"
"add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n"
"install_jar(shibboleet ${LIB_INSTALL_DIR}/shibboleet)\n"
"install_jni_symlink(shibboleet ${JAVA_LIB_INSTALL_DIR})"
msgstr ""

#: ../../../../Modules/UseJava.cmake:146
msgid ""
"If a single target needs to produce more than one jar from its\n"
"java source code, to prevent the accumulation of duplicate class\n"
"files in subsequent jars, set/reset CMAKE_JAR_CLASSES_PREFIX prior\n"
"to calling the add_jar() function:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:155
msgid ""
"set(CMAKE_JAR_CLASSES_PREFIX com/redhat/foo)\n"
"add_jar(foo foo.java)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:162
msgid ""
"set(CMAKE_JAR_CLASSES_PREFIX com/redhat/bar)\n"
"add_jar(bar bar.java)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:167
msgid "Target Properties:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:171
msgid ""
"The add_jar() functions sets some target properties. You can get these\n"
"properties with the\n"
"   get_property(TARGET <target_name> PROPERTY <propery_name>)\n"
"command."
msgstr ""

#: ../../../../Modules/UseJava.cmake:180
msgid ""
"INSTALL_FILES      The files which should be installed. This is used by\n"
"                   install_jar().\n"
"JNI_SYMLINK        The JNI symlink which should be installed.\n"
"                   This is used by install_jni_symlink().\n"
"JAR_FILE           The location of the jar file so that you can include\n"
"                   it.\n"
"CLASS_DIR          The directory where the class files can be found. For\n"
"                   example to use them with javah."
msgstr ""

#: ../../../../Modules/UseJava.cmake:191
msgid ""
"find_jar(<VAR>\n"
"         name | NAMES name1 [name2 ...]\n"
"         [PATHS path1 [path2 ... ENV var]]\n"
"         [VERSIONS version1 [version2]]\n"
"         [DOC \"cache documentation string\"]\n"
"         )"
msgstr ""

#: ../../../../Modules/UseJava.cmake:198
msgid ""
"This command is used to find a full path to the named jar.  A cache entry "
"named by <VAR> is created to stor the result of this command. If the full "
"path to a jar is found the result is stored in the variable and the search "
"will not repeated unless the variable is cleared.  If nothing is found, the "
"result will be <VAR>-NOTFOUND, and the search will be attempted again next "
"time find_jar is invoked with the same variable.  The name of the full path "
"to a file that is searched for is specified by the names listed after NAMES "
"argument. Additional search locations can be specified after the PATHS "
"argument. If you require special a version of a jar file you can specify it "
"with the VERSIONS argument.  The argument after DOC will be used for the "
"documentation string in the cache."
msgstr ""

#: ../../../../Modules/UseJava.cmake:213
msgid "install_jar(TARGET_NAME DESTINATION)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:215
msgid ""
"This command installs the TARGET_NAME files to the given DESTINATION. It "
"should be called in the same scope as add_jar() or it will fail."
msgstr ""

#: ../../../../Modules/UseJava.cmake:220
msgid "install_jni_symlink(TARGET_NAME DESTINATION)"
msgstr ""

#: ../../../../Modules/UseJava.cmake:222
msgid ""
"This command installs the TARGET_NAME JNI symlinks to the given "
"DESTINATION.  It should be called in the same scope as add_jar() or it will "
"fail."
msgstr ""

#: ../../../../Modules/UseJava.cmake:228
msgid ""
"create_javadoc(<VAR>\n"
"               PACKAGES pkg1 [pkg2 ...]\n"
"               [SOURCEPATH <sourcepath>]\n"
"               [CLASSPATH <classpath>]\n"
"               [INSTALLPATH <install path>]\n"
"               [DOCTITLE \"the documentation title\"]\n"
"               [WINDOWTITLE \"the title of the document\"]\n"
"               [AUTHOR TRUE|FALSE]\n"
"               [USE TRUE|FALSE]\n"
"               [VERSION TRUE|FALSE]\n"
"               )"
msgstr ""

#: ../../../../Modules/UseJava.cmake:240
msgid ""
"Create java documentation based on files or packages.  For more details "
"please read the javadoc manpage."
msgstr ""

#: ../../../../Modules/UseJava.cmake:243
msgid ""
"There are two main signatures for create_javadoc.  The first signature works "
"with package names on a path with source files:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:248
msgid ""
"Example:\n"
"create_javadoc(my_example_doc\n"
"  PACKAGES com.exmaple.foo com.example.bar\n"
"  SOURCEPATH \"${CMAKE_CURRENT_SOURCE_DIR}\"\n"
"  CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n"
"  WINDOWTITLE \"My example\"\n"
"  DOCTITLE \"<h1>My example</h1>\"\n"
"  AUTHOR TRUE\n"
"  USE TRUE\n"
"  VERSION TRUE\n"
")"
msgstr ""

#: ../../../../Modules/UseJava.cmake:262
msgid "The second signature for create_javadoc works on a given list of files."
msgstr ""

#: ../../../../Modules/UseJava.cmake:267
msgid ""
"create_javadoc(<VAR>\n"
"               FILES file1 [file2 ...]\n"
"               [CLASSPATH <classpath>]\n"
"               [INSTALLPATH <install path>]\n"
"               [DOCTITLE \"the documentation title\"]\n"
"               [WINDOWTITLE \"the title of the document\"]\n"
"               [AUTHOR TRUE|FALSE]\n"
"               [USE TRUE|FALSE]\n"
"               [VERSION TRUE|FALSE]\n"
"              )"
msgstr ""

#: ../../../../Modules/UseJava.cmake:280
msgid "Example:"
msgstr ""

#: ../../../../Modules/UseJava.cmake:284
msgid ""
"create_javadoc(my_example_doc\n"
"  FILES ${example_SRCS}\n"
"  CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n"
"  WINDOWTITLE \"My example\"\n"
"  DOCTITLE \"<h1>My example</h1>\"\n"
"  AUTHOR TRUE\n"
"  USE TRUE\n"
"  VERSION TRUE\n"
")"
msgstr ""

#: ../../../../Modules/UseJava.cmake:296
msgid ""
"Both signatures share most of the options.  These options are the same as "
"what you can find in the javadoc manpage.  Please look at the manpage for "
"CLASSPATH, DOCTITLE, WINDOWTITLE, AUTHOR, USE and VERSION."
msgstr ""

#: ../../../../Modules/UseJava.cmake:300
msgid "The documentation will be by default installed to"
msgstr ""

#: ../../../../Modules/UseJava.cmake:304
msgid "${CMAKE_INSTALL_PREFIX}/share/javadoc/<VAR>"
msgstr ""

#: ../../../../Modules/UseJava.cmake:308
msgid "if you don't set the INSTALLPATH."
msgstr ""
