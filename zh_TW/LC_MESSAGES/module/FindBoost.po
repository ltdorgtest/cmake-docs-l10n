# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindBoost.cmake:3
msgid "FindBoost"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:5
msgid "Find Boost include dirs and libraries"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:7
msgid "Use this module by invoking find_package with the form::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:9
msgid ""
"find_package(Boost\n"
"  [version] [EXACT]      # Minimum or EXACT version e.g. 1.36.0\n"
"  [REQUIRED]             # Fail with error if Boost is not found\n"
"  [COMPONENTS <libs>...] # Boost libraries by their canonical name\n"
"  )                      # e.g. \"date_time\" for \"libboost_date_time\""
msgstr ""

#: ../../../../Modules/FindBoost.cmake:15
msgid ""
"This module finds headers and requested component libraries OR a CMake "
"package configuration file provided by a \"Boost CMake\" build.  For the "
"latter case skip to the \"Boost CMake\" section below.  For the former case "
"results are reported in variables::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:20
msgid ""
"Boost_FOUND            - True if headers and requested libraries were found\n"
"Boost_INCLUDE_DIRS     - Boost include directories\n"
"Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n"
"Boost_LIBRARIES        - Boost component libraries to be linked\n"
"Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-"
"case)\n"
"Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n"
"                         target_link_libraries debug/optimized keywords)\n"
"Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n"
"Boost_LIB_VERSION      - Version string appended to library filenames\n"
"Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n"
"Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n"
"Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n"
"Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n"
"                       - Pass to add_definitions() to have diagnostic\n"
"                         information about Boost's automatic linking\n"
"                         displayed during compilation"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:37
msgid "This module reads hints about search locations from variables::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:39
msgid ""
"BOOST_ROOT             - Preferred installation prefix\n"
" (or BOOSTROOT)\n"
"BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n"
"BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n"
"Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n"
"                         specified by these hint variables. Default is OFF.\n"
"Boost_ADDITIONAL_VERSIONS\n"
"                       - List of Boost versions not known to this module\n"
"                         (Boost install locations may contain the version)"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:49
msgid "and saves search results persistently in CMake cache entries::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:51
msgid ""
"Boost_INCLUDE_DIR         - Directory containing Boost headers\n"
"Boost_LIBRARY_DIR         - Directory containing Boost libraries\n"
"Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n"
"Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:56
msgid ""
"Users may set these hints or results as cache entries.  Projects should not "
"read these entries directly but instead use the above result variables.  "
"Note that some hint names start in upper-case \"BOOST\".  One may specify "
"these as environment variables if they are not specified as CMake variables "
"or cache entries."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:62
msgid ""
"This module first searches for the Boost header files using the above hint "
"variables (excluding BOOST_LIBRARYDIR) and saves the result in "
"Boost_INCLUDE_DIR.  Then it searches for requested component libraries using "
"the above hints (excluding BOOST_INCLUDEDIR and Boost_ADDITIONAL_VERSIONS), "
"\"lib\" directories near Boost_INCLUDE_DIR, and the library name "
"configuration settings below.  It saves the library directory in "
"Boost_LIBRARY_DIR and individual library locations in "
"Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE. When one changes "
"settings used by previous searches in the same build tree (excluding "
"environment variables) this module discards previous search results affected "
"by the changes and searches again."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:74
msgid ""
"Boost libraries come in many variants encoded in their file name. Users or "
"projects may tell this module which variant to find by setting variables::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:78
msgid ""
"Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n"
"                           libraries ('mt' tag).  Default is ON.\n"
"Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n"
"                           libraries.  Default is OFF.\n"
"Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n"
"                           libraries linked statically to the C++ runtime\n"
"                           ('s' tag).  Default is platform dependent.\n"
"Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n"
"                           libraries linked to the MS debug C++ runtime\n"
"                           ('g' tag).  Default is ON.\n"
"Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n"
"                           debug Python build ('y' tag). Default is OFF.\n"
"Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n"
"                           STLPort ('p' tag).  Default is OFF.\n"
"Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n"
"                         - Set to ON to use libraries compiled with\n"
"                           STLPort deprecated \"native iostreams\"\n"
"                           ('n' tag).  Default is OFF.\n"
"Boost_COMPILER           - Set to the compiler-specific library suffix\n"
"                           (e.g. \"-gcc43\").  Default is auto-computed\n"
"                           for the C++ compiler in use.\n"
"Boost_THREADAPI          - Suffix for \"thread\" component library name,\n"
"                           such as \"pthread\" or \"win32\".  Names with\n"
"                           and without this suffix will both be tried.\n"
"Boost_NAMESPACE          - Alternate namespace used to build boost with\n"
"                           e.g. if set to \"myboost\", will search for\n"
"                           myboost_thread instead of boost_thread."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:106
msgid "Other variables one may set to control this module are::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:108
msgid ""
"Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n"
"                           Please enable this before filing any bug report.\n"
"Boost_DETAILED_FAILURE_MSG\n"
"                         - Set to ON to add detailed information to the\n"
"                           failure message even when the REQUIRED option\n"
"                           is not given to the find_package call.\n"
"Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n"
"                           libraries to assist with packaging.  For "
"example,\n"
"                           the \"system\" component library may be resolved "
"to\n"
"                           \"/usr/lib/libboost_system.so.1.42.0\" instead "
"of\n"
"                           \"/usr/lib/libboost_system.so\".  This does not\n"
"                           affect linking and should not be enabled unless\n"
"                           the user needs this information."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:122
msgid ""
"On Visual Studio and Borland compilers Boost headers request automatic "
"linking to corresponding libraries.  This requires matching libraries to be "
"linked explicitly or available in the link library search path. In this case "
"setting Boost_USE_STATIC_LIBS to OFF may not achieve dynamic linking.  Boost "
"automatic linking typically requests static libraries with a few exceptions "
"(such as Boost.Python).  Use::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:129
msgid "add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:131
msgid "to ask Boost to report information about automatic linking requests."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:133
msgid "Example to find Boost headers only::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:135
msgid ""
"find_package(Boost 1.36.0)\n"
"if(Boost_FOUND)\n"
"  include_directories(${Boost_INCLUDE_DIRS})\n"
"  add_executable(foo foo.cc)\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:141
msgid "Example to find Boost headers and some *static* libraries::"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:143
msgid ""
"set(Boost_USE_STATIC_LIBS        ON) # only find static libs\n"
"set(Boost_USE_MULTITHREADED      ON)\n"
"set(Boost_USE_STATIC_RUNTIME    OFF)\n"
"find_package(Boost 1.36.0 COMPONENTS date_time filesystem system ...)\n"
"if(Boost_FOUND)\n"
"  include_directories(${Boost_INCLUDE_DIRS})\n"
"  add_executable(foo foo.cc)\n"
"  target_link_libraries(foo ${Boost_LIBRARIES})\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:154
msgid "Boost CMake"
msgstr ""

#: ../../../../Modules/FindBoost.cmake:156
msgid ""
"If Boost was built using the boost-cmake project it provides a package "
"configuration file for use with find_package's Config mode.  This module "
"looks for the package configuration file called BoostConfig.cmake or boost-"
"config.cmake and stores the result in cache entry \"Boost_DIR\".  If found, "
"the package configuration file is loaded and this module returns with no "
"further action.  See documentation of the Boost CMake package configuration "
"for details on what it provides."
msgstr ""

#: ../../../../Modules/FindBoost.cmake:164
msgid "Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake."
msgstr ""
