# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/ExternalProject.cmake:3
msgid "ExternalProject"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:5
msgid "Create custom targets to build projects in external trees"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:7
msgid ""
"The ``ExternalProject_Add`` function creates a custom target to drive "
"download, update/patch, configure, build, install and test steps of an "
"external project:"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:11
msgid ""
"ExternalProject_Add(<name>    # Name for custom target\n"
"  [DEPENDS projects...]       # Targets on which the project depends\n"
"  [PREFIX dir]                # Root dir for entire project\n"
"  [LIST_SEPARATOR sep]        # Sep to be replaced by ; in cmd lines\n"
"  [TMP_DIR dir]               # Directory to store temporary files\n"
"  [STAMP_DIR dir]             # Directory to store step timestamps\n"
"  [EXCLUDE_FROM_ALL 1]        # The \"all\" target does not depend on this\n"
" #--Download step--------------\n"
"  [DOWNLOAD_NAME fname]       # File name to store (if not end of URL)\n"
"  [DOWNLOAD_DIR dir]          # Directory to store downloaded files\n"
"  [DOWNLOAD_COMMAND cmd...]   # Command to download source tree\n"
"  [DOWNLOAD_NO_PROGRESS 1]    # Disable download progress reports\n"
"  [CVS_REPOSITORY cvsroot]    # CVSROOT of CVS repository\n"
"  [CVS_MODULE mod]            # Module to checkout from CVS repo\n"
"  [CVS_TAG tag]               # Tag to checkout from CVS repo\n"
"  [SVN_REPOSITORY url]        # URL of Subversion repo\n"
"  [SVN_REVISION -r<rev>]      # Revision to checkout from Subversion repo\n"
"  [SVN_USERNAME john ]        # Username for Subversion checkout and update\n"
"  [SVN_PASSWORD doe ]         # Password for Subversion checkout and update\n"
"  [SVN_TRUST_CERT 1 ]         # Trust the Subversion server site "
"certificate\n"
"  [GIT_REPOSITORY url]        # URL of git repo\n"
"  [GIT_TAG tag]               # Git branch name, commit id or tag\n"
"  [GIT_SUBMODULES modules...] # Git submodules that shall be updated, all if "
"empty\n"
"  [HG_REPOSITORY url]         # URL of mercurial repo\n"
"  [HG_TAG tag]                # Mercurial branch name, commit id or tag\n"
"  [URL /.../src.tgz]          # Full path or URL of source\n"
"  [URL_HASH ALGO=value]       # Hash of file at URL\n"
"  [URL_MD5 md5]               # Equivalent to URL_HASH MD5=md5\n"
"  [TLS_VERIFY bool]           # Should certificate for https be checked\n"
"  [TLS_CAINFO file]           # Path to a certificate authority file\n"
"  [TIMEOUT seconds]           # Time allowed for file download operations\n"
" #--Update/Patch step----------\n"
"  [UPDATE_COMMAND cmd...]     # Source work-tree update command\n"
"  [PATCH_COMMAND cmd...]      # Command to patch downloaded source\n"
" #--Configure step-------------\n"
"  [SOURCE_DIR dir]            # Source dir to be used for build\n"
"  [CONFIGURE_COMMAND cmd...]  # Build tree configuration command\n"
"  [CMAKE_COMMAND /.../cmake]  # Specify alternative cmake executable\n"
"  [CMAKE_GENERATOR gen]       # Specify generator for native build\n"
"  [CMAKE_GENERATOR_PLATFORM p] # Generator-specific platform name\n"
"  [CMAKE_GENERATOR_TOOLSET t] # Generator-specific toolset name\n"
"  [CMAKE_ARGS args...]        # Arguments to CMake command line\n"
"  [CMAKE_CACHE_ARGS args...]  # Initial cache args with form -Dvar:"
"string=on\n"
" #--Build step-----------------\n"
"  [BINARY_DIR dir]            # Specify build dir location\n"
"  [BUILD_COMMAND cmd...]      # Command to drive the native build\n"
"  [BUILD_IN_SOURCE 1]         # Use source dir for build dir\n"
"  [BUILD_ALWAYS 1]            # No stamp file, build step always runs\n"
" #--Install step---------------\n"
"  [INSTALL_DIR dir]           # Installation prefix\n"
"  [INSTALL_COMMAND cmd...]    # Command to drive install after build\n"
" #--Test step------------------\n"
"  [TEST_BEFORE_INSTALL 1]     # Add test step executed before install step\n"
"  [TEST_AFTER_INSTALL 1]      # Add test step executed after install step\n"
"  [TEST_COMMAND cmd...]       # Command to drive test\n"
" #--Output logging-------------\n"
"  [LOG_DOWNLOAD 1]            # Wrap download in script to log output\n"
"  [LOG_UPDATE 1]              # Wrap update in script to log output\n"
"  [LOG_CONFIGURE 1]           # Wrap configure in script to log output\n"
"  [LOG_BUILD 1]               # Wrap build in script to log output\n"
"  [LOG_TEST 1]                # Wrap test in script to log output\n"
"  [LOG_INSTALL 1]             # Wrap install in script to log output\n"
" #--Custom targets-------------\n"
"  [STEP_TARGETS st1 st2 ...]  # Generate custom targets for these steps\n"
"  )"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:79
msgid ""
"The ``*_DIR`` options specify directories for the project, with default "
"directories computed as follows.  If the ``PREFIX`` option is given to "
"``ExternalProject_Add()`` or the ``EP_PREFIX`` directory property is set, "
"then an external project is built and installed under the specified prefix::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:84
msgid ""
"TMP_DIR      = <prefix>/tmp\n"
"STAMP_DIR    = <prefix>/src/<name>-stamp\n"
"DOWNLOAD_DIR = <prefix>/src\n"
"SOURCE_DIR   = <prefix>/src/<name>\n"
"BINARY_DIR   = <prefix>/src/<name>-build\n"
"INSTALL_DIR  = <prefix>"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:91
msgid ""
"Otherwise, if the ``EP_BASE`` directory property is set then components of "
"an external project are stored under the specified base::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:94
msgid ""
"TMP_DIR      = <base>/tmp/<name>\n"
"STAMP_DIR    = <base>/Stamp/<name>\n"
"DOWNLOAD_DIR = <base>/Download/<name>\n"
"SOURCE_DIR   = <base>/Source/<name>\n"
"BINARY_DIR   = <base>/Build/<name>\n"
"INSTALL_DIR  = <base>/Install/<name>"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:101
msgid ""
"If no ``PREFIX``, ``EP_PREFIX``, or ``EP_BASE`` is specified then the "
"default is to set ``PREFIX`` to ``<name>-prefix``.  Relative paths are "
"interpreted with respect to the build directory corresponding to the source "
"directory in which ``ExternalProject_Add`` is invoked."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:106
msgid ""
"If ``SOURCE_DIR`` is explicitly set to an existing directory the project "
"will be built from it.  Otherwise a download step must be specified using "
"one of the ``DOWNLOAD_COMMAND``, ``CVS_*``, ``SVN_*``, or ``URL`` options.  "
"The ``URL`` option may refer locally to a directory or source tarball, or "
"refer to a remote tarball (e.g. ``http://.../src.tgz``)."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:112
msgid ""
"The ``ExternalProject_Add_Step`` function adds a custom step to an external "
"project:"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:115
msgid ""
"ExternalProject_Add_Step(<name> <step> # Names of project and custom step\n"
"  [COMMAND cmd...]        # Command line invoked by this step\n"
"  [COMMENT \"text...\"]     # Text printed when step executes\n"
"  [DEPENDEES steps...]    # Steps on which this step depends\n"
"  [DEPENDERS steps...]    # Steps that depend on this step\n"
"  [DEPENDS files...]      # Files on which this step depends\n"
"  [ALWAYS 1]              # No stamp file, step always runs\n"
"  [EXCLUDE_FROM_MAIN 1]   # Main target does not depend on this step\n"
"  [WORKING_DIRECTORY dir] # Working directory for command\n"
"  [LOG 1]                 # Wrap step in script to log output\n"
"  )"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:129
msgid ""
"The command line, comment, and working directory of every standard and "
"custom step is processed to replace tokens ``<SOURCE_DIR>``, "
"``<BINARY_DIR>``, ``<INSTALL_DIR>``, and ``<TMP_DIR>`` with corresponding "
"property values."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:134
msgid ""
"Any builtin step that specifies a ``<step>_COMMAND cmd...`` or custom step "
"that specifies a ``COMMAND cmd...`` may specify additional command lines "
"using the form ``COMMAND cmd...``.  At build time the commands will be "
"executed in order and aborted if any one fails.  For example::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:139
msgid "... BUILD_COMMAND make COMMAND echo done ..."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:141
msgid ""
"specifies to run ``make`` and then ``echo done`` during the build step. "
"Whether the current working directory is preserved between commands is not "
"defined.  Behavior of shell operators like ``&&`` is not defined."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:145
msgid ""
"The ``ExternalProject_Get_Property`` function retrieves external project "
"target properties::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:148
msgid "ExternalProject_Get_Property(<name> [prop1 [prop2 [...]]])"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:150
msgid ""
"It stores property values in variables of the same name.  Property names "
"correspond to the keyword argument names of ``ExternalProject_Add``."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:154
msgid ""
"The ``ExternalProject_Add_StepTargets`` function generates custom targets "
"for the steps listed::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:157
msgid "ExternalProject_Add_StepTargets(<name> [step1 [step2 [...]]])"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:159
msgid ""
"If ``STEP_TARGETS`` is set then ``ExternalProject_Add_StepTargets`` is "
"automatically called at the end of matching calls to "
"``ExternalProject_Add_Step``.  Pass ``STEP_TARGETS`` explicitly to "
"individual ``ExternalProject_Add`` calls, or implicitly to all "
"``ExternalProject_Add`` calls by setting the directory property "
"``EP_STEP_TARGETS``."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:166
msgid ""
"If ``STEP_TARGETS`` is not set, clients may still manually call "
"``ExternalProject_Add_StepTargets`` after calling ``ExternalProject_Add`` or "
"``ExternalProject_Add_Step``."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:170
msgid ""
"This functionality is provided to make it easy to drive the steps "
"independently of each other by specifying targets on build command lines.  "
"For example, you may be submitting to a sub-project based dashboard, where "
"you want to drive the configure portion of the build, then submit to the "
"dashboard, followed by the build portion, followed by tests.  If you invoke "
"a custom target that depends on a step halfway through the step dependency "
"chain, then all the previous steps will also run to ensure everything is up "
"to date."
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:179
msgid ""
"For example, to drive configure, build and test steps independently for each "
"``ExternalProject_Add`` call in your project, write the following line prior "
"to any ``ExternalProject_Add`` calls in your ``CMakeLists.txt`` file::"
msgstr ""

#: ../../../../Modules/ExternalProject.cmake:184
msgid "set_property(DIRECTORY PROPERTY EP_STEP_TARGETS configure build test)"
msgstr ""
