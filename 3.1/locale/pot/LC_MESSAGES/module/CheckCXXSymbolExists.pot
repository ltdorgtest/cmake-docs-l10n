# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckCXXSymbolExists.cmake:3
msgid "CheckCXXSymbolExists"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:5
msgid "Check if a symbol exists as a function, variable, or macro in C++"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:7
msgid "CHECK_CXX_SYMBOL_EXISTS(<symbol> <files> <variable>)"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:9
msgid ""
"Check that the <symbol> is available after including given header <files> "
"and store the result in a <variable>.  Specify the list of files in one "
"argument as a semicolon-separated list. CHECK_CXX_SYMBOL_EXISTS() can be "
"used to check in C++ files, as opposed to CHECK_SYMBOL_EXISTS(), which works "
"only for C."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:15
msgid ""
"If the header files define the symbol as a macro it is considered available "
"and assumed to work.  If the header files declare the symbol as a function "
"or variable then the symbol must also be available for linking.  If the "
"symbol is a type or enum value it will not be recognized (consider using "
"CheckTypeSize or CheckCSourceCompiles)."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:21
msgid ""
"The following variables may be set before calling this macro to modify the "
"way the check is run:"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:26
msgid ""
"CMAKE_REQUIRED_FLAGS = string of compile command line flags\n"
"CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n"
"CMAKE_REQUIRED_INCLUDES = list of include directories\n"
"CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n"
"CMAKE_REQUIRED_QUIET = execute quietly without messages"
msgstr ""
