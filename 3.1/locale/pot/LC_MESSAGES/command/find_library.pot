# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2015 Kitware, Inc.
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/find_library.rst:2
msgid "find_library"
msgstr ""

#: ../../../command/FIND_XXX.txt:1
msgid "A short-hand signature is:"
msgstr ""

#: ../../../command/FIND_XXX.txt:34
msgid "|FIND_XXX| (<VAR> name1 [path1 path2 ...])"
msgstr ""

#: ../../../command/FIND_XXX.txt:7
msgid "The general signature is:"
msgstr ""

#: ../../../command/FIND_XXX.txt:40
msgid ""
"|FIND_XXX| (\n"
"          <VAR>\n"
"          name | |NAMES|\n"
"          [HINTS path1 [path2 ... ENV var]]\n"
"          [PATHS path1 [path2 ... ENV var]]\n"
"          [PATH_SUFFIXES suffix1 [suffix2 ...]]\n"
"          [DOC \"cache documentation string\"]\n"
"          [NO_DEFAULT_PATH]\n"
"          [NO_CMAKE_ENVIRONMENT_PATH]\n"
"          [NO_CMAKE_PATH]\n"
"          [NO_SYSTEM_ENVIRONMENT_PATH]\n"
"          [NO_CMAKE_SYSTEM_PATH]\n"
"          [CMAKE_FIND_ROOT_PATH_BOTH |\n"
"           ONLY_CMAKE_FIND_ROOT_PATH |\n"
"           NO_CMAKE_FIND_ROOT_PATH]\n"
"         )"
msgstr ""

#: ../../../command/FIND_XXX.txt:28
msgid ""
"This command is used to find a |SEARCH_XXX_DESC|. A cache entry named by "
"``<VAR>`` is created to store the result of this command. If the |"
"SEARCH_XXX| is found the result is stored in the variable and the search "
"will not be repeated unless the variable is cleared. If nothing is found, "
"the result will be ``<VAR>-NOTFOUND``, and the search will be attempted "
"again the next time |FIND_XXX| is invoked with the same variable. The name "
"of the |SEARCH_XXX| that is searched for is specified by the names listed "
"after the NAMES argument.   Additional search locations can be specified "
"after the PATHS argument.  If ENV var is found in the HINTS or PATHS section "
"the environment variable var will be read and converted from a system "
"environment variable to a cmake style list of paths.  For example ENV PATH "
"would be a way to list the system path variable. The argument after DOC will "
"be used for the documentation string in the cache. PATH_SUFFIXES specifies "
"additional subdirectories to check below each search path."
msgstr ""

#: ../../../command/FIND_XXX.txt:49
msgid ""
"If NO_DEFAULT_PATH is specified, then no additional paths are added to the "
"search. If NO_DEFAULT_PATH is not specified, the search process is as "
"follows:"
msgstr ""

#: ../../../command/FIND_XXX.txt:59
msgid ""
"Search paths specified in cmake-specific cache variables. These are intended "
"to be used on the command line with a -DVAR=value. This can be skipped if "
"NO_CMAKE_PATH is passed."
msgstr ""

#: ../../../command/FIND_XXX.txt:63 ../../../command/FIND_XXX.txt:71
msgid "|CMAKE_PREFIX_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:64 ../../../command/FIND_XXX.txt:72
msgid "|CMAKE_XXX_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:65 ../../../command/FIND_XXX.txt:73
msgid "|CMAKE_XXX_MAC_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:67
msgid ""
"Search paths specified in cmake-specific environment variables. These are "
"intended to be set in the user's shell configuration. This can be skipped if "
"NO_CMAKE_ENVIRONMENT_PATH is passed."
msgstr ""

#: ../../../command/FIND_XXX.txt:75
msgid ""
"Search the paths specified by the HINTS option. These should be paths "
"computed by system introspection, such as a hint provided by the location of "
"another item already found. Hard-coded guesses should be specified with the "
"PATHS option."
msgstr ""

#: ../../../command/FIND_XXX.txt:80
msgid ""
"Search the standard system environment variables. This can be skipped if "
"NO_SYSTEM_ENVIRONMENT_PATH is an argument."
msgstr ""

#: ../../../command/FIND_XXX.txt:83
msgid "|SYSTEM_ENVIRONMENT_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:85
msgid ""
"Search cmake variables defined in the Platform files for the current "
"system.  This can be skipped if NO_CMAKE_SYSTEM_PATH is passed."
msgstr ""

#: ../../../command/FIND_XXX.txt:89
msgid "|CMAKE_SYSTEM_PREFIX_PATH_XXX|"
msgstr ""

#: ../../../command/FIND_XXX.txt:90
msgid "|CMAKE_SYSTEM_XXX_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:91
msgid "|CMAKE_SYSTEM_XXX_MAC_PATH|"
msgstr ""

#: ../../../command/FIND_XXX.txt:93
msgid ""
"Search the paths specified by the PATHS option or in the short-hand version "
"of the command. These are typically hard-coded guesses."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:1
msgid ""
"On Darwin or systems supporting OS X Frameworks, the cmake variable "
"CMAKE_FIND_FRAMEWORK can be set to empty or one of the following:"
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:4
msgid ""
"FIRST: Try to find frameworks before standard libraries or headers. This is "
"the default on Darwin."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:7
msgid "LAST: Try to find frameworks after standard libraries or headers."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:9
msgid "ONLY: Only try to find frameworks."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:11
msgid "NEVER: Never try to find frameworks."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:13
msgid ""
"On Darwin or systems supporting OS X Application Bundles, the cmake variable "
"CMAKE_FIND_APPBUNDLE can be set to empty or one of the following:"
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:17
msgid ""
"FIRST: Try to find application bundles before standard programs. This is the "
"default on Darwin."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:20
msgid "LAST: Try to find application bundles after standard programs."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:22
msgid "ONLY: Only try to find application bundles."
msgstr ""

#: ../../../command/FIND_XXX_MAC.txt:24
msgid "NEVER: Never try to find application bundles."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:1
msgid ""
"The CMake variable :variable:`CMAKE_FIND_ROOT_PATH` specifies one or more "
"directories to be prepended to all other search directories.  This "
"effectively \"re-roots\" the entire search under given locations. Paths "
"which are descendants of the :variable:`CMAKE_STAGING_PREFIX` are excluded "
"from this re-rooting, because that variable is always a path on the host "
"system. By default the :variable:`CMAKE_FIND_ROOT_PATH` is empty."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:8
msgid ""
"The :variable:`CMAKE_SYSROOT` variable can also be used to specify exactly "
"one directory to use as a prefix.  Setting :variable:`CMAKE_SYSROOT` also "
"has other effects.  See the documentation for that variable for more."
msgstr ""

#: ../../../command/FIND_XXX_ROOT.txt:12
msgid ""
"These variables are especially useful when cross-compiling to point to the "
"root directory of the target environment and CMake will search there too.  "
"By default at first the directories listed in :variable:"
"`CMAKE_FIND_ROOT_PATH` are searched, then the :variable:`CMAKE_SYSROOT` "
"directory is searched, and then the non-rooted directories will be "
"searched.  The default behavior can be adjusted by setting |"
"CMAKE_FIND_ROOT_PATH_MODE_XXX|.  This behavior can be manually overridden on "
"a per-call basis.  By using CMAKE_FIND_ROOT_PATH_BOTH the search order will "
"be as described above.  If NO_CMAKE_FIND_ROOT_PATH is used then :variable:"
"`CMAKE_FIND_ROOT_PATH` will not be used.  If ONLY_CMAKE_FIND_ROOT_PATH is "
"used then only the re-rooted directories and directories below :variable:"
"`CMAKE_STAGING_PREFIX` will be searched."
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:1
msgid ""
"The default search order is designed to be most-specific to least-specific "
"for common use cases. Projects may override the order by simply calling the "
"command multiple times and using the ``NO_*`` options:"
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:191
msgid ""
"|FIND_XXX| (|FIND_ARGS_XXX| PATHS paths... NO_DEFAULT_PATH)\n"
"|FIND_XXX| (|FIND_ARGS_XXX|)"
msgstr ""

#: ../../../command/FIND_XXX_ORDER.txt:11
msgid ""
"Once one of the calls succeeds the result variable will be set and stored in "
"the cache so that no call will search again."
msgstr ""

#: ../../../command/find_library.rst:29
msgid ""
"When more than one value is given to the NAMES option this command by "
"default will consider one name at a time and search every directory for it.  "
"The NAMES_PER_DIR option tells this command to consider one directory at a "
"time and search for all names in it."
msgstr ""

#: ../../../command/find_library.rst:34
msgid ""
"If the library found is a framework, then VAR will be set to the full path "
"to the framework <fullPath>/A.framework.  When a full path to a framework is "
"used as a library, CMake will use a -framework A, and a -F<fullPath> to link "
"the framework to the target."
msgstr ""

#: ../../../command/find_library.rst:39
msgid ""
"If the global property FIND_LIBRARY_USE_LIB64_PATHS is set all search paths "
"will be tested as normal, with \"64/\" appended, and with all matches of "
"\"lib/\" replaced with \"lib64/\".  This property is automatically set for "
"the platforms that are known to need it if at least one of the languages "
"supported by the PROJECT command is enabled."
msgstr ""
