# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2017 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPkgConfig.cmake:6
msgid "FindPkgConfig"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:8
msgid "A `pkg-config` module for CMake."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:10
msgid ""
"Finds the ``pkg-config`` executable and add the :command:`pkg_check_modules` "
"and :command:`pkg_search_module` commands."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:14
msgid ""
"In order to find the ``pkg-config`` executable, it uses the :variable:"
"`PKG_CONFIG_EXECUTABLE` variable or the ``PKG_CONFIG`` environment variable "
"first."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:85
msgid "Retrieves the value of a variable from a package::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:87
msgid "pkg_get_variable(<RESULT> <MODULE> <VARIABLE>)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:89
msgid ""
"If multiple values are returned variable will contain a :ref:`;-list <CMake "
"Language Lists>`."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:92
msgid "For example:"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:94
msgid "pkg_get_variable(GI_GIRDIR gobject-introspection-1.0 girdir)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:479
msgid "Checks for all the given modules. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:481
msgid ""
"pkg_check_modules(<PREFIX> [REQUIRED] [QUIET]\n"
"                  [NO_CMAKE_PATH] [NO_CMAKE_ENVIRONMENT_PATH]\n"
"                  [IMPORTED_TARGET]\n"
"                  <MODULE> [<MODULE>]*)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:487
msgid ""
"When the ``REQUIRED`` argument was set, macros will fail with an error when "
"module(s) could not be found."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:490
msgid "When the ``QUIET`` argument is set, no status messages will be printed."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:492
msgid ""
"By default, if :variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, "
"or if :variable:`PKG_CONFIG_USE_CMAKE_PREFIX_PATH` is set, the :variable:"
"`CMAKE_PREFIX_PATH`, :variable:`CMAKE_FRAMEWORK_PATH`, and :variable:"
"`CMAKE_APPBUNDLE_PATH` cache and environment variables will be added to "
"``pkg-config`` search path. The ``NO_CMAKE_PATH`` and "
"``NO_CMAKE_ENVIRONMENT_PATH`` arguments disable this behavior for the cache "
"variables and the environment variables, respectively. The "
"``IMPORTED_TARGET`` argument will create an imported target named PkgConfig::"
"<PREFIX>> that can be passed directly as an argument to :command:"
"`target_link_libraries`."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:504
msgid "It sets the following variables: ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:506
msgid ""
"PKG_CONFIG_FOUND          ... if pkg-config executable was found\n"
"PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n"
"PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n"
"                              (since CMake 2.8.8)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:511
msgid ""
"For the following variables two sets of values exist; first one is the "
"common one and has the given PREFIX.  The second set contains flags which "
"are given out when ``pkg-config`` was called with the ``--static`` option. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:516
msgid ""
"<XPREFIX>_FOUND          ... set to 1 if module(s) exist\n"
"<XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n"
"<XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n"
"<XPREFIX>_LDFLAGS        ... all required linker flags\n"
"<XPREFIX>_LDFLAGS_OTHER  ... all other linker flags\n"
"<XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n"
"<XPREFIX>_CFLAGS         ... all required cflags\n"
"<XPREFIX>_CFLAGS_OTHER   ... the other compiler flags"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:527
msgid ""
"<XPREFIX> = <PREFIX>        for common case\n"
"<XPREFIX> = <PREFIX>_STATIC for static linking"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:530
msgid ""
"Every variable containing multiple values will be a :ref:`;-list <CMake "
"Language Lists>`."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:533
msgid ""
"There are some special variables whose prefix depends on the count of given "
"modules.  When there is only one module, <PREFIX> stays unchanged.  When "
"there are multiple modules, the prefix will be changed to "
"<PREFIX>_<MODNAME>: ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:538
msgid ""
"<XPREFIX>_VERSION    ... version of the module\n"
"<XPREFIX>_PREFIX     ... prefix-directory of the module\n"
"<XPREFIX>_INCLUDEDIR ... include-dir of the module\n"
"<XPREFIX>_LIBDIR     ... lib-dir of the module"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:545
msgid ""
"<XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n"
"<XPREFIX> = <PREFIX>_<MODNAME>"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:548
msgid "A <MODULE> parameter can have the following formats: ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:550
msgid ""
"{MODNAME}            ... matches any version\n"
"{MODNAME}>={VERSION} ... at least version <VERSION> is required\n"
"{MODNAME}={VERSION}  ... exactly version <VERSION> is required\n"
"{MODNAME}<={VERSION} ... modules must not be newer than <VERSION>"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:555
#: ../../../../Modules/FindPkgConfig.cmake:611
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:557
msgid "pkg_check_modules (GLIB2   glib-2.0)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:561
msgid "pkg_check_modules (GLIB2   glib-2.0>=2.10)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:565
msgid ""
"Requires at least version 2.10 of glib2 and defines e.g. "
"``GLIB2_VERSION=2.10.3``"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:568
msgid "pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:572
msgid ""
"Requires both glib2 and gtk2, and defines e.g. "
"``FOO_glib-2.0_VERSION=2.10.3`` and ``FOO_gtk+-2.0_VERSION=2.8.20``"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:575
msgid "pkg_check_modules (XRENDER REQUIRED xrender)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:579
msgid "Defines for example::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:581
msgid ""
"XRENDER_LIBRARIES=Xrender;X11``\n"
"XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:603
msgid ""
"Same as :command:`pkg_check_modules`, but instead it checks for given "
"modules and uses the first working one. ::"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:606
msgid ""
"pkg_search_module(<PREFIX> [REQUIRED] [QUIET]\n"
"                  [NO_CMAKE_PATH] [NO_CMAKE_ENVIRONMENT_PATH]\n"
"                  [IMPORTED_TARGET]\n"
"                  <MODULE> [<MODULE>]*)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:613
msgid "pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)"
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:654
msgid "Path to the pkg-config executable."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:659
msgid ""
"Whether :command:`pkg_check_modules` and :command:`pkg_search_module` should "
"add the paths in :variable:`CMAKE_PREFIX_PATH`, :variable:"
"`CMAKE_FRAMEWORK_PATH`, and :variable:`CMAKE_APPBUNDLE_PATH` cache and "
"environment variables to ``pkg-config`` search path."
msgstr ""

#: ../../../../Modules/FindPkgConfig.cmake:664
msgid ""
"If this variable is not set, this behavior is enabled by default if :"
"variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, disabled "
"otherwise."
msgstr ""
