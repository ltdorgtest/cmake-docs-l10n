# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2016 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CPackDeb.cmake:6
msgid "CPackDeb"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:8
msgid "The built in (binary) CPack Deb generator (Unix only)"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:11
msgid "Variables specific to CPack Debian (DEB) generator"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:13
msgid ""
"CPackDeb may be used to create Deb package using :module:`CPack`. CPackDeb "
"is a :module:`CPack` generator thus it uses the ``CPACK_XXX`` variables used "
"by :module:`CPack`."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:17
msgid ""
"CPackDeb generator should work on any Linux host but it will produce better "
"deb package when Debian specific tools ``dpkg-xxx`` are usable on the build "
"system."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:21
msgid ""
"CPackDeb has specific features which are controlled by the specifics :code:"
"`CPACK_DEBIAN_XXX` variables."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:24
msgid ""
":code:`CPACK_DEBIAN_<COMPONENT>_XXXX` variables may be used in order to have "
"**component** specific values.  Note however that ``<COMPONENT>`` refers to "
"the **grouping name** written in upper case. It may be either a component "
"name or a component GROUP name."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:29
msgid ""
"Here are some CPackDeb wiki resources that are here for historic reasons and "
"are no longer maintained but may still prove useful:"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:32
msgid "https://cmake.org/Wiki/CMake:CPackConfiguration"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:33
msgid "https://cmake.org/Wiki/CMake:CPackPackageGenerators#DEB_.28UNIX_only.29"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:35
msgid "List of CPackDEB specific variables:"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:39
msgid "Enable component packaging for CPackDEB"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:41 ../../../../Modules/CPackDeb.cmake:124
#: ../../../../Modules/CPackDeb.cmake:151
#: ../../../../Modules/CPackDeb.cmake:232
#: ../../../../Modules/CPackDeb.cmake:246
#: ../../../../Modules/CPackDeb.cmake:264
#: ../../../../Modules/CPackDeb.cmake:276
#: ../../../../Modules/CPackDeb.cmake:293
#: ../../../../Modules/CPackDeb.cmake:313
#: ../../../../Modules/CPackDeb.cmake:330
#: ../../../../Modules/CPackDeb.cmake:354
#: ../../../../Modules/CPackDeb.cmake:370
#: ../../../../Modules/CPackDeb.cmake:386
#: ../../../../Modules/CPackDeb.cmake:401
#: ../../../../Modules/CPackDeb.cmake:412
#: ../../../../Modules/CPackDeb.cmake:428
#: ../../../../Modules/CPackDeb.cmake:443
#: ../../../../Modules/CPackDeb.cmake:465
#: ../../../../Modules/CPackDeb.cmake:487
msgid "Mandatory : NO"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:42 ../../../../Modules/CPackDeb.cmake:413
msgid "Default   : OFF"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:44
msgid ""
"If enabled (ON) multiple packages are generated. By default a single package "
"containing files of all components is generated."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:50
msgid ""
"Set Package control field (variable is automatically transformed to lower "
"case)."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:53 ../../../../Modules/CPackDeb.cmake:68
#: ../../../../Modules/CPackDeb.cmake:94 ../../../../Modules/CPackDeb.cmake:101
#: ../../../../Modules/CPackDeb.cmake:115
#: ../../../../Modules/CPackDeb.cmake:158
#: ../../../../Modules/CPackDeb.cmake:166
#: ../../../../Modules/CPackDeb.cmake:178
#: ../../../../Modules/CPackDeb.cmake:187
#: ../../../../Modules/CPackDeb.cmake:205
#: ../../../../Modules/CPackDeb.cmake:221
msgid "Mandatory : YES"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:54 ../../../../Modules/CPackDeb.cmake:125
#: ../../../../Modules/CPackDeb.cmake:167
#: ../../../../Modules/CPackDeb.cmake:247
#: ../../../../Modules/CPackDeb.cmake:277
#: ../../../../Modules/CPackDeb.cmake:294
#: ../../../../Modules/CPackDeb.cmake:314
#: ../../../../Modules/CPackDeb.cmake:331
#: ../../../../Modules/CPackDeb.cmake:355
#: ../../../../Modules/CPackDeb.cmake:371
#: ../../../../Modules/CPackDeb.cmake:387
#: ../../../../Modules/CPackDeb.cmake:402
#: ../../../../Modules/CPackDeb.cmake:488
msgid "Default   :"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:56
msgid ":variable:`CPACK_PACKAGE_NAME` for non-component based installations"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:58
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_NAME` suffixed with -<COMPONENT> for "
"component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:61 ../../../../Modules/CPackDeb.cmake:494
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Source"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:66
msgid "Package file name."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:69
msgid "Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:71
msgid ""
"This may be set to ``DEB-DEFAULT`` to allow CPackDeb to generate package "
"file name by itself in deb format::"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:74
msgid ""
"<PackageName>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:76
msgid "Alternatively provided package file name must end with ``.deb`` suffix."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:80
msgid ""
"Preferred setting of this variable is ``DEB-DEFAULT`` but for backward "
"compatibility with CPackDeb in CMake prior to version 3.6 this feature is "
"disabled by default."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:86
msgid ""
"By using non default filenames duplicate names may occur. Duplicate files "
"get overwritten and it is up to the packager to set the variables in a "
"manner that will prevent such errors."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:92
msgid "The Debian package version"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:95
msgid "Default   : :variable:`CPACK_PACKAGE_VERSION`"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:99
msgid "The Debian package release - Debian revision number."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:102
msgid "Default   : 1"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:104
msgid ""
"This is the numbering of the DEB package itself, i.e. the version of the "
"packaging and not the version of the content (see :variable:"
"`CPACK_DEBIAN_PACKAGE_VERSION`). One may change the default value if the "
"previous packaging was buggy and/or you want to put here a fancy Linux "
"distro specific numbering."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:113
msgid "The Debian package architecture"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:116
msgid ""
"Default   : Output of :code:`dpkg --print-architecture` (or :code:`i386` if :"
"code:`dpkg` is not found)"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:122
msgid "Sets the Debian dependencies of this package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:127
#: ../../../../Modules/CPackDeb.cmake:279
#: ../../../../Modules/CPackDeb.cmake:296
#: ../../../../Modules/CPackDeb.cmake:316
#: ../../../../Modules/CPackDeb.cmake:333
#: ../../../../Modules/CPackDeb.cmake:357
#: ../../../../Modules/CPackDeb.cmake:373
#: ../../../../Modules/CPackDeb.cmake:389
#: ../../../../Modules/CPackDeb.cmake:404
#: ../../../../Modules/CPackDeb.cmake:490
msgid "An empty string for non-component based installations"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:128
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:133
msgid ""
"If :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or more specifically :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` is set for this component, the "
"discovered dependencies will be appended to :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` instead of :variable:"
"`CPACK_DEBIAN_PACKAGE_DEPENDS`. If :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` is an empty string, only the "
"automatically discovered dependencies will be set for this component."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:142
msgid "Example::"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:144
msgid "set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= 2.3.1-6), libc6 (< 2.4)\")"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:148
msgid ""
"Sets inter component dependencies if listed with :variable:"
"`CPACK_COMPONENT_<compName>_DEPENDS` variables."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:152
#: ../../../../Modules/CPackDeb.cmake:233
#: ../../../../Modules/CPackDeb.cmake:265
#: ../../../../Modules/CPackDeb.cmake:444
msgid "Default   : -"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:156
msgid "The Debian package maintainer"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:159
msgid "Default   : :code:`CPACK_PACKAGE_CONTACT`"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:164
msgid "The Debian package description"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:169
msgid ":variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` if set or"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:170
msgid ":variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:176
msgid "Set Section control field e.g. admin, devel, doc, ..."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:179
msgid "Default   : \"devel\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:181
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:185
msgid "The archive format used for creating the Debian package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:188
msgid "Default   : \"paxr\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:190
#: ../../../../Modules/CPackDeb.cmake:208
msgid "Possible values are:"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:192
msgid "paxr"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:193
msgid "gnutar"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:197
msgid ""
"Default pax archive format is the most portable format and generates "
"packages that do not treat sparse files specially. GNU tar format on the "
"other hand supports longer filenames."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:203
msgid "The compression used for creating the Debian package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:206
msgid "Default   : \"gzip\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:210
msgid "lzma"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:211
msgid "xz"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:212
msgid "bzip2"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:213
msgid "gzip"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:218
msgid ""
"Set Priority control field e.g. required, important, standard, optional, "
"extra"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:222
msgid "Default   : \"optional\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:224
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:228
msgid ""
"The URL of the web site for this package, preferably (when applicable) the "
"site from which the original source can be obtained and any additional "
"upstream documentation or information may be found."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:237
msgid ""
"The content of this field is a simple URL without any surrounding characters "
"such as <>."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:243
msgid ""
"May be set to ON in order to use :code:`dpkg-shlibdeps` to generate better "
"package dependency list."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:249
msgid ":variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` if set or"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:250
msgid "OFF"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:254
msgid ""
"You may need set :variable:`CMAKE_INSTALL_RPATH` to an appropriate value if "
"you use this feature, because if you don't :code:`dpkg-shlibdeps` may fail "
"to find your own shared libs. See https://cmake.org/Wiki/"
"CMake_RPATH_handling."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:261
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"CPackDeb run."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:270
msgid ""
"Sets the `Pre-Depends` field of the Debian package. Like :variable:`Depends "
"<CPACK_DEBIAN_PACKAGE_DEPENDS>`, except that it also forces :code:`dpkg` to "
"complete installation of the packages named before even starting the "
"installation of the package which declares the pre-dependency."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:280
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` for component-based "
"installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:283
#: ../../../../Modules/CPackDeb.cmake:300
#: ../../../../Modules/CPackDeb.cmake:377
#: ../../../../Modules/CPackDeb.cmake:393
#: ../../../../Modules/CPackDeb.cmake:408
msgid ""
"See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"binarydeps"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:288
msgid ""
"Sets the `Enhances` field of the Debian package. Similar to :variable:"
"`Suggests <CPACK_DEBIAN_PACKAGE_SUGGESTS>` but works in the opposite "
"direction: declares that a package can enhance the functionality of another "
"package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:297
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:305
msgid ""
"Sets the `Breaks` field of the Debian package. When a binary package (P) "
"declares that it breaks other packages (B), :code:`dpkg` will not allow the "
"package (P) which declares `Breaks` be **unpacked** unless the packages that "
"will be broken (B) are deconfigured first. As long as the package (P) is "
"configured, the previously deconfigured packages (B) cannot be reconfigured "
"again."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:317
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_BREAKS` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:320
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-breaks"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:325
msgid ""
"Sets the `Conflicts` field of the Debian package. When one binary package "
"declares a conflict with another using a `Conflicts` field, :code:`dpkg` "
"will not allow them to be unpacked on the system at the same time."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:334
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:337
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"conflicts"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:341
msgid ""
"This is a stronger restriction than :variable:`Breaks "
"<CPACK_DEBIAN_PACKAGE_BREAKS>`, which prevents the broken package from being "
"configured while the breaking package is in the \"Unpacked\" state but "
"allows both packages to be unpacked at the same time."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:350
msgid ""
"Sets the `Provides` field of the Debian package. A virtual package is one "
"which appears in the `Provides` control field of another package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:358
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:361
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:366
msgid ""
"Sets the `Replaces` field of the Debian package. Packages can declare in "
"their control file that they should overwrite files in certain other "
"packages, or completely replace other packages."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:374
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_REPLACES` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:382
msgid ""
"Sets the `Recommends` field of the Debian package. Allows packages to "
"declare a strong, but not absolute, dependency on other packages."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:390
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` for component-based "
"installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:398
msgid ""
"Sets the `Suggests` field of the Debian package. Allows packages to declare "
"a suggested package install grouping."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:405
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:415
msgid ""
"Allows to generate shlibs control file automatically. Compatibility is "
"defined by :variable:`CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY` variable "
"value."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:420
msgid ""
"Libraries are only considered if they have both library name and version "
"set. This can be done by setting SOVERSION property with :command:"
"`set_target_properties` command."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:426
msgid "Compatibility policy for auto-generated shlibs control file."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:429
msgid "Default   : \"=\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:431
msgid ""
"Defines compatibility policy for auto-generated shlibs control file. "
"Possible values: \"=\", \">=\""
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:434
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-sharedlibs-"
"shlibdeps"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:439
msgid ""
"This variable allow advanced user to add custom script to the control.tar."
"gz. Typical usage is for conffiles, postinst, postrm, prerm."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:446
#: ../../../../Modules/CPackDeb.cmake:468
msgid "Usage::"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:448
msgid ""
"set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n"
"    \"${CMAKE_CURRENT_SOURCE_DIR/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:453
msgid ""
"The original permissions of the files will be used in the final package "
"unless the variable :variable:"
"`CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION` is set. In particular, the "
"scripts should have the proper executable flag prior to the generation of "
"the package."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:462
msgid ""
"This variable indicates if the Debian policy on control files should be "
"strictly followed."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:466
msgid "Default   : FALSE"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:470
msgid "set(CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION TRUE)"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:474
msgid ""
"This overrides the permissions on the original files, following the rules "
"set by Debian policy https://www.debian.org/doc/debian-policy/ch-files."
"html#s-permissions-owners"
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:481
msgid ""
"Sets the ``Source`` field of the binary Debian package. When the binary "
"package name is not the same as the source package name (in particular when "
"several components/binaries are generated from one source) the source from "
"which the binary has been generated should be indicated with the field "
"``Source``."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:491
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SOURCE` for component-based installations."
msgstr ""

#: ../../../../Modules/CPackDeb.cmake:498
msgid ""
"This value is not interpreted. It is possible to pass an optional revision "
"number of the referenced source package as well."
msgstr ""
