# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2016 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CPackRPM.cmake:6
msgid "CPackRPM"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:8
msgid "The built in (binary) CPack RPM generator (Unix only)"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:11
msgid "Variables specific to CPack RPM generator"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:13
msgid ""
"CPackRPM may be used to create RPM packages using :module:`CPack`. CPackRPM "
"is a :module:`CPack` generator thus it uses the ``CPACK_XXX`` variables used "
"by :module:`CPack`."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:17
msgid ""
"CPackRPM has specific features which are controlled by the specifics :code:"
"`CPACK_RPM_XXX` variables."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:20
msgid ""
":code:`CPACK_RPM_<COMPONENT>_XXXX` variables may be used in order to have "
"**component** specific values.  Note however that ``<COMPONENT>`` refers to "
"the **grouping name** written in upper case. It may be either a component "
"name or a component GROUP name. Usually those variables correspond to RPM "
"spec file entities. One may find information about spec files here http://"
"www.rpm.org/wiki/Docs"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:29
msgid ""
"`<COMPONENT>` part of variables is preferred to be in upper case (for e.g. "
"if component is named `foo` then use `CPACK_RPM_FOO_XXXX` variable name "
"format) as is with other `CPACK_<COMPONENT>_XXXX` variables. For the "
"purposes of back compatibility (CMake/CPack version 3.5 and lower) support "
"for same cased component (e.g. `fOo` would be used as `CPACK_RPM_fOo_XXXX`) "
"is still supported for variables defined in older versions of CMake/CPack "
"but is not guaranteed for variables that will be added in the future. For "
"the sake of back compatibility same cased component variables also override "
"upper cased versions where both are present."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:40
msgid ""
"Here are some CPackRPM wiki resources that are here for historic reasons and "
"are no longer maintained but may still prove useful:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:43
msgid "https://cmake.org/Wiki/CMake:CPackConfiguration"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:44
msgid "https://cmake.org/Wiki/CMake:CPackPackageGenerators#RPM_.28Unix_Only.29"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:46
msgid "List of CPackRPM specific variables:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:50
msgid "Enable component packaging for CPackRPM"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:52 ../../../../Modules/CPackRPM.cmake:138
#: ../../../../Modules/CPackRPM.cmake:172
#: ../../../../Modules/CPackRPM.cmake:189
#: ../../../../Modules/CPackRPM.cmake:209
#: ../../../../Modules/CPackRPM.cmake:224
#: ../../../../Modules/CPackRPM.cmake:240
#: ../../../../Modules/CPackRPM.cmake:256
#: ../../../../Modules/CPackRPM.cmake:273
#: ../../../../Modules/CPackRPM.cmake:290
#: ../../../../Modules/CPackRPM.cmake:303
#: ../../../../Modules/CPackRPM.cmake:316
#: ../../../../Modules/CPackRPM.cmake:330
#: ../../../../Modules/CPackRPM.cmake:343
#: ../../../../Modules/CPackRPM.cmake:354
#: ../../../../Modules/CPackRPM.cmake:367
#: ../../../../Modules/CPackRPM.cmake:376
#: ../../../../Modules/CPackRPM.cmake:394
#: ../../../../Modules/CPackRPM.cmake:408
#: ../../../../Modules/CPackRPM.cmake:417
#: ../../../../Modules/CPackRPM.cmake:430
#: ../../../../Modules/CPackRPM.cmake:441
#: ../../../../Modules/CPackRPM.cmake:458
#: ../../../../Modules/CPackRPM.cmake:477
#: ../../../../Modules/CPackRPM.cmake:494
#: ../../../../Modules/CPackRPM.cmake:508
#: ../../../../Modules/CPackRPM.cmake:519
#: ../../../../Modules/CPackRPM.cmake:533
#: ../../../../Modules/CPackRPM.cmake:544
#: ../../../../Modules/CPackRPM.cmake:567
#: ../../../../Modules/CPackRPM.cmake:578
#: ../../../../Modules/CPackRPM.cmake:587
#: ../../../../Modules/CPackRPM.cmake:617
#: ../../../../Modules/CPackRPM.cmake:628
#: ../../../../Modules/CPackRPM.cmake:639
#: ../../../../Modules/CPackRPM.cmake:662
#: ../../../../Modules/CPackRPM.cmake:726
#: ../../../../Modules/CPackRPM.cmake:781
#: ../../../../Modules/CPackRPM.cmake:792
#: ../../../../Modules/CPackRPM.cmake:842
#: ../../../../Modules/CPackRPM.cmake:855
msgid "Mandatory : NO"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:53 ../../../../Modules/CPackRPM.cmake:139
#: ../../../../Modules/CPackRPM.cmake:727
#: ../../../../Modules/CPackRPM.cmake:843
msgid "Default   : OFF"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:55
msgid ""
"If enabled (ON) multiple packages are generated. By default a single package "
"containing files of all components is generated."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:61
msgid "The RPM package summary."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:63 ../../../../Modules/CPackRPM.cmake:71
#: ../../../../Modules/CPackRPM.cmake:79 ../../../../Modules/CPackRPM.cmake:102
#: ../../../../Modules/CPackRPM.cmake:110
#: ../../../../Modules/CPackRPM.cmake:119
#: ../../../../Modules/CPackRPM.cmake:149
#: ../../../../Modules/CPackRPM.cmake:157
#: ../../../../Modules/CPackRPM.cmake:164
#: ../../../../Modules/CPackRPM.cmake:180
#: ../../../../Modules/CPackRPM.cmake:863
msgid "Mandatory : YES"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:64
msgid "Default   : :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:69
msgid "The RPM package name."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:72
msgid "Default   : :variable:`CPACK_PACKAGE_NAME`"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:77
msgid "Package file name."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:81
msgid "Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm`` with spaces"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:80
msgid "<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm with spaces"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:81
msgid "replaced by '-'"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:83
msgid ""
"This may be set to ``RPM-DEFAULT`` to allow rpmbuild tool to generate "
"package file name by itself. Alternatively provided package file name must "
"end with ``.rpm`` suffix."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:89
msgid ""
"By using user provided spec file, rpm macro extensions such as for "
"generating debuginfo packages or by simply using multiple components more "
"than one rpm file may be generated, either from a single spec file or from "
"multiple spec files (each component execution produces it's own spec file). "
"In such cases duplicate file names may occur as a result of this variable "
"setting or spec file content structure. Duplicate files get overwritten and "
"it is up to the packager to set the variables in a manner that will prevent "
"such errors."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:100
msgid "The RPM package version."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:103
msgid "Default   : :variable:`CPACK_PACKAGE_VERSION`"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:108
msgid "The RPM package architecture."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:111
msgid "Default   : Native architecture output by ``uname -m``"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:113
msgid ""
"This may be set to ``noarch`` if you know you are building a noarch package."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:117
msgid "The RPM package release."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:120
msgid "Default   : 1"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:122
msgid ""
"This is the numbering of the RPM package itself, i.e. the version of the "
"packaging and not the version of the content (see :variable:"
"`CPACK_RPM_PACKAGE_VERSION`). One may change the default value if the "
"previous packaging was buggy and/or you want to put here a fancy Linux "
"distro specific numbering."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:130
msgid ""
"This is the string that goes into the RPM ``Release:`` field. Some distros "
"(e.g. Fedora, CentOS) require ``1%{?dist}`` format and not just a number. "
"``%{?dist}`` part can be added by setting :variable:"
"`CPACK_RPM_PACKAGE_RELEASE_DIST`."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:136
msgid "The dist tag that is added  RPM ``Release:`` field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:141
msgid ""
"This is the reported ``%{dist}`` tag from the current distribution or empty "
"``%{dist}`` if RPM macro is not set. If this variable is set then RPM "
"``Release:`` field value is set to ``${CPACK_RPM_PACKAGE_RELEASE}%{?dist}``."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:147
msgid "The RPM package license policy."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:150
#: ../../../../Modules/CPackRPM.cmake:158
msgid "Default   : \"unknown\""
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:155
msgid "The RPM package group."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:162
msgid "The RPM package vendor."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:165
msgid "Default   : CPACK_PACKAGE_VENDOR if set or \"unknown\""
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:170
msgid "The projects URL."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:173
#: ../../../../Modules/CPackRPM.cmake:190
#: ../../../../Modules/CPackRPM.cmake:210
#: ../../../../Modules/CPackRPM.cmake:225
#: ../../../../Modules/CPackRPM.cmake:241
#: ../../../../Modules/CPackRPM.cmake:257
#: ../../../../Modules/CPackRPM.cmake:274
#: ../../../../Modules/CPackRPM.cmake:291
#: ../../../../Modules/CPackRPM.cmake:304
#: ../../../../Modules/CPackRPM.cmake:317
#: ../../../../Modules/CPackRPM.cmake:331
#: ../../../../Modules/CPackRPM.cmake:344
#: ../../../../Modules/CPackRPM.cmake:355
#: ../../../../Modules/CPackRPM.cmake:368
#: ../../../../Modules/CPackRPM.cmake:395
#: ../../../../Modules/CPackRPM.cmake:409
#: ../../../../Modules/CPackRPM.cmake:418
#: ../../../../Modules/CPackRPM.cmake:431
#: ../../../../Modules/CPackRPM.cmake:442
#: ../../../../Modules/CPackRPM.cmake:459
#: ../../../../Modules/CPackRPM.cmake:478
#: ../../../../Modules/CPackRPM.cmake:495
#: ../../../../Modules/CPackRPM.cmake:509
#: ../../../../Modules/CPackRPM.cmake:534
#: ../../../../Modules/CPackRPM.cmake:545
#: ../../../../Modules/CPackRPM.cmake:588
#: ../../../../Modules/CPackRPM.cmake:745
#: ../../../../Modules/CPackRPM.cmake:793
#: ../../../../Modules/CPackRPM.cmake:856
msgid "Default   : -"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:178
msgid "RPM package description."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:181
msgid ""
"Default : :variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component "
"based installers only) if set, :variable:`CPACK_PACKAGE_DESCRIPTION_FILE` if "
"set or \"no package description available\""
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:187
msgid "RPM compression type."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:192
msgid ""
"May be used to override RPM compression type to be used to build the RPM. "
"For example some Linux distribution now default to lzma or xz compression "
"whereas older cannot use such RPM. Using this one can enforce compression "
"type to be used."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:197
msgid "Possible values are:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:199
msgid "lzma"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:200
msgid "xz"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:201
msgid "bzip2"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:202
msgid "gzip"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:207
msgid "RPM spec autoreq field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:212
msgid ""
"May be used to enable (1, yes) or disable (0, no) automatic shared libraries "
"dependency detection. Dependencies are added to requires list."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:217
msgid "By default automatic dependency detection is enabled by rpm generator."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:222
msgid "RPM spec autoprov field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:227
msgid ""
"May be used to enable (1, yes) or disable (0, no) automatic listing of "
"shared libraries that are provided by the package. Shared libraries are "
"added to provides list."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:233
msgid "By default automatic provides detection is enabled by rpm generator."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:238
msgid "RPM spec autoreqprov field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:243
msgid ""
"Variable enables/disables autoreq and autoprov at the same time. See :"
"variable:`CPACK_RPM_PACKAGE_AUTOREQ` and :variable:"
"`CPACK_RPM_PACKAGE_AUTOPROV` for more details."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:249
msgid "By default automatic detection feature is enabled by rpm."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:254
msgid "RPM spec requires field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:259
msgid ""
"May be used to set RPM dependencies (requires). Note that you must enclose "
"the complete requires string between quotes, for example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:262
msgid "set(CPACK_RPM_PACKAGE_REQUIRES \"python >= 2.5.0, cmake >= 2.8\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:264
msgid "The required package list of an RPM file could be printed with::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:266
msgid "rpm -qp --requires file.rpm"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:271
msgid "RPM spec conflicts field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:276
msgid ""
"May be used to set negative RPM dependencies (conflicts). Note that you must "
"enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:279
msgid "set(CPACK_RPM_PACKAGE_CONFLICTS \"libxml2\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:281
msgid "The conflicting package list of an RPM file could be printed with::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:283
msgid "rpm -qp --conflicts file.rpm"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:288
msgid "RPM spec requires(pre) field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:293
msgid ""
"May be used to set RPM preinstall dependencies (requires(pre)). Note that "
"you must enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:296
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_PRE \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:301
msgid "RPM spec requires(post) field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:306
msgid ""
"May be used to set RPM postinstall dependencies (requires(post)). Note that "
"you must enclose the complete requires string between quotes, for example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:309
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_POST \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:314
msgid "RPM spec requires(postun) field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:319
msgid ""
"May be used to set RPM postuninstall dependencies (requires(postun)). Note "
"that you must enclose the complete requires string between quotes, for "
"example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:323
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_POSTUN \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:328
msgid "RPM spec requires(preun) field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:333
msgid ""
"May be used to set RPM preuninstall dependencies (requires(preun)). Note "
"that you must enclose the complete requires string between quotes, for "
"example::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:336
msgid "set(CPACK_RPM_PACKAGE_REQUIRES_PREUN \"shadow-utils, initscripts\")"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:341
msgid "RPM spec suggest field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:346
msgid ""
"May be used to set weak RPM dependencies (suggests). Note that you must "
"enclose the complete requires string between quotes."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:352
msgid "RPM spec provides field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:357
msgid ""
"May be used to set RPM dependencies (provides). The provided package list of "
"an RPM file could be printed with::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:360
msgid "rpm -qp --provides file.rpm"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:365
msgid "RPM spec obsoletes field."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:370
msgid "May be used to set RPM packages that are obsoleted by this one."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:374
msgid "build a relocatable RPM."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:377
msgid "Default   : CPACK_PACKAGE_RELOCATABLE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:379
msgid ""
"If this variable is set to TRUE or ON CPackRPM will try to build a "
"relocatable RPM package. A relocatable RPM may be installed using::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:383
msgid "rpm --prefix or --relocate"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:385
msgid ""
"in order to install it at an alternate place see rpm(8). Note that currently "
"this may fail if :variable:`CPACK_SET_DESTDIR` is set to ``ON``. If :"
"variable:`CPACK_SET_DESTDIR` is set then you will get a warning message but "
"if there is file installed with absolute path you'll get unexpected behavior."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:392
msgid ""
"Deprecated - use :variable:`CPACK_RPM_POST_INSTALL_SCRIPT_FILE` instead."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:396
msgid "Deprecated: YES"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:398
msgid ""
"This way of specifying post-install script is deprecated, use :variable:"
"`CPACK_RPM_POST_INSTALL_SCRIPT_FILE`. May be used to set an RPM post-install "
"command inside the spec file. For example setting it to ``/bin/true`` may be "
"used to prevent rpmbuild to strip binaries."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:406
msgid "RPM extended spec definitions lines."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:411
msgid "May be used to add any ``%define`` lines to the generated spec file."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:415
msgid "Toggle CPackRPM debug output."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:420
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"CPack RPM run. For example you may launch CPack like this::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:423
msgid "cpack -D CPACK_RPM_PACKAGE_DEBUG=1 -G RPM"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:428
msgid "A user provided spec file."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:433
msgid ""
"May be set by the user in order to specify a USER binary spec file to be "
"used by CPackRPM instead of generating the file. The specified file will be "
"processed by configure_file( @ONLY)."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:439
msgid "Spec file template."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:444
msgid ""
"If set CPack will generate a template for USER specified binary spec file "
"and stop with an error. For example launch CPack like this::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:447
msgid "cpack -D CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE=1 -G RPM"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:449
msgid ""
"The user may then use this file in order to hand-craft is own binary spec "
"file which may be used with :variable:`CPACK_RPM_USER_BINARY_SPECFILE`."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:456
msgid "Path to file containing pre (un)install script."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:461
msgid ""
"May be used to embed a pre (un)installation script in the spec file. The "
"referred script file (or both) will be read and directly put after the "
"``%pre`` or ``%preun`` section If :variable:`CPACK_RPM_COMPONENT_INSTALL` is "
"set to ON the (un)install script for each component can be overridden with "
"``CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE`` and "
"``CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE``. One may verify which "
"scriptlet has been included with::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:470
#: ../../../../Modules/CPackRPM.cmake:489
msgid "rpm -qp --scripts  package.rpm"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:475
msgid "Path to file containing post (un)install script."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:480
msgid ""
"May be used to embed a post (un)installation script in the spec file. The "
"referred script file (or both) will be read and directly put after the "
"``%post`` or ``%postun`` section. If :variable:`CPACK_RPM_COMPONENT_INSTALL` "
"is set to ON the (un)install script for each component can be overridden "
"with ``CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE`` and "
"``CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE``. One may verify which "
"scriptlet has been included with::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:497
msgid ""
"May be used to explicitly specify ``%(<directive>)`` file line in the spec "
"file. Like ``%config(noreplace)`` or any other directive that be found in "
"the ``%files`` section. Since CPackRPM is generating the list of files (and "
"directories) the user specified files of the "
"``CPACK_RPM_<COMPONENT>_USER_FILELIST`` list will be removed from the "
"generated list."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:506
msgid "RPM changelog file."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:511
msgid ""
"May be used to embed a changelog in the spec file. The referred file will be "
"read and directly put after the ``%changelog`` section."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:517
msgid "list of path to be excluded."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:520
msgid ""
"Default   : /etc /etc/init.d /usr /usr/share /usr/share/doc /usr/bin /usr/"
"lib /usr/lib64 /usr/include"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:522
msgid ""
"May be used to exclude path (directories or files) from the auto-generated "
"list of paths discovered by CPack RPM. The defaut value contains a "
"reasonable set of values if the variable is not defined by the user. If the "
"variable is defined by the user then CPackRPM will NOT any of the default "
"path. If you want to add some path to the default list then you can use :"
"variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION` variable."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:531
msgid "additional list of path to be excluded."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:536
msgid ""
"May be used to add more exclude path (directories or files) from the initial "
"default list of excluded paths. See :variable:"
"`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST`."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:542
msgid "Packages relocation paths list."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:547
msgid ""
"May be used to specify more than one relocation path per relocatable RPM. "
"Variable contains a list of relocation paths that if relative are prefixed "
"by the value of :variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` or by the "
"value of :variable:`CPACK_PACKAGING_INSTALL_PREFIX` if the component version "
"is not provided. Variable is not component based as its content can be used "
"to set a different path prefix for e.g. binary dir and documentation dir at "
"the same time. Only prefixes that are required by a certain component are "
"added to that component - component must contain at least one file/directory/"
"symbolic link with :variable:`CPACK_RPM_RELOCATION_PATHS` prefix for a "
"certain relocation path to be added. Package will not contain any relocation "
"paths if there are no files/directories/symbolic links on any of the "
"provided prefix locations. Packages that either do not contain any "
"relocation paths or contain files/directories/symbolic links that are "
"outside relocation paths print out an ``AUTHOR_WARNING`` that RPM will be "
"partially relocatable."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:565
msgid "Per component relocation path install prefix."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:568
msgid "Default   : CPACK_PACKAGING_INSTALL_PREFIX"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:570
msgid ""
"May be used to set per component :variable:`CPACK_PACKAGING_INSTALL_PREFIX` "
"for relocatable RPM packages."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:576
msgid "Removal of default install prefix from relocation paths list."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:580
#: ../../../../Modules/CPackRPM.cmake:763
msgid "Default"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:580
msgid "are treated as one of relocation paths"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:582
msgid ""
"May be used to remove CPACK_PACKAGING_INSTALL_PREFIX and "
"CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX from relocatable RPM prefix paths."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:590
msgid ""
"May be used to set additional man dirs that could potentially be compressed "
"by brp-compress RPM macro. Variable content must be a list of regular "
"expressions that point to directories containing man files or to man files "
"directly. Note that in order to compress man pages a path must also be "
"present in brp-compress RPM script and that brp-compress script must be "
"added to RPM configuration by the operating system."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:597
msgid ""
"Regular expressions that are added by default were taken from brp-compress "
"RPM macro:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:600
msgid "/usr/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:601
msgid "/usr/man/.*/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:602
msgid "/usr/info.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:603
msgid "/usr/share/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:604
msgid "/usr/share/man/.*/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:605
msgid "/usr/share/info.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:606
msgid "/usr/kerberos/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:607
msgid "/usr/X11R6/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:608
msgid "/usr/lib/perl5/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:609
msgid "/usr/share/doc/.*/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:610
msgid "/usr/lib/.*/man/man.*"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:615
msgid "default user ownership of RPM content"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:618
#: ../../../../Modules/CPackRPM.cmake:629
msgid "Default   : root"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:620
msgid ""
"Value should be user name and not UID. Note that <compName> must be in upper-"
"case."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:626
msgid "default group ownership of RPM content"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:631
msgid ""
"Value should be group name and not GID. Note that <compName> must be in "
"upper-case."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:637
msgid "default permissions used for packaged files"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:640
#: ../../../../Modules/CPackRPM.cmake:663
msgid "Default   : - (system default)"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:642
msgid "Accepted values are lists with ``PERMISSIONS``. Valid permissions are:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:645
msgid "OWNER_READ"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:646
msgid "OWNER_WRITE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:647
msgid "OWNER_EXECUTE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:648
msgid "GROUP_READ"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:649
msgid "GROUP_WRITE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:650
msgid "GROUP_EXECUTE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:651
msgid "WORLD_READ"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:652
msgid "WORLD_WRITE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:653
msgid "WORLD_EXECUTE"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:655
msgid "Note that <compName> must be in upper-case."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:660
msgid "default permissions used for packaged directories"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:665
msgid ""
"Accepted values are lists with PERMISSIONS. Valid permissions are the same "
"as for :variable:`CPACK_RPM_DEFAULT_FILE_PERMISSIONS`. Note that <compName> "
"must be in upper-case."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:670
msgid "Packaging of Symbolic Links"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:672
msgid "CPackRPM supports packaging of symbolic links::"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:674
msgid ""
"execute_process(COMMAND ${CMAKE_COMMAND}\n"
"  -E create_symlink <relative_path_location> <symlink_name>)\n"
"install(FILES ${CMAKE_CURRENT_BINARY_DIR}/<symlink_name>\n"
"  DESTINATION <symlink_location> COMPONENT libraries)"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:679
msgid ""
"Symbolic links will be optimized (paths will be shortened if possible) "
"before being added to the package or if multiple relocation paths are "
"detected, a post install symlink relocation script will be generated."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:683
msgid ""
"Symbolic links may point to locations that are not packaged by the same "
"package (either a different component or even not packaged at all) but those "
"locations will be treated as if they were a part of the package while "
"determining if symlink should be either created or present in a post install "
"script - depending on relocation paths."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:689
msgid ""
"Symbolic links that point to locations outside packaging path produce a "
"warning and are treated as non relocatable permanent symbolic links."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:692
msgid "Currently there are a few limitations though:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:694
msgid ""
"For component based packaging component interdependency is not checked when "
"processing symbolic links. Symbolic links pointing to content of a different "
"component are treated the same way as if pointing to location that will not "
"be packaged."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:699
msgid ""
"Symbolic links pointing to a location through one or more intermediate "
"symbolic links will not be handled differently - if the intermediate "
"symbolic link(s) is also on a relocatable path, relocating it during package "
"installation may cause initial symbolic link to point to an invalid location."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:706
msgid "Packaging of debug information"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:708
msgid ""
"Debuginfo packages contain debug symbols and sources for debugging packaged "
"binaries."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:713
msgid ""
"Currently multiple debuginfo packages are generated if component based "
"packaging is used - one debuginfo package per component. This duplicates "
"sources if multiple binaries are using them. This is a side effect of how "
"CPackRPM currently generates component packages and will be addressed in "
"later versions of the generator."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:719
msgid "Debuginfo RPM packaging has it's own set of variables:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:724
msgid "Enable generation of debuginfo RPM package(s)."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:731
msgid ""
"Binaries must contain debug symbols before packaging so use either ``Debug`` "
"or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable value."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:736
msgid ""
"Packages generated from packages without binary files, with binary files but "
"without execute permissions or without debug symbols will be empty."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:741
msgid ""
"Provides locations of root directories of source files from which binaries "
"were built."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:744
#: ../../../../Modules/CPackRPM.cmake:762
msgid "Mandatory : YES if :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is set"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:749
msgid ""
"For CMake project :variable:`CPACK_BUILD_SOURCE_DIRS` is set by default to "
"point to :variable:`CMAKE_SOURCE_DIR` and :variable:`CMAKE_BINARY_DIR` paths."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:754
msgid ""
"Sources with path prefixes that do not fall under any location provided "
"with :variable:`CPACK_BUILD_SOURCE_DIRS` will not be present in debuginfo "
"package."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:760
msgid ""
"Prefix of location where sources will be placed during package installation."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:764
msgid ""
"for component packaging \"/usr/src/debug/<CPACK_PACKAGE_FILE_NAME>-"
"<component>\""
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:768
msgid ""
"Each source path prefix is additionaly suffixed by ``src_<index>`` where "
"index is index of the path used from :variable:`CPACK_BUILD_SOURCE_DIRS` "
"variable. This produces ``<CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX>/src_<index>`` "
"replacement path. Limitation is that replaced path part must be shorter or "
"of equal length than the length of its replacement. If that is not the case "
"either :variable:`CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX` variable has to be set "
"to a shorter path or source directories must be placed on a longer path."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:779
msgid ""
"Directories containing sources that should be excluded from debuginfo "
"packages."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:782
msgid "Default   : \"/usr /usr/src /usr/src/debug\""
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:784
msgid ""
"Listed paths are owned by other RPM packages and should therefore not be "
"deleted on debuginfo package uninstallation."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:789
msgid ""
"Paths that should be appended to :variable:"
"`CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS` for exclusion."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:796
msgid "Packaging of sources (SRPM)"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:798
msgid ""
"SRPM packaging is enabled by setting :variable:`CPACK_RPM_PACKAGE_SOURCES` "
"variable while usually using :variable:`CPACK_INSTALLED_DIRECTORIES` "
"variable to provide directory containing CMakeLists.txt and source files."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:802
msgid "For CMake projects SRPM package would be product by executing:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:804
msgid "``cpack -G RPM --config ./CPackSourceConfig.cmake``"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:808
msgid ""
"Produced SRPM package is expected to be built with :manual:`cmake(1)` "
"executable and packaged with :manual:`cpack(1)` executable so CMakeLists.txt "
"has to be located in root source directory and must be able to generate "
"binary rpm packages by executing ``cpack -G`` command. The two executables "
"as well as rpmbuild must also be present when generating binary rpm packages "
"from the produced SRPM package."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:815
msgid ""
"Once the SRPM package is generated it can be used to generate binary "
"packages by creating a directory structure for rpm generation and executing "
"rpmbuild tool:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:819
msgid ""
"``mkdir -p build_dir/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}`` ``rpmbuild "
"--define \"_topdir <path_to_build_dir>\" --rebuild <SRPM_file_name>``"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:822
msgid ""
"Generated packages will be located in build_dir/RPMS directory or its sub "
"directories."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:827
msgid ""
"SRPM package internally uses CPack/RPM generator to generate binary packages "
"so CMakeScripts.txt can decide during the SRPM to binary rpm generation step "
"what content the package(s) should have as well as how they should be "
"packaged (monolithic or components). CMake can decide this for e.g. by "
"reading environment variables set by the package manager before starting the "
"process of generating binary rpm packages. This way a single SRPM package "
"can be used to produce different binary rpm packages on different platforms "
"depending on the platform's packaging rules."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:836
msgid "Source RPM packaging has it's own set of variables:"
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:840
msgid "Should the content be packaged as a source rpm (default is binary rpm)."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:847
msgid ""
"For cmake projects :variable:`CPACK_RPM_PACKAGE_SOURCES` variable is set to "
"``OFF`` in CPackConfig.cmake and ``ON`` in CPackSourceConfig.cmake generated "
"files."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:853
msgid ""
"Additional command-line parameters provided to :manual:`cmake(1)` executable."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:860
msgid ""
"Packaging install prefix that would be provided in :variable:"
"`CPACK_PACKAGING_INSTALL_PREFIX` variable for producing binary RPM packages."
msgstr ""

#: ../../../../Modules/CPackRPM.cmake:864
msgid "Default   : \"/\""
msgstr ""
