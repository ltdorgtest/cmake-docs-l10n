# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/add_subdirectory.rst:2
msgid "add_subdirectory"
msgstr ""

#: ../../../command/add_subdirectory.rst:4
msgid "Add a subdirectory to the build."
msgstr ""

#: ../../../command/add_subdirectory.rst:6
msgid "add_subdirectory(source_dir [binary_dir] [EXCLUDE_FROM_ALL])"
msgstr ""

#: ../../../command/add_subdirectory.rst:10
msgid ""
"Adds a subdirectory to the build.  The source_dir specifies the directory in "
"which the source CMakeLists.txt and code files are located.  If it is a "
"relative path it will be evaluated with respect to the current directory "
"(the typical usage), but it may also be an absolute path.  The "
"``binary_dir`` specifies the directory in which to place the output files.  "
"If it is a relative path it will be evaluated with respect to the current "
"output directory, but it may also be an absolute path.  If ``binary_dir`` is "
"not specified, the value of ``source_dir``, before expanding any relative "
"path, will be used (the typical usage).  The CMakeLists.txt file in the "
"specified source directory will be processed immediately by CMake before "
"processing in the current input file continues beyond this command."
msgstr ""

#: ../../../command/add_subdirectory.rst:23
msgid ""
"If the ``EXCLUDE_FROM_ALL`` argument is provided then targets in the "
"subdirectory will not be included in the ``ALL`` target of the parent "
"directory by default, and will be excluded from IDE project files. Users "
"must explicitly build targets in the subdirectory.  This is meant for use "
"when the subdirectory contains a separate part of the project that is useful "
"but not necessary, such as a set of examples. Typically the subdirectory "
"should contain its own :command:`project` command invocation so that a full "
"build system will be generated in the subdirectory (such as a VS IDE "
"solution file).  Note that inter-target dependencies supersede this "
"exclusion.  If a target built by the parent project depends on a target in "
"the subdirectory, the dependee target will be included in the parent project "
"build system to satisfy the dependency."
msgstr ""
