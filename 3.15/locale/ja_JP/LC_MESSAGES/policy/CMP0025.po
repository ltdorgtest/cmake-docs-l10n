# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0025.rst:2
msgid "CMP0025"
msgstr ""

#: ../../../policy/CMP0025.rst:4
msgid "Compiler id for Apple Clang is now ``AppleClang``."
msgstr ""

#: ../../../policy/CMP0025.rst:6
msgid ""
"CMake 3.0 and above recognize that Apple Clang is a different compiler than "
"upstream Clang and that they have different version numbers. CMake now "
"prefers to present this to projects by setting the :variable:"
"`CMAKE_<LANG>_COMPILER_ID` variable to ``AppleClang`` instead of ``Clang``.  "
"However, existing projects may assume the compiler id for Apple Clang is "
"just ``Clang`` as it was in CMake versions prior to 3.0. Therefore this "
"policy determines for Apple Clang which compiler id to report in the :"
"variable:`CMAKE_<LANG>_COMPILER_ID` variable after language ``<LANG>`` is "
"enabled by the :command:`project` or :command:`enable_language` command.  "
"The policy must be set prior to the invocation of either command."
msgstr ""

#: ../../../policy/CMP0025.rst:18
msgid ""
"The ``OLD`` behavior for this policy is to use compiler id ``Clang``.  The "
"``NEW`` behavior for this policy is to use compiler id ``AppleClang``."
msgstr ""

#: ../../../policy/CMP0025.rst:21
msgid ""
"This policy was introduced in CMake version 3.0.  Use the :command:"
"`cmake_policy` command to set this policy to ``OLD`` or ``NEW`` explicitly.  "
"Unlike most policies, CMake version |release| does *not* warn by default "
"when this policy is not set and simply uses ``OLD`` behavior. See "
"documentation of the :variable:`CMAKE_POLICY_WARNING_CMP0025 "
"<CMAKE_POLICY_WARNING_CMP<NNNN>>` variable to control the warning."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
