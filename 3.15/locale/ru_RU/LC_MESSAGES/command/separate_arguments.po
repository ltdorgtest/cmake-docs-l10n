# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/separate_arguments.rst:2
msgid "separate_arguments"
msgstr ""

#: ../../../command/separate_arguments.rst:4
msgid "Parse command-line arguments into a semicolon-separated list."
msgstr ""

#: ../../../command/separate_arguments.rst:6
msgid "separate_arguments(<variable> <mode> <args>)"
msgstr ""

#: ../../../command/separate_arguments.rst:10
msgid ""
"Parses a space-separated string ``<args>`` into a list of items, and stores "
"this list in semicolon-separated standard form in ``<variable>``."
msgstr ""

#: ../../../command/separate_arguments.rst:13
msgid ""
"This function is intended for parsing command-line arguments. The entire "
"command line must be passed as one string in the argument ``<args>``."
msgstr ""

#: ../../../command/separate_arguments.rst:17
msgid ""
"The exact parsing rules depend on the operating system. They are specified "
"by the ``<mode>`` argument which must be one of the following keywords:"
msgstr ""

#: ../../../command/separate_arguments.rst:25
msgid "``UNIX_COMMAND``"
msgstr ""

#: ../../../command/separate_arguments.rst:22
msgid ""
"Arguments are separated by by unquoted whitespace. Both single-quote and "
"double-quote pairs are respected. A backslash escapes the next literal "
"character (``\\\"`` is ``\"``); there are no special escapes (``\\n`` is "
"just ``n``)."
msgstr ""

#: ../../../command/separate_arguments.rst:32
msgid "``WINDOWS_COMMAND``"
msgstr ""

#: ../../../command/separate_arguments.rst:28
msgid ""
"A Windows command-line is parsed using the same syntax the runtime library "
"uses to construct argv at startup.  It separates arguments by whitespace "
"that is not double-quoted. Backslashes are literal unless they precede "
"double-quotes.  See the MSDN article `Parsing C Command-Line Arguments`_ for "
"details."
msgstr ""

#: ../../../command/separate_arguments.rst:36
msgid "``NATIVE_COMMAND``"
msgstr ""

#: ../../../command/separate_arguments.rst:35
msgid ""
"Proceeds as in ``WINDOWS_COMMAND`` mode if the host system is Windows. "
"Otherwise proceeds as in ``UNIX_COMMAND`` mode."
msgstr ""

#: ../../../command/separate_arguments.rst:40
msgid "separate_arguments(<var>)"
msgstr ""

#: ../../../command/separate_arguments.rst:44
msgid ""
"Convert the value of ``<var>`` to a semi-colon separated list.  All spaces "
"are replaced with ';'.  This helps with generating command lines."
msgstr ""
