# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../cpack_gen/deb.rst:2
msgid "CPack DEB Generator"
msgstr ""

#: ../../../cpack_gen/deb.rst:4
msgid "The built in (binary) CPack DEB generator (Unix only)"
msgstr ""

#: ../../../cpack_gen/deb.rst:7
msgid "Variables specific to CPack Debian (DEB) generator"
msgstr ""

#: ../../../cpack_gen/deb.rst:9
msgid ""
"The CPack DEB generator may be used to create DEB package using :module:"
"`CPack`. The CPack DEB generator is a :module:`CPack` generator thus it uses "
"the :variable:`!CPACK_XXX` variables used by :module:`CPack`."
msgstr ""

#: ../../../cpack_gen/deb.rst:13
msgid ""
"The CPack DEB generator should work on any Linux host but it will produce "
"better deb package when Debian specific tools ``dpkg-xxx`` are usable on the "
"build system."
msgstr ""

#: ../../../cpack_gen/deb.rst:17
msgid ""
"The CPack DEB generator has specific features which are controlled by the "
"specifics :variable:`!CPACK_DEBIAN_XXX` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:20
msgid ""
":variable:`!CPACK_DEBIAN_<COMPONENT>_XXXX` variables may be used in order to "
"have **component** specific values.  Note however that ``<COMPONENT>`` "
"refers to the **grouping name** written in upper case. It may be either a "
"component name or a component GROUP name."
msgstr ""

#: ../../../cpack_gen/deb.rst:25
msgid ""
"Here are some CPack DEB generator wiki resources that are here for historic "
"reasons and are no longer maintained but may still prove useful:"
msgstr ""

#: ../../../cpack_gen/deb.rst:28
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration"
msgstr ""

#: ../../../cpack_gen/deb.rst:29
msgid ""
"https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/"
"PackageGenerators#deb-unix-only"
msgstr ""

#: ../../../cpack_gen/deb.rst:31
msgid "List of CPack DEB generator specific variables:"
msgstr ""

#: ../../../cpack_gen/deb.rst:35
msgid "Enable component packaging for CPackDEB"
msgstr ""

#: ../../../cpack_gen/deb.rst:0
msgid "Mandatory"
msgstr ""

#: ../../../cpack_gen/deb.rst:37 ../../../cpack_gen/deb.rst:105
#: ../../../cpack_gen/deb.rst:137 ../../../cpack_gen/deb.rst:163
#: ../../../cpack_gen/deb.rst:209 ../../../cpack_gen/deb.rst:330
#: ../../../cpack_gen/deb.rst:347 ../../../cpack_gen/deb.rst:381
#: ../../../cpack_gen/deb.rst:395 ../../../cpack_gen/deb.rst:407
#: ../../../cpack_gen/deb.rst:427 ../../../cpack_gen/deb.rst:450
#: ../../../cpack_gen/deb.rst:470 ../../../cpack_gen/deb.rst:497
#: ../../../cpack_gen/deb.rst:516 ../../../cpack_gen/deb.rst:535
#: ../../../cpack_gen/deb.rst:553 ../../../cpack_gen/deb.rst:569
#: ../../../cpack_gen/deb.rst:587 ../../../cpack_gen/deb.rst:602
#: ../../../cpack_gen/deb.rst:623 ../../../cpack_gen/deb.rst:654
#: ../../../cpack_gen/deb.rst:676 ../../../cpack_gen/deb.rst:707
msgid "No"
msgstr ""

#: ../../../cpack_gen/deb.rst:0
msgid "Default"
msgstr ""

#: ../../../cpack_gen/deb.rst:38 ../../../cpack_gen/deb.rst:351
#: ../../../cpack_gen/deb.rst:570 ../../../cpack_gen/deb.rst:708
msgid "``OFF``"
msgstr ""

#: ../../../cpack_gen/deb.rst:40
msgid ""
"If enabled (``ON``) multiple packages are generated. By default a single "
"package containing files of all components is generated."
msgstr ""

#: ../../../cpack_gen/deb.rst:46
msgid ""
"Set Package control field (variable is automatically transformed to lower "
"case)."
msgstr ""

#: ../../../cpack_gen/deb.rst:49 ../../../cpack_gen/deb.rst:69
#: ../../../cpack_gen/deb.rst:115 ../../../cpack_gen/deb.rst:151
#: ../../../cpack_gen/deb.rst:216 ../../../cpack_gen/deb.rst:224
#: ../../../cpack_gen/deb.rst:253 ../../../cpack_gen/deb.rst:269
#: ../../../cpack_gen/deb.rst:287 ../../../cpack_gen/deb.rst:316
msgid "Yes"
msgstr ""

#: ../../../cpack_gen/deb.rst:52
msgid ":variable:`CPACK_PACKAGE_NAME` for non-component based installations"
msgstr ""

#: ../../../cpack_gen/deb.rst:54
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_NAME` suffixed with ``-<COMPONENT>`` for "
"component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:57
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_NAME` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:60 ../../../cpack_gen/deb.rst:661
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-source"
msgstr ""

#: ../../../cpack_gen/deb.rst:67
msgid "Package file name."
msgstr ""

#: ../../../cpack_gen/deb.rst:70
msgid "``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``"
msgstr ""

#: ../../../cpack_gen/deb.rst:72
msgid "This may be set to:"
msgstr ""

#: ../../../cpack_gen/deb.rst:74
msgid "``DEB-DEFAULT``"
msgstr ""

#: ../../../cpack_gen/deb.rst:75
msgid ""
"Tell CPack to automatically generate the package file name in deb format::"
msgstr ""

#: ../../../cpack_gen/deb.rst:77
msgid ""
"<PackageName>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb"
msgstr ""

#: ../../../cpack_gen/deb.rst:79
msgid ""
"This setting recommended as the preferred behavior, but for backward "
"compatibility with the CPack DEB generator in CMake prior to version 3.6, "
"this is not the default.   Without this, duplicate names may occur. "
"Duplicate files get overwritten and it is up to the packager to set the "
"variables in a manner that will prevent such errors."
msgstr ""

#: ../../../cpack_gen/deb.rst:85
msgid "``<file-name>[.deb]``"
msgstr ""

#: ../../../cpack_gen/deb.rst:86
msgid "Use the given file name."
msgstr ""

#: ../../../cpack_gen/deb.rst:90
msgid ""
"The ``.deb`` suffix will be automatically added if the file name does not "
"end in ``.deb`` or ``.ipk``.  Previously the suffix was required."
msgstr ""

#: ../../../cpack_gen/deb.rst:93
msgid "``<file-name>.ipk``"
msgstr ""

#: ../../../cpack_gen/deb.rst:96
msgid ""
"Use the given file name. The ``.ipk`` suffix is used by the OPKG packaging "
"system."
msgstr ""

#: ../../../cpack_gen/deb.rst:103
msgid "The Debian package epoch"
msgstr ""

#: ../../../cpack_gen/deb.rst:106 ../../../cpack_gen/deb.rst:138
#: ../../../cpack_gen/deb.rst:210 ../../../cpack_gen/deb.rst:382
#: ../../../cpack_gen/deb.rst:396 ../../../cpack_gen/deb.rst:603
msgid "None"
msgstr ""

#: ../../../cpack_gen/deb.rst:108
msgid ""
"Optional number that should be incremented when changing versioning schemas "
"or fixing mistakes in the version numbers of older packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:113
msgid "The Debian package version"
msgstr ""

#: ../../../cpack_gen/deb.rst:116
msgid ":variable:`CPACK_PACKAGE_VERSION`"
msgstr ""

#: ../../../cpack_gen/deb.rst:118
msgid ""
"This variable may contain only alphanumerics (A-Za-z0-9) and the "
"characters . + - ~ (full stop, plus, hyphen, tilde) and should start with a "
"digit. If :variable:`CPACK_DEBIAN_PACKAGE_RELEASE` is not set then hyphens "
"are not allowed."
msgstr ""

#: ../../../cpack_gen/deb.rst:125
msgid ""
"For backward compatibility with CMake 3.9 and lower a failed test of this "
"variable's content is not a hard error when both :variable:"
"`CPACK_DEBIAN_PACKAGE_RELEASE` and :variable:`CPACK_DEBIAN_PACKAGE_EPOCH` "
"variables are not set. An author warning is reported instead."
msgstr ""

#: ../../../cpack_gen/deb.rst:135
msgid "The Debian package release - Debian revision number."
msgstr ""

#: ../../../cpack_gen/deb.rst:140
msgid ""
"This is the numbering of the DEB package itself, i.e. the version of the "
"packaging and not the version of the content (see :variable:"
"`CPACK_DEBIAN_PACKAGE_VERSION`). One may change the default value if the "
"previous packaging was buggy and/or you want to put here a fancy Linux "
"distro specific numbering."
msgstr ""

#: ../../../cpack_gen/deb.rst:149
msgid "The Debian package architecture"
msgstr ""

#: ../../../cpack_gen/deb.rst:152
msgid ""
"Output of ``dpkg --print-architecture`` (or ``i386`` if ``dpkg`` is not "
"found)"
msgstr ""

#: ../../../cpack_gen/deb.rst:155
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ARCHITECTURE` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:161
msgid "Sets the Debian dependencies of this package."
msgstr ""

#: ../../../cpack_gen/deb.rst:166 ../../../cpack_gen/deb.rst:410
#: ../../../cpack_gen/deb.rst:430 ../../../cpack_gen/deb.rst:453
#: ../../../cpack_gen/deb.rst:473 ../../../cpack_gen/deb.rst:500
#: ../../../cpack_gen/deb.rst:519 ../../../cpack_gen/deb.rst:538
#: ../../../cpack_gen/deb.rst:556 ../../../cpack_gen/deb.rst:657
#: ../../../cpack_gen/deb.rst:679
msgid "An empty string for non-component based installations"
msgstr ""

#: ../../../cpack_gen/deb.rst:167
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:171
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:176
msgid ""
"If :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or more specifically :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` is set for this component, the "
"discovered dependencies will be appended to :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` instead of :variable:"
"`CPACK_DEBIAN_PACKAGE_DEPENDS`. If :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` is an empty string, only the "
"automatically discovered dependencies will be set for this component."
msgstr ""

#: ../../../cpack_gen/deb.rst:187
msgid ""
"The variable is always expanded as a list. Before it was expanded only if "
"used in cooperation with :variable:`CPACK_DEB_COMPONENT_INSTALL`, :variable:"
"`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or :variable:"
"`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS`. This meant that if a component "
"had no shared libraries discovered (e.g. a package composed only of scripts) "
"you had to join the list by yourself to obtain a valid Depends field."
msgstr ""

#: ../../../cpack_gen/deb.rst:195
msgid "Example:"
msgstr ""

#: ../../../cpack_gen/deb.rst:197
msgid ""
"set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= 2.3.1-6), libc6 (< 2.4)\")\n"
"list(APPEND CPACK_DEBIAN_PACKAGE_DEPENDS cmake)"
msgstr ""

#: ../../../cpack_gen/deb.rst:206
msgid ""
"Sets inter-component dependencies if listed with :variable:"
"`CPACK_COMPONENT_<compName>_DEPENDS` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:214
msgid "The Debian package maintainer"
msgstr ""

#: ../../../cpack_gen/deb.rst:217
msgid ":variable:`!CPACK_PACKAGE_CONTACT`"
msgstr ""

#: ../../../cpack_gen/deb.rst:222
msgid "The Debian package description"
msgstr ""

#: ../../../cpack_gen/deb.rst:227
msgid ""
":variable:`CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` (component based installers "
"only) if set, or :variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` if set, or"
msgstr ""

#: ../../../cpack_gen/deb.rst:229
msgid ""
":variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component based "
"installers only) if set, or :variable:`CPACK_PACKAGE_DESCRIPTION` if set, or"
msgstr ""

#: ../../../cpack_gen/deb.rst:231
msgid ""
"content of the file specified in :variable:`CPACK_PACKAGE_DESCRIPTION_FILE` "
"if set"
msgstr ""

#: ../../../cpack_gen/deb.rst:233
msgid ""
"If after that description is not set, :variable:"
"`CPACK_PACKAGE_DESCRIPTION_SUMMARY` going to be used if set. Otherwise, :"
"variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY` will be added as the first line "
"of description as defined in `Debian Policy Manual`_."
msgstr ""

#: ../../../cpack_gen/deb.rst:237
msgid ""
"Per-component :variable:`!CPACK_COMPONENT_<compName>_DESCRIPTION` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:240
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_DESCRIPTION` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:243
msgid "The :variable:`!CPACK_PACKAGE_DESCRIPTION_FILE` variable."
msgstr ""

#: ../../../cpack_gen/deb.rst:251
msgid "Set Section control field e.g. admin, devel, doc, ..."
msgstr ""

#: ../../../cpack_gen/deb.rst:254
msgid "``devel``"
msgstr ""

#: ../../../cpack_gen/deb.rst:256
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SECTION` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:259
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections"
msgstr ""

#: ../../../cpack_gen/deb.rst:267
msgid "The archive format used for creating the Debian package."
msgstr ""

#: ../../../cpack_gen/deb.rst:270
msgid "``gnutar``"
msgstr ""

#: ../../../cpack_gen/deb.rst:272
msgid "Possible value is: ``gnutar``"
msgstr ""

#: ../../../cpack_gen/deb.rst:276
msgid ""
"This variable previously defaulted to the ``paxr`` value, but ``dpkg`` has "
"never supported that tar format. For backwards compatibility the ``paxr`` "
"value will be mapped to ``gnutar`` and a deprecation message will be emitted."
msgstr ""

#: ../../../cpack_gen/deb.rst:285
msgid "The compression used for creating the Debian package."
msgstr ""

#: ../../../cpack_gen/deb.rst:288 ../../../cpack_gen/deb.rst:301
msgid "``gzip``"
msgstr ""

#: ../../../cpack_gen/deb.rst:290
msgid "Possible values are:"
msgstr ""

#: ../../../cpack_gen/deb.rst:292
msgid "``lzma``"
msgstr ""

#: ../../../cpack_gen/deb.rst:293
msgid "Lempel–Ziv–Markov chain algorithm"
msgstr ""

#: ../../../cpack_gen/deb.rst:295
msgid "``xz``"
msgstr ""

#: ../../../cpack_gen/deb.rst:296
msgid "XZ Utils compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:298
msgid "``bzip2``"
msgstr ""

#: ../../../cpack_gen/deb.rst:299
msgid "bzip2 Burrows–Wheeler algorithm"
msgstr ""

#: ../../../cpack_gen/deb.rst:302
msgid "GNU Gzip compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:304
msgid "``zstd``"
msgstr ""

#: ../../../cpack_gen/deb.rst:307
msgid "Zstandard compression"
msgstr ""

#: ../../../cpack_gen/deb.rst:313
msgid ""
"Set Priority control field e.g. required, important, standard, optional, "
"extra"
msgstr ""

#: ../../../cpack_gen/deb.rst:317
msgid "``optional``"
msgstr ""

#: ../../../cpack_gen/deb.rst:319
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PRIORITY` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:322
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities"
msgstr ""

#: ../../../cpack_gen/deb.rst:326
msgid ""
"The URL of the web site for this package, preferably (when applicable) the "
"site from which the original source can be obtained and any additional "
"upstream documentation or information may be found."
msgstr ""

#: ../../../cpack_gen/deb.rst:331
msgid ":variable:`CMAKE_PROJECT_HOMEPAGE_URL`"
msgstr ""

#: ../../../cpack_gen/deb.rst:333
msgid "The :variable:`!CMAKE_PROJECT_HOMEPAGE_URL` variable."
msgstr ""

#: ../../../cpack_gen/deb.rst:338
msgid ""
"The content of this field is a simple URL without any surrounding characters "
"such as <>."
msgstr ""

#: ../../../cpack_gen/deb.rst:344
msgid ""
"May be set to ON in order to use ``dpkg-shlibdeps`` to generate better "
"package dependency list."
msgstr ""

#: ../../../cpack_gen/deb.rst:350
msgid ":variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` if set or"
msgstr ""

#: ../../../cpack_gen/deb.rst:355
msgid ""
"You may need set :variable:`CMAKE_INSTALL_RPATH` to an appropriate value if "
"you use this feature, because if you don't ``dpkg-shlibdeps`` may fail to "
"find your own shared libs. See https://gitlab.kitware.com/cmake/community/-/"
"wikis/doc/cmake/RPATH-handling"
msgstr ""

#: ../../../cpack_gen/deb.rst:362
msgid ""
"You can also set :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS_PRIVATE_DIRS` to "
"an appropriate value if you use this feature, in order to please ``dpkg-"
"shlibdeps``. However, you should only do this for private shared libraries "
"that could not get resolved otherwise."
msgstr ""

#: ../../../cpack_gen/deb.rst:367
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:370
msgid "Correct handling of ``$ORIGIN`` in :variable:`CMAKE_INSTALL_RPATH`."
msgstr ""

#: ../../../cpack_gen/deb.rst:377
msgid ""
"May be set to a list of directories that will be given to ``dpkg-shlibdeps`` "
"via its ``-l`` option. These will be searched by ``dpkg-shlibdeps`` in order "
"to find private shared library dependencies."
msgstr ""

#: ../../../cpack_gen/deb.rst:386
msgid ""
"You should prefer to set :variable:`CMAKE_INSTALL_RPATH` to an appropriate "
"value if you use ``dpkg-shlibdeps``. The current option is really only "
"needed for private shared library dependencies."
msgstr ""

#: ../../../cpack_gen/deb.rst:392
msgid ""
"May be set when invoking cpack in order to trace debug information during "
"the CPack DEB generator run."
msgstr ""

#: ../../../cpack_gen/deb.rst:401
msgid ""
"Sets the `Pre-Depends` field of the Debian package. Like :variable:`Depends "
"<CPACK_DEBIAN_PACKAGE_DEPENDS>`, except that it also forces ``dpkg`` to "
"complete installation of the packages named before even starting the "
"installation of the package which declares the pre-dependency."
msgstr ""

#: ../../../cpack_gen/deb.rst:411
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` for component-based "
"installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:414
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PREDEPENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:417 ../../../cpack_gen/deb.rst:437
#: ../../../cpack_gen/deb.rst:526 ../../../cpack_gen/deb.rst:545
#: ../../../cpack_gen/deb.rst:563
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"binarydeps"
msgstr ""

#: ../../../cpack_gen/deb.rst:422
msgid ""
"Sets the ``Enhances`` field of the Debian package. Similar to :variable:"
"`Suggests <CPACK_DEBIAN_PACKAGE_SUGGESTS>` but works in the opposite "
"direction: declares that a package can enhance the functionality of another "
"package."
msgstr ""

#: ../../../cpack_gen/deb.rst:431
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:434
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_ENHANCES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:442
msgid ""
"Sets the ``Breaks`` field of the Debian package. When a binary package (P) "
"declares that it breaks other packages (B), ``dpkg`` will not allow the "
"package (P) which declares ``Breaks`` be **unpacked** unless the packages "
"that will be broken (B) are deconfigured first. As long as the package (P) "
"is configured, the previously deconfigured packages (B) cannot be "
"reconfigured again."
msgstr ""

#: ../../../cpack_gen/deb.rst:454
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_BREAKS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:457
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_BREAKS` variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:460
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-breaks"
msgstr ""

#: ../../../cpack_gen/deb.rst:465
msgid ""
"Sets the `Conflicts` field of the Debian package. When one binary package "
"declares a conflict with another using a `Conflicts` field, ``dpkg`` will "
"not allow them to be unpacked on the system at the same time."
msgstr ""

#: ../../../cpack_gen/deb.rst:474
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:477
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONFLICTS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:480
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-"
"conflicts"
msgstr ""

#: ../../../cpack_gen/deb.rst:484
msgid ""
"This is a stronger restriction than :variable:`Breaks "
"<CPACK_DEBIAN_PACKAGE_BREAKS>`, which prevents the broken package from being "
"configured while the breaking package is in the \"Unpacked\" state but "
"allows both packages to be unpacked at the same time."
msgstr ""

#: ../../../cpack_gen/deb.rst:493
msgid ""
"Sets the `Provides` field of the Debian package. A virtual package is one "
"which appears in the `Provides` control field of another package."
msgstr ""

#: ../../../cpack_gen/deb.rst:501
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:504
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_PROVIDES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:507
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual"
msgstr ""

#: ../../../cpack_gen/deb.rst:512
msgid ""
"Sets the `Replaces` field of the Debian package. Packages can declare in "
"their control file that they should overwrite files in certain other "
"packages, or completely replace other packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:520
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_REPLACES` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:523
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_REPLACES` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:531
msgid ""
"Sets the ``Recommends`` field of the Debian package. Allows packages to "
"declare a strong, but not absolute, dependency on other packages."
msgstr ""

#: ../../../cpack_gen/deb.rst:539
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` for component-based "
"installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:542
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_RECOMMENDS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:550
msgid ""
"Sets the `Suggests` field of the Debian package. Allows packages to declare "
"a suggested package install grouping."
msgstr ""

#: ../../../cpack_gen/deb.rst:557
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:560
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_SUGGESTS` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:572
msgid ""
"Allows to generate shlibs control file automatically. Compatibility is "
"defined by :variable:`CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY` variable "
"value."
msgstr ""

#: ../../../cpack_gen/deb.rst:577
msgid ""
"Libraries are only considered if they have both library name and version "
"set. This can be done by setting SOVERSION property with :command:"
"`set_target_properties` command."
msgstr ""

#: ../../../cpack_gen/deb.rst:585
msgid "Compatibility policy for auto-generated shlibs control file."
msgstr ""

#: ../../../cpack_gen/deb.rst:588
msgid "``=``"
msgstr ""

#: ../../../cpack_gen/deb.rst:590
msgid ""
"Defines compatibility policy for auto-generated shlibs control file. "
"Possible values: ``=``, ``>=``"
msgstr ""

#: ../../../cpack_gen/deb.rst:593
msgid ""
"See https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-sharedlibs-"
"shlibdeps"
msgstr ""

#: ../../../cpack_gen/deb.rst:598
msgid ""
"This variable allow advanced user to add custom script to the control.tar."
"gz. Typical usage is for conffiles, postinst, postrm, prerm."
msgstr ""

#: ../../../cpack_gen/deb.rst:605 ../../../cpack_gen/deb.rst:626
msgid "Usage:"
msgstr ""

#: ../../../cpack_gen/deb.rst:607
msgid ""
"set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n"
"    \"${CMAKE_CURRENT_SOURCE_DIR}/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")"
msgstr ""

#: ../../../cpack_gen/deb.rst:612
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_EXTRA` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:620
msgid ""
"This variable indicates if the Debian policy on control files should be "
"strictly followed."
msgstr ""

#: ../../../cpack_gen/deb.rst:624
msgid "``FALSE``"
msgstr ""

#: ../../../cpack_gen/deb.rst:628
msgid "set(CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION TRUE)"
msgstr ""

#: ../../../cpack_gen/deb.rst:632
msgid ""
"This overrides the permissions on the original files, following the rules "
"set by Debian policy https://www.debian.org/doc/debian-policy/ch-files."
"html#s-permissions-owners"
msgstr ""

#: ../../../cpack_gen/deb.rst:638
msgid ""
"The original permissions of the files will be used in the final package "
"unless this variable is set to ``TRUE``. In particular, the scripts should "
"have the proper executable flag prior to the generation of the package."
msgstr ""

#: ../../../cpack_gen/deb.rst:648
msgid ""
"Sets the ``Source`` field of the binary Debian package. When the binary "
"package name is not the same as the source package name (in particular when "
"several components/binaries are generated from one source) the source from "
"which the binary has been generated should be indicated with the field "
"``Source``."
msgstr ""

#: ../../../cpack_gen/deb.rst:658
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_SOURCE` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:665
msgid ""
"This value is not interpreted. It is possible to pass an optional revision "
"number of the referenced source package as well."
msgstr ""

#: ../../../cpack_gen/deb.rst:671
msgid ""
"Sets the `Multi-Arch` field of the Debian package. Packages can declare in "
"their control file how they should handle situations, where packages for "
"different architectures are being installed on the same machine."
msgstr ""

#: ../../../cpack_gen/deb.rst:680
msgid ""
":variable:`CPACK_DEBIAN_PACKAGE_MULTIARCH` for component-based installations."
msgstr ""

#: ../../../cpack_gen/deb.rst:683
msgid ""
"Per-component :variable:`!CPACK_DEBIAN_<COMPONENT>_PACKAGE_MULTIARCH` "
"variables."
msgstr ""

#: ../../../cpack_gen/deb.rst:686
msgid "See https://wiki.debian.org/MultiArch/Hints"
msgstr ""

#: ../../../cpack_gen/deb.rst:690
msgid ""
"This value is validated. It must be one of the following values: ``same``, "
"``foreign``, ``allowed``."
msgstr ""

#: ../../../cpack_gen/deb.rst:694
msgid "Packaging of debug information"
msgstr ""

#: ../../../cpack_gen/deb.rst:698
msgid "Dbgsym packages contain debug symbols for debugging packaged binaries."
msgstr ""

#: ../../../cpack_gen/deb.rst:700
msgid "Dbgsym packaging has its own set of variables:"
msgstr ""

#: ../../../cpack_gen/deb.rst:705
msgid "Enable generation of dbgsym .ddeb package(s)."
msgstr ""

#: ../../../cpack_gen/deb.rst:712
msgid ""
"Setting this also strips the ELF files in the generated non-dbgsym package, "
"which results in debuginfo only being available in the dbgsym package."
msgstr ""

#: ../../../cpack_gen/deb.rst:717
msgid ""
"Binaries must contain debug symbols before packaging so use either ``Debug`` "
"or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable value."
msgstr ""

#: ../../../cpack_gen/deb.rst:720
msgid ""
"Additionally, if :variable:`CPACK_STRIP_FILES` is set, the files will be "
"stripped before they get to the DEB generator, so will not contain debug "
"symbols and a dbgsym package will not get built. Do not use with :variable:"
"`CPACK_STRIP_FILES`."
msgstr ""

#: ../../../cpack_gen/deb.rst:725
msgid "Building Debian packages on Windows"
msgstr ""

#: ../../../cpack_gen/deb.rst:729
msgid ""
"To communicate UNIX file permissions from the install stage to the CPack DEB "
"generator the ``cmake_mode_t`` NTFS alternate data stream (ADT) is used."
msgstr ""

#: ../../../cpack_gen/deb.rst:733
msgid ""
"When a filesystem without ADT support is used only owner read/write "
"permissions can be preserved."
msgstr ""

#: ../../../cpack_gen/deb.rst:737
msgid "Reproducible packages"
msgstr ""

#: ../../../cpack_gen/deb.rst:741
msgid ""
"The environment variable :envvar:`!SOURCE_DATE_EPOCH` may be set to a UNIX "
"timestamp, defined as the number of seconds, excluding leap seconds, since "
"01 Jan 1970 00:00:00 UTC.  If set, the CPack DEB generator will use its "
"value for timestamps in the package."
msgstr ""
