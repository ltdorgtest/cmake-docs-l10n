# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/block.rst:2
msgid "block"
msgstr ""

#: ../../../command/block.rst:6
msgid ""
"Evaluate a group of commands with a dedicated variable and/or policy scope."
msgstr ""

#: ../../../command/block.rst:8
msgid ""
"block([SCOPE_FOR [POLICIES] [VARIABLES] ] [PROPAGATE <var-name>...])\n"
"  <commands>\n"
"endblock()"
msgstr ""

#: ../../../command/block.rst:14
msgid ""
"All commands between ``block()`` and the matching :command:`endblock` are "
"recorded without being invoked.  Once the :command:`endblock` is evaluated, "
"the recorded list of commands is invoked inside the requested scopes, then "
"the scopes created by the ``block()`` command are removed."
msgstr ""

#: ../../../command/block.rst:19
msgid "``SCOPE_FOR``"
msgstr ""

#: ../../../command/block.rst:20
msgid "Specify which scopes must be created."
msgstr ""

#: ../../../command/block.rst:22
msgid "``POLICIES``"
msgstr ""

#: ../../../command/block.rst:23
msgid ""
"Create a new policy scope. This is equivalent to :command:"
"`cmake_policy(PUSH)` with an automatic :command:`cmake_policy(POP)` when "
"leaving the block scope."
msgstr ""

#: ../../../command/block.rst:27
msgid "``VARIABLES``"
msgstr ""

#: ../../../command/block.rst:28
msgid "Create a new variable scope."
msgstr ""

#: ../../../command/block.rst:30
msgid "If ``SCOPE_FOR`` is not specified, this is equivalent to:"
msgstr ""

#: ../../../command/block.rst:32
msgid "block(SCOPE_FOR VARIABLES POLICIES)"
msgstr ""

#: ../../../command/block.rst:36
msgid "``PROPAGATE``"
msgstr ""

#: ../../../command/block.rst:37
msgid ""
"When a variable scope is created by the :command:`block` command, this "
"option sets or unsets the specified variables in the parent scope. This is "
"equivalent to :command:`set(PARENT_SCOPE)` or :command:`unset(PARENT_SCOPE)` "
"commands."
msgstr ""

#: ../../../command/block.rst:42
msgid ""
"set(var1 \"INIT1\")\n"
"set(var2 \"INIT2\")\n"
"\n"
"block(PROPAGATE var1 var2)\n"
"  set(var1 \"VALUE1\")\n"
"  unset(var2)\n"
"endblock()\n"
"\n"
"# Now var1 holds VALUE1, and var2 is unset"
msgstr ""

#: ../../../command/block.rst:54
msgid ""
"This option is only allowed when a variable scope is created. An error will "
"be raised in the other cases."
msgstr ""

#: ../../../command/block.rst:57
msgid ""
"When the ``block()`` is inside a :command:`foreach` or :command:`while` "
"command, the :command:`break` and :command:`continue` commands can be used "
"inside the block."
msgstr ""

#: ../../../command/block.rst:61
msgid ""
"while(TRUE)\n"
"  block()\n"
"     ...\n"
"     # the break() command will terminate the while() command\n"
"     break()\n"
"  endblock()\n"
"endwhile()"
msgstr ""

#: ../../../command/block.rst:73
msgid "See Also"
msgstr ""

#: ../../../command/block.rst:75
msgid ":command:`endblock`"
msgstr ""

#: ../../../command/block.rst:76
msgid ":command:`return`"
msgstr ""

#: ../../../command/block.rst:77
msgid ":command:`cmake_policy`"
msgstr ""
