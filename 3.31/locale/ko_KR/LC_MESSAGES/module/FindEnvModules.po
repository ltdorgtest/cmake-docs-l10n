# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindEnvModules.cmake:6
msgid "FindEnvModules"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:10
msgid ""
"Locate an environment module implementation and make commands available to "
"CMake scripts to use them.  This is compatible with both Lua-based Lmod and "
"TCL-based EnvironmentModules."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:14
msgid ""
"This module is intended for the use case of setting up the compiler and "
"library environment within a :ref:`CTest Script <CTest Script>` (``ctest -"
"S``).  It can also be used in a :ref:`CMake Script <Script Processing Mode>` "
"(``cmake -P``)."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:20
msgid ""
"The loaded environment will not survive past the end of the calling process. "
"Do not use this module in project code (``CMakeLists.txt`` files) to load a "
"compiler environment; it will not be available during the build.  Instead "
"load the environment manually before running CMake or using the generated "
"build system."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:27
msgid "Example Usage"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:29
msgid ""
"set(CTEST_BUILD_NAME \"CrayLinux-CrayPE-Cray-dynamic\")\n"
"set(CTEST_BUILD_CONFIGURATION Release)\n"
"set(CTEST_BUILD_FLAGS \"-k -j8\")\n"
"set(CTEST_CMAKE_GENERATOR \"Unix Makefiles\")\n"
"\n"
"...\n"
"\n"
"find_package(EnvModules REQUIRED)\n"
"\n"
"env_module(purge)\n"
"env_module(load modules)\n"
"env_module(load craype)\n"
"env_module(load PrgEnv-cray)\n"
"env_module(load craype-knl)\n"
"env_module(load cray-mpich)\n"
"env_module(load cray-libsci)\n"
"\n"
"set(ENV{CRAYPE_LINK_TYPE} dynamic)\n"
"\n"
"..."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:53
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:55
msgid "This module will set the following variables in your project:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:57
msgid "``EnvModules_FOUND``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:58
msgid "True if a compatible environment modules framework was found."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:61
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:63
msgid "The following cache variable will be set:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:65
msgid "``EnvModules_COMMAND``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:66
msgid ""
"The low level module command to use.  Currently supported implementations "
"are the Lua based Lmod and TCL based EnvironmentModules."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:70
msgid "Environment Variables"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:72
msgid "``ENV{MODULESHOME}``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:73
msgid ""
"Usually set by the module environment implementation, used as a hint to "
"locate the module command to execute."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:77
msgid "Provided Functions"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:79
msgid ""
"This defines the following CMake functions for interacting with environment "
"modules:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:84
msgid "Execute an arbitrary module command:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:86
msgid ""
"env_module(cmd arg1 ... argN)\n"
"env_module(\n"
"  COMMAND cmd arg1 ... argN\n"
"  [OUTPUT_VARIABLE <out-var>]\n"
"  [RESULT_VARIABLE <ret-var>]\n"
")"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:95
msgid "The options are:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:97
msgid "``cmd arg1 ... argN``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:98
msgid ""
"The module sub-command and arguments to execute as if they were passed "
"directly to the module command in your shell environment."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:101
#: ../../../../Modules/FindEnvModules.cmake:121
msgid "``OUTPUT_VARIABLE <out-var>``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:102
#: ../../../../Modules/FindEnvModules.cmake:122
msgid "The standard output from executing the module command."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:104
#: ../../../../Modules/FindEnvModules.cmake:124
msgid "``RESULT_VARIABLE <ret-var>``"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:105
#: ../../../../Modules/FindEnvModules.cmake:125
msgid "The return code from executing the module command."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:109
msgid "Swap one module for another:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:111
msgid ""
"env_module_swap(out_mod in_mod\n"
"  [OUTPUT_VARIABLE <out-var>]\n"
"  [RESULT_VARIABLE <ret-var>]\n"
")"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:118
msgid ""
"This is functionally equivalent to the ``module swap out_mod in_mod`` shell "
"command.  The options are:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:129
msgid "Retrieve the list of currently loaded modules:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:131
msgid "env_module_list(<out-var>)"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:135
msgid ""
"This is functionally equivalent to the ``module list`` shell command. The "
"result is stored in ``<out-var>`` as a properly formatted CMake :ref:"
"`semicolon-separated list <CMake Language Lists>` variable."
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:141
msgid "Retrieve the list of available modules:"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:143
msgid "env_module_avail([<mod-prefix>] <out-var>)"
msgstr ""

#: ../../../../Modules/FindEnvModules.cmake:147
msgid ""
"This is functionally equivalent to the ``module avail <mod-prefix>`` shell "
"command.  The result is stored in ``<out-var>`` as a properly formatted "
"CMake :ref:`semicolon-separated list <CMake Language Lists>` variable."
msgstr ""
