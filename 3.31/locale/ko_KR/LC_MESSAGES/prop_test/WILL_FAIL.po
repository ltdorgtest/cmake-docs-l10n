# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_test/WILL_FAIL.rst:2
msgid "WILL_FAIL"
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:4
msgid ""
"If ``true``, inverts the pass / fail test criteria. Tests for which "
"``WILL_FAIL`` is ``true`` fail with return code 0 and pass with non-zero "
"return code. Tests that exceed the timeout specified by :prop_test:`TIMEOUT` "
"still fail regardless of ``WILL_FAIL``. System-level test failures including "
"segmentation faults, signal abort, or heap errors may fail the test even if "
"``WILL_FAIL`` is true."
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:11
msgid ""
"Example of a test that would ordinarily pass, but fails because "
"``WILL_FAIL`` is ``true``:"
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:14
msgid ""
"add_test(NAME failed COMMAND ${CMAKE_COMMAND} -E true)\n"
"set_property(TEST failed PROPERTY WILL_FAIL true)"
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:19
msgid ""
"To run a test that may have a system-level failure, but still pass if "
"``WILL_FAIL`` is set, use a CMake command to wrap the executable run. Note "
"that this will prevent automatic handling of the :prop_tgt:"
"`CROSSCOMPILING_EMULATOR` and :prop_tgt:`TEST_LAUNCHER` target property."
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:25
msgid ""
"add_executable(main main.c)\n"
"\n"
"add_test(NAME sigabrt COMMAND ${CMAKE_COMMAND} -E env $<TARGET_FILE:main>)\n"
"\n"
"set_property(TEST sigabrt PROPERTY WILL_FAIL TRUE)"
msgstr ""

#: ../../../prop_test/WILL_FAIL.rst:33
msgid ""
"#include <signal.h>\n"
"\n"
"int main(void){ raise(SIGABRT); return 0; }"
msgstr ""
