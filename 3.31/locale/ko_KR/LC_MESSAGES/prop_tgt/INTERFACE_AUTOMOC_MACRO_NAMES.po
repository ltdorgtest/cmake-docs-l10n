# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:2
msgid "INTERFACE_AUTOMOC_MACRO_NAMES"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:6
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of macro names for :"
"prop_tgt:`AUTOMOC` to be propagated to consumers."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:9
msgid ""
"When a target with :prop_tgt:`AUTOMOC` enabled links to a library that sets "
"``INTERFACE_AUTOMOC_MACRO_NAMES``, the target inherits the listed macro "
"names and merges them with those specified in its own :prop_tgt:"
"`AUTOMOC_MACRO_NAMES` property.  The target will then automatically generate "
"MOC files for source files that contain the inherited macro names too, not "
"just the macro names specified in its own :prop_tgt:`AUTOMOC_MACRO_NAMES` "
"property."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:16
msgid "By default ``INTERFACE_AUTOMOC_MACRO_NAMES`` is empty."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:18
msgid ""
"See the :manual:`cmake-qt(7)` manual for more information on using CMake "
"with Qt."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:22
msgid "Example 1"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:24
msgid ""
"In this example, ``myapp`` inherits the macro names ``STATIC_LIB_1`` and "
"``STATIC_LIB_2`` from ``static_lib``.  The ``moc`` tool will then "
"automatically be run on any of the ``myapp`` sources which contain "
"``STATIC_LIB_1`` or ``STATIC_LIB_2``."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:29
msgid ""
"set(AUTOMOC ON)\n"
"add_executable(myapp main.cpp)\n"
"target_link_libraries(myapp PRIVATE static_lib)\n"
"\n"
"add_library(static_lib STATIC static.cpp)\n"
"set_property(TARGET static_lib PROPERTY\n"
"  INTERFACE_AUTOMOC_MACRO_NAMES \"STATIC_LIB_1;STATIC_LIB_2\"\n"
")"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:41
msgid "Example 2"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:43
msgid ""
"In this example, the ``INTERFACE_AUTOMOC_MACRO_NAMES`` target property of "
"the various ``*_deep_lib`` libraries will propagate to ``shared_lib``, "
"``static_lib`` and ``interface_lib``.  Because the linking relationships are "
"specified as ``PUBLIC`` and ``INTERFACE``, those macro names will also "
"further propagate transitively up to ``app``."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:49
msgid ""
"set(AUTOMOC ON)\n"
"\n"
"add_library(shared_deep_lib SHARED deep_lib.cpp)\n"
"add_library(static_deep_lib STATIC deep_lib.cpp)\n"
"add_library(interface_deep_lib INTERFACE)\n"
"\n"
"set_property(TARGET shared_deep_lib PROPERTY\n"
"  INTERFACE_AUTOMOC_MACRO_NAMES \"SHARED_LINK_LIB\"\n"
")\n"
"set_property(TARGET static_deep_lib PROPERTY\n"
"  INTERFACE_AUTOMOC_MACRO_NAMES \"STATIC_LINK_LIB\"\n"
")\n"
"set_property(TARGET interface_deep_lib PROPERTY\n"
"  INTERFACE_AUTOMOC_MACRO_NAMES \"INTERFACE_LINK_LIB\"\n"
")\n"
"\n"
"add_library(shared_lib SHARED lib.cpp)\n"
"add_library(static_lib STATIC lib.cpp)\n"
"add_library(interface_lib INTERFACE)\n"
"\n"
"# PUBLIC and INTERFACE here ensure the macro names propagate to any\n"
"# consumers of shared_lib, static_lib or interface_lib too\n"
"target_link_libraries(shared_lib PUBLIC shared_deep_lib)\n"
"target_link_libraries(static_lib PUBLIC static_deep_lib)\n"
"target_link_libraries(interface_lib INTERFACE interface_deep_lib)\n"
"\n"
"# This consumer will receive all three of the above custom macro names as\n"
"# transitive usage requirements\n"
"add_executable(app main.cpp)\n"
"target_link_libraries(app PRIVATE shared_lib static_lib interface_lib)"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:82
msgid "In the above:"
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:84
msgid ""
"``shared_lib`` sources will be processed by ``moc`` if they contain "
"``SHARED_LINK_LIB``."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:86
msgid ""
"``static_lib`` sources will be processed by ``moc`` if they contain "
"``STATIC_LINK_LIB``."
msgstr ""

#: ../../../prop_tgt/INTERFACE_AUTOMOC_MACRO_NAMES.rst:88
msgid ""
"``app`` sources will be processed by ``moc`` if they contain "
"``SHARED_LINK_LIB``, ``STATIC_LINK_LIB`` or ``INTERFACE_LINK_LIB``."
msgstr ""
