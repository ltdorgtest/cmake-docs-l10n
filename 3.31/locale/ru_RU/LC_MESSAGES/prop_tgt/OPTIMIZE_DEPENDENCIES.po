# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:2
msgid "OPTIMIZE_DEPENDENCIES"
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:6
msgid "Activates dependency optimization of static and object libraries."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:8
msgid ""
"When this property is set to true, some dependencies for a static or object "
"library may be removed at generation time if they are not necessary to build "
"the library, since static and object libraries don't actually link against "
"anything."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:13
msgid ""
"If a static or object library has dependency optimization enabled, it first "
"discards all dependencies. Then, it looks through all of the direct and "
"indirect dependencies that it initially had, and adds them back if they meet "
"any of the following criteria:"
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:18
msgid "The dependency was added to the library by :command:`add_dependencies`."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:19
msgid ""
"The dependency was added to the library through a source file in the library "
"generated by a custom command that uses the dependency."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:21
msgid ""
"The dependency has any ``PRE_BUILD``, ``PRE_LINK``, or ``POST_BUILD`` custom "
"commands associated with it."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:23
msgid ""
"The dependency contains any source files that were generated by a custom "
"command."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:25
msgid ""
"The dependency contains any languages which produce side effects that are "
"relevant to the library. Currently, all languages except C, C++, Objective-"
"C, Objective-C++, assembly, and CUDA are assumed to produce side effects. "
"However, side effects from one language are assumed not to be relevant to "
"another (for example, a Fortran library is assumed to not have any side "
"effects that are relevant for a Swift library.)"
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:32
msgid ""
"As an example, assume you have a static Fortran library which depends on a "
"static C library, which in turn depends on a static Fortran library. The top-"
"level Fortran library has optimization enabled, but the middle C library "
"does not. If you build the top Fortran library, the bottom Fortran library "
"will also build, but not the middle C library, since the C library does not "
"have any side effects that are relevant for the Fortran library. However, if "
"you build the middle C library, the bottom Fortran library will also build, "
"even though it does not have any side effects that are relevant to the C "
"library, since the C library does not have optimization enabled."
msgstr ""

#: ../../../prop_tgt/OPTIMIZE_DEPENDENCIES.rst:42
msgid ""
"This property is initialized by the value of the :variable:"
"`CMAKE_OPTIMIZE_DEPENDENCIES` variable when the target is created."
msgstr ""
