# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0125.rst:2
msgid "CMP0125"
msgstr ""

#: ../../../policy/CMP0125.rst:6
msgid ""
"The :command:`find_file`, :command:`find_path`, :command:`find_library` and :"
"command:`find_program` commands cache their result in the variable specified "
"by their first argument.  Prior to CMake 3.21, if a cache variable of that "
"name already existed before the call but the cache variable had no type, any "
"non-cache variable of the same name would be discarded and the cache "
"variable was always used (see also :policy:`CMP0126` for a different but "
"similar behavior).  This contradicts the convention that a non-cache "
"variable should take precedence over a cache variable of the same name.  "
"Such a situation can arise if a user sets a cache variable on the command "
"line without specifying a type, such as ``cmake -DMYVAR=blah ...`` instead "
"of ``cmake -DMYVAR:FILEPATH=blah``."
msgstr ""

#: ../../../policy/CMP0125.rst:18
msgid ""
"Related to the above, if a cache variable of the specified name already "
"exists and it *does* have a type, the various ``find_...()`` commands would "
"return that value unchanged.  In particular, if it contained a relative "
"path, it would not be converted to an absolute path in this situation."
msgstr ""

#: ../../../policy/CMP0125.rst:23
msgid ""
"When policy ``CMP0125`` is set to ``OLD`` or is unset, the behavior is as "
"described above.  When it is set to ``NEW``, the behavior is as follows:"
msgstr ""

#: ../../../policy/CMP0125.rst:26
msgid ""
"If a non-cache variable of the specified name exists when the ``find_...()`` "
"command is called, its value will be used regardless of whether a cache "
"variable of the same name already exists or not.  A cache variable will not "
"be created in this case if no such cache variable existed before. If a cache "
"variable of the specified name did already exist, the cache will be updated "
"to match the non-cache variable."
msgstr ""

#: ../../../policy/CMP0125.rst:33
msgid ""
"The various ``find...()`` commands will always provide an absolute path in "
"the result variable, except where a relative path provided by a cache or non-"
"cache variable cannot be resolved to an existing path."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
