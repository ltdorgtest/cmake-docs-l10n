# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/add_link_options.rst:2
msgid "add_link_options"
msgstr ""

#: ../../../command/add_link_options.rst:6
msgid ""
"Add options to the link step for executable, shared library or module "
"library targets in the current directory and below that are added after this "
"command is invoked."
msgstr ""

#: ../../../command/add_link_options.rst:10
msgid "add_link_options(<option> ...)"
msgstr ""

#: ../../../command/add_link_options.rst:14
msgid ""
"This command can be used to add any link options, but alternative commands "
"exist to add libraries (:command:`target_link_libraries` or :command:"
"`link_libraries`).  See documentation of the :prop_dir:`directory "
"<LINK_OPTIONS>` and :prop_tgt:`target <LINK_OPTIONS>` ``LINK_OPTIONS`` "
"properties."
msgstr ""

#: ../../../command/add_link_options.rst:22
msgid ""
"This command cannot be used to add options for static library targets, since "
"they do not use a linker.  To add archiver or MSVC librarian flags, see the :"
"prop_tgt:`STATIC_LIBRARY_OPTIONS` target property."
msgstr ""

#: ../../../command/GENEX_NOTE.txt:4
msgid ""
"Arguments to |command_name| may use generator expressions with the syntax "
"``$<...>``. See the :manual:`cmake-generator-expressions(7)` manual for "
"available expressions.  |more_see_also|"
msgstr ""

#: ../../../command/DEVICE_LINK_OPTIONS.txt:2
msgid "Host And Device Specific Link Options"
msgstr ""

#: ../../../command/DEVICE_LINK_OPTIONS.txt:4
msgid ""
"When a device link step is involved, which is controlled by :prop_tgt:"
"`CUDA_SEPARABLE_COMPILATION` and :prop_tgt:`CUDA_RESOLVE_DEVICE_SYMBOLS` "
"properties and policy :policy:`CMP0105`, the raw options will be delivered "
"to the host and device link steps (wrapped in ``-Xcompiler`` or equivalent "
"for device link). Options wrapped with :genex:`$<DEVICE_LINK:...>` generator "
"expression will be used only for the device link step. Options wrapped with :"
"genex:`$<HOST_LINK:...>` generator expression will be used only for the host "
"link step."
msgstr ""

#: ../../../command/OPTIONS_SHELL.txt:2
msgid "Option De-duplication"
msgstr ""

#: ../../../command/OPTIONS_SHELL.txt:4
msgid ""
"The final set of options used for a target is constructed by accumulating "
"options from the current target and the usage requirements of its "
"dependencies.  The set of options is de-duplicated to avoid repetition."
msgstr ""

#: ../../../command/OPTIONS_SHELL.txt:8
msgid ""
"While beneficial for individual options, the de-duplication step can break "
"up option groups.  For example, ``-option A -option B`` becomes ``-option A "
"B``.  One may specify a group of options using shell-like quoting along with "
"a ``SHELL:`` prefix.  The ``SHELL:`` prefix is dropped, and the rest of the "
"option string is parsed using the :command:`separate_arguments` "
"``UNIX_COMMAND`` mode. For example, ``\"SHELL:-option A\" \"SHELL:-option "
"B\"`` becomes ``-option A -option B``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:2
msgid "Handling Compiler Driver Differences"
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:4
msgid ""
"To pass options to the linker tool, each compiler driver has its own syntax. "
"The ``LINKER:`` prefix and ``,`` separator can be used to specify, in a "
"portable way, options to pass to the linker tool. ``LINKER:`` is replaced by "
"the appropriate driver option and ``,`` by the appropriate driver separator. "
"The driver prefix and driver separator are given by the values of the :"
"variable:`CMAKE_<LANG>_LINKER_WRAPPER_FLAG` and :variable:"
"`CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP` variables."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:12
msgid ""
"For example, ``\"LINKER:-z,defs\"`` becomes ``-Xlinker -z -Xlinker defs`` "
"for ``Clang`` and ``-Wl,-z,defs`` for ``GNU GCC``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:15
msgid ""
"The ``LINKER:`` prefix can be specified as part of a ``SHELL:`` prefix "
"expression."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:18
msgid ""
"The ``LINKER:`` prefix supports, as an alternative syntax, specification of "
"arguments using the ``SHELL:`` prefix and space as separator. The previous "
"example then becomes ``\"LINKER:SHELL:-z defs\"``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:24
msgid ""
"Specifying the ``SHELL:`` prefix anywhere other than at the beginning of the "
"``LINKER:`` prefix is not supported."
msgstr ""

#: ../../../command/add_link_options.rst:36
msgid "See Also"
msgstr ""

#: ../../../command/add_link_options.rst:38
msgid ":command:`link_libraries`"
msgstr ""

#: ../../../command/add_link_options.rst:39
msgid ":command:`target_link_libraries`"
msgstr ""

#: ../../../command/add_link_options.rst:40
msgid ":command:`target_link_options`"
msgstr ""

#: ../../../command/add_link_options.rst:42
msgid ""
":variable:`CMAKE_<LANG>_FLAGS` and :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` "
"add language-wide flags passed to all invocations of the compiler. This "
"includes invocations that drive compiling and those that drive linking."
msgstr ""
