# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.31\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-13 07:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0162.rst:2
msgid "CMP0162"
msgstr ""

#: ../../../policy/CMP0162.rst:6
msgid ""
":ref:`Visual Studio Generators` add ``UseDebugLibraries`` indicators by "
"default."
msgstr ""

#: ../../../policy/CMP0162.rst:8
msgid ""
"The \"Use Debug Libraries\" setting in Visual Studio projects indicates what "
"configurations are considered debug configurations.  In standalone projects, "
"this may affect MSBuild's default selection of MSVC runtime library, "
"optimization flags, runtime checks, and similar settings.  CMake typically "
"generates all those settings explicitly based on the project's "
"specification, so CMake 3.29 and below do not write any "
"``UseDebugLibraries`` indicators to ``.vcxproj`` files."
msgstr ""

#: ../../../policy/CMP0162.rst:16
msgid ""
"CMake 3.30 and above prefer to write ``UseDebugLibraries`` indicators "
"because they are useful for reference by both humans and tools, and may also "
"affect the behavior of platform-specific SDKs.  The indicator for each "
"configuration of a target is determined as follows:"
msgstr ""

#: ../../../policy/CMP0162.rst:21
msgid ""
"If the target compiles sources for a known MSVC runtime library (such as "
"that specified by :prop_tgt:`MSVC_RUNTIME_LIBRARY`), then "
"``UseDebugLibraries`` is ``true`` for configurations that compile for a "
"\"Debug\" runtime library, and ``false`` for others."
msgstr ""

#: ../../../policy/CMP0162.rst:26
msgid ""
"Otherwise, such as in targets created by :command:`add_custom_target`, "
"``UseDebugLibraries`` is ``true`` for the ``Debug`` configuration, and "
"``false`` for others."
msgstr ""

#: ../../../policy/CMP0162.rst:30
msgid ""
"This policy provides compatibility for projects that have not been updated "
"to expect the indicators.  The policy setting is recorded by each target as "
"it is created and used to determine the default behavior for that target's "
"``.vcxproj`` file."
msgstr ""

#: ../../../policy/CMP0162.rst:35
msgid ""
"The ``OLD`` behavior for this policy is to not generate "
"``UseDebugLibraries`` indicators by default.  The ``NEW`` behavior for this "
"policy is to generate ``UseDebugLibraries`` indicators by default."
msgstr ""

#: ../../../policy/CMP0162.rst:39
msgid ""
"If the :variable:`CMAKE_VS_USE_DEBUG_LIBRARIES` variable and/or :prop_tgt:"
"`VS_USE_DEBUG_LIBRARIES` target property is set, it explicitly controls "
"``UseDebugLibraries`` generation regardless of this policy."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
