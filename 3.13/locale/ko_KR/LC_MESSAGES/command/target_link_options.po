# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/target_link_options.rst:2
msgid "target_link_options"
msgstr ""

#: ../../../command/target_link_options.rst:4
msgid "Add link options to a target."
msgstr ""

#: ../../../command/target_link_options.rst:8
msgid ""
"target_link_options(<target> [BEFORE]\n"
"  <INTERFACE|PUBLIC|PRIVATE> [items1...]\n"
"  [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])"
msgstr ""

#: ../../../command/target_link_options.rst:12
msgid ""
"Specify link options to use when linking a given target.  The named "
"``<target>`` must have been created by a command such as :command:"
"`add_executable` or :command:`add_library` and must not be an :ref:`ALIAS "
"target <Alias Targets>`."
msgstr ""

#: ../../../command/target_link_options.rst:17
msgid ""
"If ``BEFORE`` is specified, the content will be prepended to the property "
"instead of being appended."
msgstr ""

#: ../../../command/target_link_options.rst:20
msgid ""
"This command can be used to add any options, but alternative commands exist "
"to add libraries (:command:`target_link_libraries` and :command:"
"`link_libraries`). See documentation of the :prop_dir:`directory "
"<LINK_OPTIONS>` and :prop_tgt:`target <LINK_OPTIONS>` ``LINK_OPTIONS`` "
"properties."
msgstr ""

#: ../../../command/target_link_options.rst:26
msgid ""
"The ``INTERFACE``, ``PUBLIC`` and ``PRIVATE`` keywords are required to "
"specify the scope of the following arguments.  ``PRIVATE`` and ``PUBLIC`` "
"items will populate the :prop_tgt:`LINK_OPTIONS` property of ``<target>``.  "
"``PUBLIC`` and ``INTERFACE`` items will populate the :prop_tgt:"
"`INTERFACE_LINK_OPTIONS` property of ``<target>``. (:ref:`IMPORTED targets "
"<Imported Targets>` only support ``INTERFACE`` items.) The following "
"arguments specify link options.  Repeated calls for the same ``<target>`` "
"append items in the order called."
msgstr ""

#: ../../../command/target_link_options.rst:35
msgid ""
"Arguments to ``target_link_options`` may use \"generator expressions\" with "
"the syntax ``$<...>``. See the :manual:`cmake-generator-expressions(7)` "
"manual for available expressions.  See the :manual:`cmake-buildsystem(7)` "
"manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/OPTIONS_SHELL.txt:1
msgid ""
"The final set of compile or link options used for a target is constructed by "
"accumulating options from the current target and the usage requirements of "
"it dependencies.  The set of options is de-duplicated to avoid repetition. "
"While beneficial for individual options, the de-duplication step can break "
"up option groups.  For example, ``-D A -D B`` becomes ``-D A B``.  One may "
"specify a group of options using shell-like quoting along with a ``SHELL:`` "
"prefix.  The ``SHELL:`` prefix is dropped and the rest of the option string "
"is parsed using the :command:`separate_arguments` ``UNIX_COMMAND`` mode. For "
"example, ``\"SHELL:-D A\" \"SHELL:-D B\"`` becomes ``-D A -D B``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:1
msgid ""
"To pass options to the linker tool, each compiler driver has is own syntax. "
"The ``LINKER:`` prefix can be used to specify, in a portable way, options to "
"pass to the linker tool. The ``LINKER:`` prefix is replaced by the required "
"driver option and the rest of the option string defines linker arguments "
"using ``,`` as separator. These arguments will be formatted according to "
"the :variable:`CMAKE_<LANG>_LINKER_WRAPPER_FLAG` and :variable:"
"`CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP` variables."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:9
msgid ""
"For example, ``\"LINKER:-z,defs\"`` becomes ``-Xlinker -z -Xlinker defs`` "
"for ``Clang`` and ``-Wl,-z,defs`` for ``GNU GCC``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:12
msgid ""
"The ``LINKER:`` prefix can be specified as part of a ``SHELL:`` prefix "
"expression."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:15
msgid ""
"The ``LINKER:`` prefix supports, as alternate syntax, specification of "
"arguments using ``SHELL:`` prefix and space as separator. Previous example "
"becomes ``\"LINKER:SHELL:-z defs\"``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:21
msgid ""
"Specifying ``SHELL:`` prefix elsewhere than at the beginning of the ``LINKER:"
"`` prefix is not supported."
msgstr ""
