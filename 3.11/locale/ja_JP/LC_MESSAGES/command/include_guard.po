# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2018 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/include_guard.rst:2
msgid "include_guard"
msgstr ""

#: ../../../command/include_guard.rst:4
msgid ""
"Provides an include guard for the file currently being processed by CMake."
msgstr ""

#: ../../../command/include_guard.rst:8
msgid "include_guard([DIRECTORY|GLOBAL])"
msgstr ""

#: ../../../command/include_guard.rst:10
msgid ""
"Sets up an include guard for the current CMake file (see the :variable:"
"`CMAKE_CURRENT_LIST_FILE` variable documentation)."
msgstr ""

#: ../../../command/include_guard.rst:13
msgid ""
"CMake will end its processing of the current file at the location of the :"
"command:`include_guard` command if the current file has already been "
"processed for the applicable scope (see below). This provides functionality "
"similar to the include guards commonly used in source headers or to the "
"``#pragma once`` directive. If the current file has been processed "
"previously for the applicable scope, the effect is as though :command:"
"`return` had been called. Do not call this command from inside a function "
"being defined within the current file."
msgstr ""

#: ../../../command/include_guard.rst:22
msgid ""
"An optional argument specifying the scope of the guard may be provided. "
"Possible values for the option are:"
msgstr ""

#: ../../../command/include_guard.rst:30
msgid "``DIRECTORY``"
msgstr ""

#: ../../../command/include_guard.rst:26
msgid ""
"The include guard applies within the current directory and below. The file "
"will only be included once within this directory scope, but may be included "
"again by other files outside of this directory (i.e. a parent directory or "
"another directory not pulled in by :command:`add_subdirectory` or :command:"
"`include` from the current file or its children)."
msgstr ""

#: ../../../command/include_guard.rst:34
msgid "``GLOBAL``"
msgstr ""

#: ../../../command/include_guard.rst:33
msgid ""
"The include guard applies globally to the whole build. The current file will "
"only be included once regardless of the scope."
msgstr ""

#: ../../../command/include_guard.rst:36
msgid ""
"If no arguments given, ``include_guard`` has the same scope as a variable, "
"meaning that the include guard effect is isolated by the most recent "
"function scope or current directory if no inner function scopes exist. In "
"this case the command behavior is the same as:"
msgstr ""

#: ../../../command/include_guard.rst:41
msgid ""
"if(__CURRENT_FILE_VAR__)\n"
"  return()\n"
"endif()\n"
"set(__CURRENT_FILE_VAR__ TRUE)"
msgstr ""
