# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-10 08:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/HIP_STANDARD.rst:2
msgid "HIP_STANDARD"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:6
msgid "The HIP/C++ standard requested to build this target."
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:8
msgid "Supported values are:"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:10
msgid "``98``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:11
msgid "HIP C++98"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:13
msgid "``11``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:14
msgid "HIP C++11"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:16
msgid "``14``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:17
msgid "HIP C++14"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:19
msgid "``17``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:20
msgid "HIP C++17"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:22
msgid "``20``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:23
msgid "HIP C++20"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:25
msgid "``23``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:26
msgid "HIP C++23"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:28
msgid "``26``"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:31
msgid ""
"HIP C++26. CMake 3.25 and later *recognize* ``26`` as a valid value, no "
"version has support for any compiler."
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:34
msgid ""
"If the value requested does not result in a compile flag being added for the "
"compiler in use, a previous standard flag will be added instead.  This means "
"that using:"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:38
msgid "set_property(TARGET tgt PROPERTY HIP_STANDARD 11)"
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:42
msgid ""
"with a compiler which does not support ``-std=gnu++11`` or an equivalent "
"flag will not result in an error or warning, but will instead add the ``-"
"std=gnu++98`` flag if supported.  This \"decay\" behavior may be controlled "
"with the :prop_tgt:`HIP_STANDARD_REQUIRED` target property. Additionally, "
"the :prop_tgt:`HIP_EXTENSIONS` target property may be used to control "
"whether compiler-specific extensions are enabled on a per-target basis."
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:49
msgid ""
"See the :manual:`cmake-compile-features(7)` manual for information on "
"compile features and a list of supported compilers."
msgstr ""

#: ../../../prop_tgt/HIP_STANDARD.rst:52
msgid ""
"This property is initialized by the value of the :variable:"
"`CMAKE_HIP_STANDARD` variable if it is set when a target is created."
msgstr ""
