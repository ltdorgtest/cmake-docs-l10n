# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0120.rst:2
msgid "CMP0120"
msgstr ""

#: ../../../policy/CMP0120.rst:6
msgid "The :module:`WriteCompilerDetectionHeader` module is removed."
msgstr ""

#: ../../../policy/CMP0120.rst:8
msgid ""
"CMake versions 3.1 through 3.19 provide this module to generate a C++ "
"compatibility layer by reusing information from CMake's table of "
"preprocessor checks for :manual:`cmake-compile-features(7)`.  However:"
msgstr ""

#: ../../../policy/CMP0120.rst:12
msgid ""
"Those granular features have been superseded by meta-features for :ref:"
"`Requiring Language Standards` such as ``cxx_std_11``.  Therefore no new "
"granular feature checks will be added and projects will need to use other "
"means to conditionally use new C++ features."
msgstr ""

#: ../../../policy/CMP0120.rst:17
msgid ""
"The module exposes some of CMake's implementation details directly to C++ "
"translation units."
msgstr ""

#: ../../../policy/CMP0120.rst:20
msgid ""
"The module's approach effectively provides a header file with CMake, thus "
"tying the version of the header to the version of CMake. Many projects found "
"that the :module:`WriteCompilerDetectionHeader` was best used by manually "
"generating its header locally with a recent version of CMake and then "
"bundling it with the project source so that it could be used with older "
"CMake versions."
msgstr ""

#: ../../../policy/CMP0120.rst:27
msgid ""
"For reasons including the above, CMake 3.20 and above prefer to not provide "
"the :module:`WriteCompilerDetectionHeader` module.  This policy provides "
"compatibility for projects that have not been ported away from it.  Projects "
"using the module should be updated to stop using it. Alternatives include:"
msgstr ""

#: ../../../policy/CMP0120.rst:33
msgid "Bundle a copy of the generated header in the project's source."
msgstr ""

#: ../../../policy/CMP0120.rst:34
msgid "Use a third-party alternative, such as the CC0-licensed `Hedley`_."
msgstr ""

#: ../../../policy/CMP0120.rst:35
msgid "Drop support for compilers too old to provide the features natively."
msgstr ""

#: ../../../policy/CMP0120.rst:37
msgid ""
"The ``OLD`` behavior of this policy is for inclusion of the deprecated :"
"module:`WriteCompilerDetectionHeader` module to work.  The ``NEW`` behavior "
"is for inclusion of the module to fail as if it does not exist."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
