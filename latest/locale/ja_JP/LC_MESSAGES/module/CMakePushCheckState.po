# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CMakePushCheckState.cmake:8
msgid "CMakePushCheckState"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:10
msgid ""
"This module provides macros for managing the state of variables that "
"influence how various CMake check commands (e.g., ``check_symbol_exists()``, "
"etc.) are performed.  These macros save, reset, and restore the following "
"variables:"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:14
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:15
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:16
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:17
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:18
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:19
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:20
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:21
msgid "``CMAKE_EXTRA_INCLUDE_FILES``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:24
msgid "Macros"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:28
msgid ""
"Saves (pushes) the current states of the above variables onto a stack.  This "
"is typically used to preserve the current configuration before making "
"temporary modifications for specific checks."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:32
msgid "cmake_push_check_state([RESET])"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:36
msgid "``RESET``"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:37
msgid ""
"When this option is specified, the macro not only saves the current states "
"of the listed variables but also resets them to empty, allowing them to be "
"reconfigured from a clean state."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:43
msgid ""
"Resets (clears) the contents of the variables listed above to empty states."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:45
msgid "cmake_reset_check_state()"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:49
msgid ""
"This macro can be used, for example, when performing multiple sequential "
"checks that require entirely new configurations, ensuring no previous "
"configuration unintentionally carries over."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:55
msgid ""
"Restores the states of the variables listed above to their values at the "
"time of the most recent ``cmake_push_check_state()`` call."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:58
msgid "cmake_pop_check_state()"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:62
msgid ""
"This macro is used to revert temporary changes made during a check.  To "
"prevent unexpected behavior, pair each ``cmake_push_check_state()`` with a "
"corresponding ``cmake_pop_check_state()``."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:66
msgid ""
"These macros are useful for scoped configuration, for example, in :ref:`Find "
"modules <Find Modules>` or when performing checks in a controlled "
"environment, ensuring that temporary modifications are isolated to the scope "
"of the check and do not propagate into other parts of the build system."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:73
msgid ""
"Other CMake variables, such as ``CMAKE_<LANG>_FLAGS``, propagate to all "
"checks regardless of these macros, as those fundamental variables are "
"designed to influence the global state of the build system."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:78
msgid "Examples"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:80
msgid ""
"include(CMakePushCheckState)\n"
"\n"
"# Save and reset the current state\n"
"cmake_push_check_state(RESET)\n"
"\n"
"# Perform check with specific compile definitions\n"
"set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)\n"
"include(CheckSymbolExists)\n"
"check_symbol_exists(memfd_create \"sys/mman.h\" HAVE_MEMFD_CREATE)\n"
"\n"
"# Restore the original state\n"
"cmake_pop_check_state()"
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:95
msgid ""
"Variable states can be pushed onto the stack multiple times, allowing for "
"nested or sequential configurations.  Each ``cmake_pop_check_state()`` "
"restores the most recent pushed states."
msgstr ""

#: ../../../../Modules/CMakePushCheckState.cmake:99
msgid ""
"include(CMakePushCheckState)\n"
"\n"
"# Save and reset the current state\n"
"cmake_push_check_state(RESET)\n"
"\n"
"# Perform the first check with additional libraries\n"
"set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_DL_LIBS})\n"
"include(CheckSymbolExists)\n"
"check_symbol_exists(dlopen \"dlfcn.h\" HAVE_DLOPEN)\n"
"\n"
"# Save current state\n"
"cmake_push_check_state()\n"
"\n"
"# Perform the second check with libraries and additional compile "
"definitions\n"
"set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)\n"
"check_symbol_exists(dladdr \"dlfcn.h\" HAVE_DLADDR)\n"
"\n"
"message(STATUS \"${CMAKE_REQUIRED_DEFINITIONS}\")\n"
"# Output: -D_GNU_SOURCE\n"
"\n"
"# Restore the previous state\n"
"cmake_pop_check_state()\n"
"\n"
"message(STATUS \"${CMAKE_REQUIRED_DEFINITIONS}\")\n"
"# Output here is empty\n"
"\n"
"# Reset variables to prepare for the next check\n"
"cmake_reset_check_state()\n"
"\n"
"# Perform the next check only with additional compile definitions\n"
"set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)\n"
"check_symbol_exists(dl_iterate_phdr \"link.h\" HAVE_DL_ITERATE_PHDR)\n"
"\n"
"# Restore the original state\n"
"cmake_pop_check_state()"
msgstr ""
