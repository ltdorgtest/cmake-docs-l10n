# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../policy/CMP0136.rst:2
msgid "CMP0136"
msgstr ""

#: ../../../policy/CMP0136.rst:6
msgid "Watcom runtime library flags are selected by an abstraction."
msgstr ""

#: ../../../policy/CMP0136.rst:8
msgid ""
"Compilers targeting the Watcom ABI have flags to select the Watcom runtime "
"library."
msgstr ""

#: ../../../policy/CMP0136.rst:11
msgid ""
"In CMake 3.23 and below, Watcom runtime library selection flags are added to "
"the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` cache entries by CMake "
"automatically.  This allows users to edit their cache entries to adjust the "
"flags.  However, the presence of such default flags is problematic for "
"projects that want to choose a different runtime library programmatically. "
"In particular, it requires string editing of the :variable:"
"`CMAKE_<LANG>_FLAGS_<CONFIG>` variables with knowledge of the CMake builtin "
"defaults so they can be replaced."
msgstr ""

#: ../../../policy/CMP0136.rst:20
msgid ""
"CMake 3.24 and above prefer to leave the Watcom runtime library selection "
"flags out of the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` values and "
"instead offer a first-class abstraction.  The :variable:"
"`CMAKE_WATCOM_RUNTIME_LIBRARY` variable and :prop_tgt:"
"`WATCOM_RUNTIME_LIBRARY` target property may be set to select the Watcom "
"runtime library.  If they are not set then CMake uses the default value "
"``MultiThreadedDLL`` on Windows and ``SingleThreaded`` on other platforms, "
"which is equivalent to the original flags."
msgstr ""

#: ../../../policy/CMP0136.rst:28
msgid ""
"This policy provides compatibility with projects that have not been updated "
"to be aware of the abstraction.  The policy setting takes effect as of the "
"first :command:`project` or :command:`enable_language` command that enables "
"a language whose compiler targets the Watcom ABI."
msgstr ""

#: ../../../policy/CMP0136.rst:35
msgid ""
"Once the policy has taken effect at the top of a project, that choice must "
"be used throughout the tree.  In projects that have nested projects in "
"subdirectories, be sure to convert everything together."
msgstr ""

#: ../../../policy/CMP0136.rst:39
msgid ""
"The ``OLD`` behavior for this policy is to place Watcom runtime library "
"flags in the default :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` cache entries "
"and ignore the :variable:`CMAKE_WATCOM_RUNTIME_LIBRARY` abstraction. The "
"``NEW`` behavior for this policy is to *not* place Watcom runtime library "
"flags in the default cache entries and use the abstraction instead."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid ""
"This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. "
"It may be set by :command:`cmake_policy` or :command:"
"`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, "
"and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-"
"policies(7)>` and may be removed in a future version of CMake."
msgstr ""
