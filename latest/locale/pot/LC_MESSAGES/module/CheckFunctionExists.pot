# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckFunctionExists.cmake:6
msgid "CheckFunctionExists"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:8
msgid "This module provides a command to check whether a C function exists."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:10
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:12
msgid "include(CheckFunctionExists)"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:17
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:19
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:23
msgid "Checks once whether a C function can be linked from system libraries:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:25
msgid "check_function_exists(<function> <variable>)"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:29
msgid ""
"This command checks whether the ``<function>`` is provided by libraries on "
"the system, and stores the result in an internal cache variable "
"``<variable>``."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:35
msgid ""
"Prefer using :module:`CheckSymbolExists` or :module:`CheckSourceCompiles` "
"instead of this command, for the following reasons:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:38
msgid ""
"``check_function_exists()`` can't detect functions that are inlined in "
"headers or defined as preprocessor macros."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:41
msgid ""
"``check_function_exists()`` can't detect anything in the 32-bit versions of "
"the Win32 API, because of a mismatch in calling conventions."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:44
msgid ""
"``check_function_exists()`` only verifies linking, it does not verify that "
"the function is declared in system headers."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:48
msgid "Variables Affecting the Check"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:49
msgid ""
"The following variables may be set before calling this command to modify the "
"way the check is run:"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:2
msgid ""
"A space-separated string of additional flags to pass to the compiler. A :ref:"
"`semicolon-separated list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS` and its associated configuration-"
"specific :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` variables are automatically "
"prepended to the compiler command before the contents of this variable."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of compiler "
"definitions, each of the form ``-DFOO`` or ``-DFOO=bar``.  A definition for "
"the name specified by the result variable argument of the check command is "
"also added automatically."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header search "
"paths to pass to the compiler.  These will be the only header search paths "
"used; the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of options to add "
"to the link command (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of libraries to add "
"to the link command.  These can be the names of system libraries, or they "
"can be :ref:`Imported Targets` (see :command:`try_compile` for further "
"details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of library search "
"paths to pass to the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:67
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:70
msgid "Example: Basic Usage"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:72
msgid ""
"In the following example, a check is performed to determine whether the "
"linker sees the C function ``fopen()``, and the result is stored in the "
"``HAVE_FOPEN`` internal cache variable:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:76
msgid ""
"include(CheckFunctionExists)\n"
"\n"
"check_function_exists(fopen HAVE_FOPEN)"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:83
msgid "Example: Missing Declaration"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:85
msgid ""
"As noted above, the :module:`CheckSymbolExists` module is preferred for "
"checking C functions, since it also verifies whether the function is "
"declared or defined as a macro.  In the following example, this module is "
"used to check an edge case where a function may not be declared in system "
"headers.  For instance, on macOS, the ``fdatasync()`` function may be "
"available in the C library, but its declaration is not provided in the "
"``unistd.h`` system header."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:93
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:93
msgid ""
"include(CheckFunctionExists)\n"
"include(CheckSymbolExists)\n"
"\n"
"check_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n"
"\n"
"# Check if fdatasync() is available in the C library.\n"
"if(NOT HAVE_FDATASYNC)\n"
"  check_function_exists(fdatasync HAVE_FDATASYNC_WITHOUT_DECL)\n"
"endif()"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:106
msgid "In such a case, the project can provide its own declaration if missing:"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:108
msgid "``example.c``"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:108
msgid ""
"#ifdef HAVE_FDATASYNC_WITHOUT_DECL\n"
"  extern int fdatasync(int);\n"
"#endif"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:116
msgid "See Also"
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:118
msgid ""
"The :module:`CheckSymbolExists` module to check whether a C symbol exists."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:119
msgid ""
"The :module:`CheckSourceCompiles` module to check whether a source code can "
"be compiled."
msgstr ""

#: ../../../../Modules/CheckFunctionExists.cmake:121
msgid ""
"The :module:`CheckFortranFunctionExists` module to check whether a Fortran "
"function exists."
msgstr ""
