# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckIPOSupported.cmake:6
msgid "CheckIPOSupported"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:10
msgid ""
"This module provides a command to check whether the compiler supports "
"interprocedural optimization (IPO/LTO)."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:13
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:15
msgid "include(CheckIPOSupported)"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:19
msgid ""
"Interprocedural optimization is a compiler technique that performs "
"optimizations across translation units (i.e., across source files), allowing "
"the compiler to analyze and optimize the entire program as a whole rather "
"than file-by-file.  This can improve performance by enabling more aggressive "
"inlining and dead code elimination.  When these optimizations are applied at "
"link time, the process is typically referred to as link-time optimization "
"(LTO), which is a common form of IPO."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:27
msgid ""
"In CMake, interprocedural optimization can be enabled on a per-target basis "
"using the :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target property, or for "
"all targets in the current scope using the :variable:"
"`CMAKE_INTERPROCEDURAL_OPTIMIZATION` variable."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:32
msgid ""
"Use this module before enabling the interprocedural optimization on targets "
"to ensure the compiler supports IPO/LTO."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:36
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:38
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:42
msgid ""
"Checks whether the compiler supports interprocedural optimization (IPO/LTO):"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:44
msgid ""
"check_ipo_supported(\n"
"  [RESULT <result-var>]\n"
"  [OUTPUT <output-var>]\n"
"  [LANGUAGES <lang>...]\n"
")"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:52
msgid "Options are:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:54
msgid "``RESULT <result-var>``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:55
msgid ""
"Set ``<result-var>`` variable to ``YES`` if IPO is supported by the compiler "
"and ``NO`` otherwise.  If this option is not given then the command will "
"issue a fatal error if IPO is not supported."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:58
msgid "``OUTPUT <output-var>``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:59
msgid "Set ``<output-var>`` variable with details about any error."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:60
msgid "``LANGUAGES <lang>...``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:61
msgid "Specify languages whose compilers to check."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:63
msgid "The following languages are supported:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:65
msgid "``C``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:67
msgid "``CXX``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:69
msgid "``CUDA``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:73
msgid "``Fortran``"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:75
msgid ""
"If this option is not given, the default languages are picked from the "
"current :prop_gbl:`ENABLED_LANGUAGES` global property."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:80
msgid ""
"To use ``check_ipo_supported()``, policy :policy:`CMP0069` must be set to "
"``NEW``; otherwise, a fatal error will occur."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:83
msgid "Support for :ref:`Visual Studio Generators`."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:86
msgid ""
"The check uses the caller's :variable:`CMAKE_<LANG>_FLAGS` and :variable:"
"`CMAKE_<LANG>_FLAGS_<CONFIG>` values. See policy :policy:`CMP0138`."
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:92
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:94
msgid ""
"Checking whether the compiler supports IPO and emitting a fatal error if it "
"is not supported:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:97
msgid ""
"include(CheckIPOSupported)\n"
"check_ipo_supported() # fatal error if IPO is not supported\n"
"set_property(TARGET foo PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:103
msgid ""
"The following example demonstrates how to use this module to enable IPO for "
"the target only when supported by the compiler and to issue a warning if it "
"is not.  Additionally, projects may want to provide a configuration option "
"to control when IPO is enabled.  For example:"
msgstr ""

#: ../../../../Modules/CheckIPOSupported.cmake:108
msgid ""
"option(FOO_ENABLE_IPO \"Enable IPO/LTO\")\n"
"\n"
"if(FOO_ENABLE_IPO)\n"
"  include(CheckIPOSupported)\n"
"  check_ipo_supported(RESULT result OUTPUT output)\n"
"  if(result)\n"
"    set_property(TARGET foo PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)\n"
"  else()\n"
"    message(WARNING \"IPO is not supported: ${output}\")\n"
"  endif()\n"
"endif()"
msgstr ""
