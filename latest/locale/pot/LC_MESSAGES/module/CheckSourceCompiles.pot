# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckSourceCompiles.cmake:7
msgid "CheckSourceCompiles"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:11
msgid ""
"This module provides a command that checks whether a source code can be "
"built for a given language."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:14
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:16
msgid "include(CheckSourceCompiles)"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:21
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:23
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:27
msgid ""
"Checks once whether the given source code can be built for the given "
"language:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:30
msgid ""
"check_source_compiles(\n"
"  <lang>\n"
"  <code>\n"
"  <variable>\n"
"  [FAIL_REGEX <regexes>...]\n"
"  [SRC_EXT <extension>]\n"
")"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:40
msgid ""
"This command checks once that the source supplied in ``<code>`` can be "
"compiled (and linked into an executable) for code language ``<lang>``. The "
"result of the check is stored in the internal cache variable specified by "
"``<variable>``."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:45
msgid "The arguments are:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:47
msgid "``<lang>``"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:48
msgid ""
"Language of the source code to check.  Supported languages are: ``C``, "
"``CXX``, ``CUDA``, ``Fortran``, ``HIP``, ``ISPC``, ``OBJC``, ``OBJCXX``, and "
"``Swift``."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:52
msgid "Support for ``HIP`` language."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:55
msgid "Support for ``Swift`` language."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:58
msgid "``<code>``"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:59
msgid ""
"The source code to check.  This must be an entire program, as written in a "
"file containing the body block.  All symbols used in the source code are "
"expected to be declared as usual in their corresponding headers."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:63
msgid "``<variable>``"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:64
msgid ""
"Variable name of an internal cache variable to store the result of the "
"check, with boolean true for success and boolean false for failure."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:67
msgid "``FAIL_REGEX <regexes>...``"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:68
msgid ""
"If one or more regular expression patterns are provided, then failure is "
"determined by checking if anything in the compiler output matches any of the "
"specified regular expressions."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:72
msgid "``SRC_EXT <extension>``"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:73
msgid ""
"By default, the internal test source file used for the check will be given a "
"file extension that matches the requested language (e.g., ``.c`` for C, ``."
"cxx`` for C++, ``.F90`` for Fortran, etc.).  This option can be used to "
"override this with the ``.<extension>`` instead."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:79
msgid "Variables Affecting the Check"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:80
msgid ""
"The following variables may be set before calling this command to modify the "
"way the check is run:"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:2
msgid ""
"A space-separated string of additional flags to pass to the compiler. A :ref:"
"`semicolon-separated list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS` and its associated configuration-"
"specific :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` variables are automatically "
"prepended to the compiler command before the contents of this variable."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of compiler "
"definitions, each of the form ``-DFOO`` or ``-DFOO=bar``.  A definition for "
"the name specified by the result variable argument of the check command is "
"also added automatically."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header search "
"paths to pass to the compiler.  These will be the only header search paths "
"used; the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of options to add "
"to the link command (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of libraries to add "
"to the link command.  These can be the names of system libraries, or they "
"can be :ref:`Imported Targets` (see :command:`try_compile` for further "
"details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of library search "
"paths to pass to the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../module/include/CMAKE_TRY_COMPILE_TARGET_TYPE.rst:1
msgid ":variable:`CMAKE_TRY_COMPILE_TARGET_TYPE`"
msgstr ""

#: ../../../module/include/CMAKE_TRY_COMPILE_TARGET_TYPE.rst:2
msgid ""
"Internally, the :command:`try_compile` command is used to perform the check, "
"and this variable controls the type of target it creates.  If this variable "
"is set to ``EXECUTABLE`` (the default), the check compiles and links the "
"test source code as an executable program.  If set to ``STATIC_LIBRARY``, "
"the test source code is compiled but not linked."
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:100
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:103
msgid "Example: Basic Usage"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:105
msgid ""
"The following example demonstrates how to check whether the C++ compiler "
"supports a specific language feature using this module.  In this case, the "
"check verifies if the compiler supports ``C++11`` lambda expressions.  The "
"result is stored in the internal cache variable ``HAVE_CXX11_LAMBDAS``:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:110
msgid ""
"include(CheckSourceCompiles)\n"
"\n"
"check_source_compiles(CXX \"\n"
"  int main()\n"
"  {\n"
"    auto lambda = []() { return 42; };\n"
"    return lambda();\n"
"  }\n"
"\" HAVE_CXX11_LAMBDAS)"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:123
msgid "Example: Checking Code With Bracket Argument"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:125
msgid ""
"The following example shows how to check whether the C compiler supports the "
"``noreturn`` attribute.  Code is supplied using the :ref:`Bracket Argument` "
"for easier embedded quotes handling:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:129
msgid ""
"include(CheckSourceCompiles)\n"
"\n"
"check_source_compiles(C [[\n"
"  #if !__has_c_attribute(noreturn)\n"
"  #  error \"No noreturn attribute\"\n"
"  #endif\n"
"  int main(void) { return 0; }\n"
"]] HAVE_NORETURN)"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:142
msgid "Example: Performing a Check Without Linking"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:144
msgid ""
"In the following example, this module is used to perform a compile-only "
"check of Fortran source code, whether the compiler supports the ``pure`` "
"procedure attribute:"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:148
msgid ""
"include(CheckSourceCompiles)\n"
"\n"
"block()\n"
"  set(CMAKE_TRY_COMPILE_TARGET_TYPE \"STATIC_LIBRARY\")\n"
"\n"
"  check_source_compiles(\n"
"    Fortran\n"
"    \"pure subroutine foo()\n"
"    end subroutine\"\n"
"    HAVE_PURE\n"
"  )\n"
"endblock()"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:164
msgid "Example: Isolated Check"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:166
msgid ""
"In the following example, this module is used in combination with the :"
"module:`CMakePushCheckState` module to modify required libraries when "
"checking whether the PostgreSQL ``PGVerbosity`` enum contains "
"``PQERRORS_SQLSTATE`` (available as of PostgreSQL version 12):"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:171
msgid ""
"include(CheckSourceCompiles)\n"
"include(CMakePushCheckState)\n"
"\n"
"find_package(PostgreSQL)\n"
"\n"
"if(TARGET PostgreSQL::PostgreSQL)\n"
"  cmake_push_check_state(RESET)\n"
"    set(CMAKE_REQUIRED_LIBRARIES PostgreSQL::PostgreSQL)\n"
"\n"
"    check_source_compiles(C \"\n"
"      #include <libpq-fe.h>\n"
"      int main(void)\n"
"      {\n"
"        PGVerbosity e = PQERRORS_SQLSTATE;\n"
"        (void)e;\n"
"        return 0;\n"
"      }\n"
"    \" HAVE_PQERRORS_SQLSTATE)\n"
"  cmake_pop_check_state()\n"
"endif()"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:195
msgid "See Also"
msgstr ""

#: ../../../../Modules/CheckSourceCompiles.cmake:197
msgid ""
"The :module:`CheckSourceRuns` module to check whether the source code can be "
"built and also run."
msgstr ""
