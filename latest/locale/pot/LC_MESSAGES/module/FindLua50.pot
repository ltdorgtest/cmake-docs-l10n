# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindLua50.cmake:6
msgid "FindLua50"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:10
msgid ""
"This module is specifically for Lua version branch 5.0, which is obsolete "
"and not maintained anymore.  In new code use the latest supported Lua "
"version and the version-agnostic module :module:`FindLua` instead."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:14
msgid "Finds the Lua library.  Lua is a embeddable scripting language."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:16
msgid ""
"When working with Lua, its library headers are intended to be included in "
"project source code as:"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:19
msgid "#include <lua.h>"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:23
msgid "and not:"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:25
msgid "#include <lua/lua.h>"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:29
msgid ""
"This is because, the location of Lua headers may differ across platforms and "
"may exist in locations other than ``lua/``."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:33
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:35
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:37
msgid "``Lua50_FOUND``"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:38
msgid ""
"Boolean indicating whether Lua is found.  For backward compatibility, the "
"``LUA50_FOUND`` variable is also set to the same value."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:42
msgid "Cache Variables"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:44
msgid "The following cache variables may also be set:"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:46
msgid "``LUA_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:47
msgid ""
"The directory containing the Lua header files, such as ``lua.h``, ``lualib."
"h``, and ``lauxlib.h``, needed to use Lua."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:50
msgid "``LUA_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:51
msgid ""
"Libraries needed to link against to use Lua.  This list includes both "
"``lua`` and ``lualib`` libraries."
msgstr ""

#: ../../../../Modules/FindLua50.cmake:55
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:57
msgid ""
"Finding the Lua 5.0 library and creating an interface :ref:`imported target "
"<Imported Targets>` that encapsulates its usage requirements for linking to "
"a project target:"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:61
msgid ""
"find_package(Lua50)\n"
"\n"
"if(Lua50_FOUND AND NOT TARGET Lua50::Lua50)\n"
"  add_library(Lua50::Lua50 INTERFACE IMPORTED)\n"
"  set_target_properties(\n"
"    Lua50::Lua50\n"
"    PROPERTIES\n"
"      INTERFACE_INCLUDE_DIRECTORIES \"${LUA_INCLUDE_DIR}\"\n"
"      INTERFACE_LINK_LIBRARIES \"${LUA_LIBRARIES}\"\n"
"  )\n"
"endif()\n"
"\n"
"target_link_libraries(project_target PRIVATE Lua50::Lua50)"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:78
msgid "See Also"
msgstr ""

#: ../../../../Modules/FindLua50.cmake:80
msgid "The :module:`FindLua` module to find Lua in version-agnostic way."
msgstr ""
