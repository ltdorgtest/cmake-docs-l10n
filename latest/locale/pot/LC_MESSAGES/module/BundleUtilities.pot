# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/BundleUtilities.cmake:6
msgid "BundleUtilities"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:8
msgid ""
"This module provides utility commands for assembling standalone, bundle-"
"style applications with CMake, such as macOS ``.app`` bundles or similar "
"directory-based application bundles on other operating systems."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:12
msgid "Load this module in CMake installation with:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:14
msgid "include(BundleUtilities)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:20
msgid ""
"Do not use this module at configure time (from ``CMakeLists.txt``). Instead, "
"include it and invoke its commands from an :command:`install(CODE)` or :"
"command:`install(SCRIPT)`."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:25
msgid "Commands"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:27
msgid "This module provides the following commands:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:29
msgid ":command:`fixup_bundle`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:30
msgid ":command:`copy_and_fixup_bundle`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:31
msgid ":command:`verify_app`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:32
msgid ":command:`get_bundle_main_executable`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:33
msgid ":command:`get_dotapp_dir`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:34
msgid ":command:`get_bundle_and_executable`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:35
msgid ":command:`get_bundle_all_executables`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:36
msgid ":command:`get_item_key`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:37
msgid ":command:`get_item_rpaths`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:38
msgid ":command:`clear_bundle_keys`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:39
msgid ":command:`set_bundle_key_values`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:40
msgid ":command:`get_bundle_keys`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:41
msgid ":command:`copy_resolved_item_into_bundle`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:42
msgid ":command:`copy_resolved_framework_into_bundle`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:43
msgid ":command:`fixup_bundle_item`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:44
msgid ":command:`verify_bundle_prerequisites`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:45
msgid ":command:`verify_bundle_symlinks`"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:49
msgid ""
"Prepares a bundle for distribution by fixing up its internal dependencies:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:51
msgid "fixup_bundle(<app> <libs> <dirs> [IGNORE_ITEM <files>...])"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:55
msgid ""
"This command modifies the ``<app>`` bundle in-place to make it self-"
"contained and portable, so that it can be drag-n-drop copied to another "
"machine and run there, assuming all of the system libraries are compatible."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:60
msgid ""
"This command collects all dependencies (keys) for the executables and "
"libraries in the bundle.  For each dependency, it copies the required files "
"into the bundle and adjusts them according to their own prerequisites.  Once "
"complete, it clears the collected keys and invokes the :command:`verify_app` "
"command to ensure the final bundle is truly standalone."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:67
#: ../../../../Modules/BundleUtilities.cmake:103
#: ../../../../Modules/BundleUtilities.cmake:136
#: ../../../../Modules/BundleUtilities.cmake:185
#: ../../../../Modules/BundleUtilities.cmake:275
#: ../../../../Modules/BundleUtilities.cmake:321
#: ../../../../Modules/BundleUtilities.cmake:407
#: ../../../../Modules/BundleUtilities.cmake:443
#: ../../../../Modules/BundleUtilities.cmake:474
msgid "The arguments are:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:69
#: ../../../../Modules/BundleUtilities.cmake:138
#: ../../../../Modules/BundleUtilities.cmake:187
#: ../../../../Modules/BundleUtilities.cmake:323
msgid "``<app>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:70
#: ../../../../Modules/BundleUtilities.cmake:324
msgid ""
"The path to the bundle to fix.  This can be an ``.app`` directory or direct "
"path to an executable."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:73
#: ../../../../Modules/BundleUtilities.cmake:111
#: ../../../../Modules/BundleUtilities.cmake:327
msgid "``<libs>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:74
#: ../../../../Modules/BundleUtilities.cmake:112
#: ../../../../Modules/BundleUtilities.cmake:328
msgid ""
"A list of libraries that must be fixed up, but that cannot be automatically "
"determined by the ``otool`` output analysis  (i.e. ``plugins``).  If plugins "
"are passed to this command as this parameter, they should be installed or "
"copied into the bundle before calling this command."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:80
#: ../../../../Modules/BundleUtilities.cmake:118
#: ../../../../Modules/BundleUtilities.cmake:294
#: ../../../../Modules/BundleUtilities.cmake:334
#: ../../../../Modules/BundleUtilities.cmake:416
msgid "``<dirs>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:81
#: ../../../../Modules/BundleUtilities.cmake:119
#: ../../../../Modules/BundleUtilities.cmake:295
#: ../../../../Modules/BundleUtilities.cmake:335
#: ../../../../Modules/BundleUtilities.cmake:417
msgid ""
"A list of paths where libraries might be found.  These paths are searched "
"first when a target without any path info is given.  Then standard system "
"locations are also searched: ``PATH``, Framework locations, ``/usr/lib``, "
"etc."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:86
#: ../../../../Modules/BundleUtilities.cmake:142
#: ../../../../Modules/BundleUtilities.cmake:344
#: ../../../../Modules/BundleUtilities.cmake:456
msgid "``IGNORE_ITEM <files>...``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:89
#: ../../../../Modules/BundleUtilities.cmake:145
#: ../../../../Modules/BundleUtilities.cmake:347
#: ../../../../Modules/BundleUtilities.cmake:459
msgid ""
"Optional list of file names to ignore (e.g. ``IGNORE_ITEM \"vcredist_x86.exe;"
"vcredist_x64.exe\"``)."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:94
msgid "Copies the bundle and fixes up the new copied bundle in-place:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:96
msgid "copy_and_fixup_bundle(<src> <dst> <libs> <dirs>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:100
msgid ""
"This command makes a copy of the bundle ``<src>`` at location ``<dst>`` and "
"then fixes up the new copied bundle in-place at ``<dst>``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:105
msgid "``<src>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:106
msgid "The directory of the bundle being copied."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:108
msgid "``<dst>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:109
msgid "The destination directory of the bundle copy."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:126
msgid ""
"Verifies that an application bundle appears valid based on running analysis "
"tools on it:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:129
msgid "verify_app(<app> [IGNORE_ITEM <files>...])"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:133
msgid ""
"If the application fails verification, a :command:`message(FATAL_ERROR)` is "
"issued, halting the installation process."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:139
msgid ""
"The path to the application to verify.  This can be a ``.app`` directory or "
"a standalone executable."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:150
msgid "Retrieves the main executable within a given application bundle:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:152
msgid "get_bundle_main_executable(<bundle> <result-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:156
msgid ""
"The result is stored in a ``<result-var>`` variable and will contain a full "
"path name of the bundle's main executable file, or an ``error:`` prefixed "
"string if it could not be determined."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:162
msgid "Locates the enclosing ``.app`` directory for the given executable:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:164
msgid "get_dotapp_dir(<exe> <dotapp-dir-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:168
msgid ""
"This command retrieves the nearest parent dir whose name ends with ``.app`` "
"given the full path to an executable and stores it to the ``<dotapp-dir-"
"var>`` variable.  If there is no such parent dir, then it simply retrieves "
"the directory containing the executable."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:173
msgid "The retrieved directory may or may not exist."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:177
msgid ""
"Takes either a ``.app`` directory name or the name of an executable nested "
"inside a ``.app`` directory and retrieves the path to the ``.app`` directory "
"and the path to its main executable:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:181
msgid ""
"get_bundle_and_executable(<app> <bundle-var> <executable-var> <valid-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:188
msgid "The name of the application being processed."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:190
msgid "``<bundle-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:191
msgid ""
"Variable name in which to store the resulting path to the ``.app`` "
"directory.  In case of any error, this variable will contain an error "
"message prefixed with string ``error:``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:195
msgid "``<executable-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:196
msgid ""
"Variable name in which to store the resulting main executable.  In case of "
"any error, this variable will contain an error message prefixed with string "
"``error:``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:200
msgid "``<valid-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:201
msgid ""
"Variable name in which the boolean result is stored whether this command was "
"successful or not."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:206
msgid "Gets all executables of a given bundle:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:208
msgid "get_bundle_all_executables(<bundle> <exes-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:212
msgid ""
"This command scans ``<bundle>`` bundle recursively for all executable files "
"and stores them into a variable ``<exes-var>``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:217
msgid "Generates a unique key for the given item:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:219
msgid "get_item_key(<item> <key-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:223
msgid ""
"Given ``<item>`` file name, this command generates ``<key-var>`` key that "
"should be unique considering the set of libraries that need copying or "
"fixing up to make a bundle standalone.  This is essentially the file name "
"including extension with ``.`` replaced by ``_``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:228
msgid ""
"This key is used as a prefix for CMake variables so that a set of variables "
"can be associated with a given item based on its key."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:233
msgid "Gets RPATHS (run-time search paths) for the given item:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:235
msgid "get_item_rpaths(<item> <rpaths-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:239
msgid ""
"This command gets RPATHS of the ``<item>`` file name and stores them to the "
"variable with provided name ``<rpaths-var>``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:244
msgid "Clears all variables associated with keys:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:246
msgid "clear_bundle_keys(<keys-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:250
msgid ""
"This command loops over the ``<keys-var>`` list of keys, clearing all the "
"variables associated with each key.  After the loop, it clears the list of "
"keys itself.  This command should be called after the :command:"
"`get_bundle_keys` command, when done working with a list of keys."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:257
msgid "Adds a key to the list of keys:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:259
msgid ""
"set_bundle_key_values(\n"
"  <keys-var>\n"
"  <context>\n"
"  <item>\n"
"  <exepath>\n"
"  <dirs>\n"
"  <copyflag>\n"
"  [<rpaths>]\n"
")"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:271
msgid ""
"This command adds the ``<keys-var>`` key to the list (if necessary) for the "
"given item.  If added, also set all the variables associated with that key."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:277
#: ../../../../Modules/BundleUtilities.cmake:340
msgid "``<keys-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:278
msgid ""
"Variable name holding the name of the key to be added to the list for the "
"given item."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:281
msgid "``<context>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:282
msgid ""
"The path to the top level loading path used for ``@loader_path`` replacement "
"on Apple operating systems.  When resolving item, ``@loader_path`` "
"references will be resolved relative to the directory of the given context "
"value (presumably another library)."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:287
msgid "``<item>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:288
msgid "The item for which to add the key."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:290
#: ../../../../Modules/BundleUtilities.cmake:412
msgid "``<exepath>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:291
#: ../../../../Modules/BundleUtilities.cmake:413
msgid ""
"The path to the top level executable used for ``@executable_path`` "
"replacement on Apple operating systems."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:300
msgid "``<copyflag>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:301
msgid "If set to ``1`` library symlink structure will be preserved."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:303
msgid "``<rpaths>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:304
msgid ""
"Optional run-time search paths for an executable file or library to help "
"find files."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:309
msgid "Gets bundle keys:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:311
msgid ""
"get_bundle_keys(<app> <libs> <dirs> <keys-var> [IGNORE_ITEM <files>...])"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:315
msgid ""
"This command loops over all the executable and library files within "
"``<app>`` bundle (and given as extra ``<libs>``) and accumulate a list of "
"keys representing them.  It sets values associated with each key such that "
"they can be looped over all of them and copies prerequisite libs into the "
"bundle and then does appropriate ``install_name_tool`` fixups."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:341
msgid ""
"Variable name holding a list of keys that represent all executable and "
"library files within the bundle."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:352
msgid "Copies a resolved item into the bundle if necessary:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:354
msgid ""
"copy_resolved_item_into_bundle(<resolved-item> <resolved-embedded-item>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:358
#: ../../../../Modules/BundleUtilities.cmake:369
msgid ""
"Copy is not necessary, if the ``<resolved-item>`` is \"the same as\" the "
"``<resolved-embedded-item>``."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:363
msgid "Copies a resolved framework into the bundle if necessary:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:365
msgid ""
"copy_resolved_framework_into_bundle(<resolved-item> <resolved-embedded-item>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:372
#: ../../../../Modules/BundleUtilities.cmake:422
msgid "The following variables can be set before invoking this command:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:374
msgid "``BU_COPY_FULL_FRAMEWORK_CONTENTS``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:375
msgid ""
"By default, this variable is not set.  If full frameworks should be embedded "
"in the bundles, set this variable to boolean true before calling the :"
"command:`fixup_bundle` command.  By default, this command copies the "
"framework dylib itself plus the framework ``Resources`` directory."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:382
msgid "Fixes up bundle item:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:384
msgid "fixup_bundle_item(<resolved-embedded-item> <exepath> <dirs>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:388
msgid ""
"This command gets the direct/non-system prerequisites of the ``<resolved-"
"embedded-item>`` and for each prerequisite, it changes the way it is "
"referenced to the value of the ``_EMBEDDED_ITEM`` keyed variable for that "
"prerequisite.  Most likely changing to an ``@executable_path`` style "
"reference."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:394
msgid ""
"This command requires that the ``<resolved-embedded-item>`` be ``inside`` "
"the bundle already.  In other words, if plugins are passed to :command:"
"`fixup_bundle` command as its ``<libs>`` parameter, they should be installed "
"or copied into the bundle before calling the :command:`fixup_bundle` command."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:400
msgid ""
"Also, it changes the id of the item being fixed up to its own "
"``_EMBEDDED_ITEM`` value."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:403
msgid ""
"Changes are accumulated in a local variable and *one* call is made to "
"``install_name_tool`` command-line tool at the end of this command with all "
"the changes at once."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:409
msgid "``<resolved-embedded-item>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:410
msgid "The bundle item to be fixed up."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:424
msgid "``BU_CHMOD_BUNDLE_ITEMS``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:425
msgid ""
"If this variable is set to boolean true value then bundle items will be "
"marked writable before ``install_name_tool`` tool tries to change them."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:430
msgid ""
"Verifies that the sum of all prerequisites of all files inside the bundle "
"are contained within the bundle or are ``system`` libraries, presumed to "
"exist everywhere:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:434
msgid ""
"verify_bundle_prerequisites(\n"
"  <bundle>\n"
"  <result-var>\n"
"  <info-var>\n"
"  [IGNORE_ITEM <files>...]\n"
")"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:445
#: ../../../../Modules/BundleUtilities.cmake:476
msgid "``<bundle>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:446
#: ../../../../Modules/BundleUtilities.cmake:477
msgid "Name of the bundle being verified."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:448
#: ../../../../Modules/BundleUtilities.cmake:479
msgid "``<result-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:449
#: ../../../../Modules/BundleUtilities.cmake:480
msgid ""
"Name of the variable in which to store a boolean result of whether a "
"verification was successful."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:452
#: ../../../../Modules/BundleUtilities.cmake:483
msgid "``<info-var>``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:453
#: ../../../../Modules/BundleUtilities.cmake:484
msgid ""
"Name of the variable holding any informational messages produced by the "
"verification."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:464
msgid ""
"Verifies that any symlinks found in the specified bundle point to other "
"files that are already also in the bundle:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:467
msgid "verify_bundle_symlinks(<bundle> <result-var> <info-var>)"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:471
msgid ""
"Anything that points to an external file causes this command to fail the "
"verification."
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:488
msgid "Examples"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:490
msgid ""
"Using this module inside the installation code that is executed at the "
"installation phase:"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:493
msgid "``CMakeLists.txt``"
msgstr ""

#: ../../../../Modules/BundleUtilities.cmake:493
msgid ""
"# ...\n"
"\n"
"install(CODE \"\n"
"  include(BundleUtilities)\n"
"  set(BU_CHMOD_BUNDLE_ITEMS TRUE)\n"
"  fixup_bundle(\n"
"    \\\"${fixup_exe}\\\"\n"
"    \\\"${plugins}\\\"\n"
"    \\\"${bin_dir};${library_dir};${binary_dir}\\\"\n"
"  )\n"
"\")"
msgstr ""
