# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-02 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckSymbolExists.cmake:6
msgid "CheckSymbolExists"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:8
msgid "This module provides a command to check whether a C symbol exists."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:10
msgid "Load this module in a CMake project with:"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:12
msgid "include(CheckSymbolExists)"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:17
msgid "Commands"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:19
msgid "This module provides the following command:"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:23
msgid ""
"Checks once whether a symbol exists as a function, variable, or preprocessor "
"macro in C:"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:26
msgid "check_symbol_exists(<symbol> <headers> <variable>)"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:30
msgid ""
"This command checks whether the ``<symbol>`` is available after including "
"the specified header file(s) ``<headers>``, and stores the result in the "
"internal cache variable ``<variable>``.  Multiple header files can be "
"specified in one argument as a string using a :ref:`semicolon-separated list "
"<CMake Language Lists>`."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:36
msgid ""
"If the header files define the symbol as a macro, it is considered available "
"and assumed to work.  If the symbol is declared as a function or variable, "
"the check also ensures that it links successfully (i.e., the symbol must "
"exist in a linked library or object file). Compiler intrinsics may not be "
"detected, as they are not always linkable or explicitly declared in headers."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:43
msgid ""
"Symbols that are types, enum values, or compiler intrinsics are not "
"recognized.  For those, consider using the :module:`CheckTypeSize` or :"
"module:`CheckSourceCompiles` module instead."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:47
msgid ""
"This command is intended to check symbols as they appear in C.  For C++ "
"symbols, use the :module:`CheckCXXSymbolExists` module instead."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:51
msgid "Variables Affecting the Check"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:52
msgid ""
"The following variables may be set before calling this command to modify the "
"way the check is run:"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:1
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_FLAGS.rst:2
msgid ""
"A space-separated string of additional flags to pass to the compiler. A :ref:"
"`semicolon-separated list <CMake Language Lists>` will not work. The "
"contents of :variable:`CMAKE_<LANG>_FLAGS` and its associated configuration-"
"specific :variable:`CMAKE_<LANG>_FLAGS_<CONFIG>` variables are automatically "
"prepended to the compiler command before the contents of this variable."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:1
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_DEFINITIONS.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of compiler "
"definitions, each of the form ``-DFOO`` or ``-DFOO=bar``.  A definition for "
"the name specified by the result variable argument of the check command is "
"also added automatically."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:1
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_INCLUDES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of header search "
"paths to pass to the compiler.  These will be the only header search paths "
"used; the contents of the :prop_dir:`INCLUDE_DIRECTORIES` directory property "
"will be ignored."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:1
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_OPTIONS.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of options to add "
"to the link command (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:1
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LIBRARIES.rst:2
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of libraries to add "
"to the link command.  These can be the names of system libraries, or they "
"can be :ref:`Imported Targets` (see :command:`try_compile` for further "
"details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:1
msgid "``CMAKE_REQUIRED_LINK_DIRECTORIES``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_LINK_DIRECTORIES.rst:4
msgid ""
"A :ref:`semicolon-separated list <CMake Language Lists>` of library search "
"paths to pass to the linker (see :command:`try_compile` for further details)."
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:1
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../module/include/CMAKE_REQUIRED_QUIET.rst:4
msgid ""
"If this variable evaluates to a boolean true value, all status messages "
"associated with the check will be suppressed."
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:70
msgid "Examples"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:72
msgid ""
"The following example demonstrates how to check for the presence of a "
"preprocessor macro ``SEEK_SET`` and the C function ``fopen()`` from the "
"``<stdio.h>`` header using this module:"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:76
msgid ""
"include(CheckSymbolExists)\n"
"\n"
"# Check for macro SEEK_SET\n"
"check_symbol_exists(SEEK_SET \"stdio.h\" HAVE_SEEK_SET)\n"
"\n"
"# Check for function fopen\n"
"check_symbol_exists(fopen \"stdio.h\" HAVE_FOPEN)"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:87
msgid "See Also"
msgstr ""

#: ../../../../Modules/CheckSymbolExists.cmake:89
msgid ""
"The :module:`CheckCXXSymbolExists` module to check whether a C++ symbol "
"exists."
msgstr ""
