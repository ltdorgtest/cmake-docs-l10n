# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/C_STANDARD.rst:2
msgid "C_STANDARD"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:6
msgid "The C standard whose features are requested to build this target."
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:8
msgid ""
"This property specifies the C standard whose features are requested to build "
"this target.  For some compilers, this results in adding a flag such as ``-"
"std=gnu11`` to the compile line.  For compilers that have no notion of a C "
"standard level, such as Microsoft Visual C++ before VS 16.7, this property "
"has no effect."
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:14
msgid "Supported values are:"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:16
msgid "``90``"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:17
msgid "C89/C90"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:19
msgid "``99``"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:20
msgid "C99"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:22
msgid "``11``"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:23
msgid "C11"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:25
msgid "``17``"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:28
msgid "C17"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:30
msgid "``23``"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:33
msgid "C23"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:35
msgid ""
"If the value requested does not result in a compile flag being added for the "
"compiler in use, a previous standard flag will be added instead.  This means "
"that using:"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:39
msgid "set_property(TARGET tgt PROPERTY C_STANDARD 11)"
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:43
msgid ""
"with a compiler which does not support ``-std=gnu11`` or an equivalent flag "
"will not result in an error or warning, but will instead add the ``-"
"std=gnu99`` or ``-std=gnu90`` flag if supported.  This \"decay\" behavior "
"may be controlled with the :prop_tgt:`C_STANDARD_REQUIRED` target property. "
"Additionally, the :prop_tgt:`C_EXTENSIONS` target property may be used to "
"control whether compiler-specific extensions are enabled on a per-target "
"basis."
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:50
msgid ""
"See the :manual:`cmake-compile-features(7)` manual for information on "
"compile features and a list of supported compilers."
msgstr ""

#: ../../../prop_tgt/C_STANDARD.rst:53
msgid ""
"This property is initialized by the value of the :variable:"
"`CMAKE_C_STANDARD` variable if it is set when a target is created."
msgstr ""
