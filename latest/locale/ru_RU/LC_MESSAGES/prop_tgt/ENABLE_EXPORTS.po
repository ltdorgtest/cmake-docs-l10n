# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 07:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:2
msgid "ENABLE_EXPORTS"
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:4
msgid "Specify whether an executable or a shared library exports symbols."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:6
msgid ""
"Normally an executable does not export any symbols because it is the final "
"program.  It is possible for an executable to export symbols to be used by "
"loadable modules.  When this property is set to true CMake will allow other "
"targets to \"link\" to the executable with the :command:"
"`target_link_libraries` command.  On all platforms a target-level dependency "
"on the executable is created for targets that link to it. Handling of the "
"executable on the link lines of the loadable modules varies by platform:"
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:15
msgid ""
"On Windows-based systems (including Cygwin) an \"import library\" is created "
"along with the executable to list the exported symbols. Loadable modules "
"link to the import library to get the symbols."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:19
msgid ""
"On macOS, loadable modules link to the executable itself using the ``-"
"bundle_loader`` flag."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:22
msgid ""
"On AIX, a linker \"import file\" is created along with the executable to "
"list the exported symbols for import when linking other targets. Loadable "
"modules link to the import file to get the symbols."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:26
msgid ""
"On other platforms, loadable modules are simply linked without referencing "
"the executable since the dynamic loader will automatically bind symbols when "
"the module is loaded."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:30
msgid ""
"This property is initialized by the value of the :variable:"
"`CMAKE_EXECUTABLE_ENABLE_EXPORTS` variable, if it is set when an executable "
"target is created.  If :variable:`CMAKE_EXECUTABLE_ENABLE_EXPORTS` is not "
"set, the :variable:`CMAKE_ENABLE_EXPORTS` variable is used to initialize the "
"property instead for backward compatibility reasons. See below for "
"alternative initialization behavior for shared library targets."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:37
msgid ""
"To link with a shared library on macOS, or to a shared framework on any "
"Apple platform, a linker import file can be used instead of the actual "
"shared library. These linker import files are also known as text-based "
"stubs, and they have a ``.tbd`` file extension."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:43
msgid ""
"The generation of these linker import files, as well as their consumption, "
"is controlled by this property. When this property is set to true on a "
"shared library target, CMake will generate a ``.tbd`` file for the library. "
"Other targets that link to the shared library target will then use this ``."
"tbd`` file when linking rather than linking to the shared library binary."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:51
msgid ""
"For backward compatibility reasons, this property will be ignored if the :"
"prop_tgt:`XCODE_ATTRIBUTE_GENERATE_TEXT_BASED_STUBS <XCODE_ATTRIBUTE_<an-"
"attribute>>` target property or the :variable:"
"`CMAKE_XCODE_ATTRIBUTE_GENERATE_TEXT_BASED_STUBS <CMAKE_XCODE_ATTRIBUTE_<an-"
"attribute>>` variable is set to false."
msgstr ""

#: ../../../prop_tgt/ENABLE_EXPORTS.rst:57
msgid ""
"For shared library targets, this property is initialized by the value of "
"the :variable:`CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS` variable, if it is set "
"when the target is created."
msgstr ""
