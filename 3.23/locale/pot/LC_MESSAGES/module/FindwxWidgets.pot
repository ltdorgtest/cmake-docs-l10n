# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2022 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.23\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 17:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindwxWidgets.cmake:6
msgid "FindwxWidgets"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:8
msgid "Find a wxWidgets (a.k.a., wxWindows) installation."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:10
msgid ""
"This module finds if wxWidgets is installed and selects a default "
"configuration to use.  wxWidgets is a modular library.  To specify the "
"modules that you will use, you need to name them as components to the "
"package:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:15
msgid ""
"find_package(wxWidgets COMPONENTS core base ... OPTIONAL_COMPONENTS net ...)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:17
msgid ""
"Support for :command:`find_package` version argument; ``webview`` component."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:20
msgid "``OPTIONAL_COMPONENTS`` support."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:23
msgid ""
"There are two search branches: a windows style and a unix style.  For "
"windows, the following variables are searched for and set to defaults in "
"case of multiple choices.  Change them if the defaults are not desired (i."
"e., these are the only variables you should change to select a "
"configuration):"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:31
msgid ""
"wxWidgets_ROOT_DIR      - Base wxWidgets directory\n"
"                          (e.g., C:/wxWidgets-2.6.3).\n"
"wxWidgets_LIB_DIR       - Path to wxWidgets libraries\n"
"                          (e.g., C:/wxWidgets-2.6.3/lib/vc_lib).\n"
"wxWidgets_CONFIGURATION - Configuration to use\n"
"                          (e.g., msw, mswd, mswu, mswunivud, etc.)\n"
"wxWidgets_EXCLUDE_COMMON_LIBRARIES\n"
"                        - Set to TRUE to exclude linking of\n"
"                          commonly required libs (e.g., png tiff\n"
"                          jpeg zlib regex expat)."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:44
msgid ""
"For unix style it uses the wx-config utility.  You can select between debug/"
"release, unicode/ansi, universal/non-universal, and static/shared in the "
"QtDialog or ccmake interfaces by turning ON/OFF the following variables:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:51
msgid ""
"wxWidgets_USE_DEBUG\n"
"wxWidgets_USE_UNICODE\n"
"wxWidgets_USE_UNIVERSAL\n"
"wxWidgets_USE_STATIC"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:58
msgid ""
"There is also a wxWidgets_CONFIG_OPTIONS variable for all other options that "
"need to be passed to the wx-config utility.  For example, to use the base "
"toolkit found in the /usr/local path, set the variable (before calling the "
"FIND_PACKAGE command) as such:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:65
msgid "set(wxWidgets_CONFIG_OPTIONS --toolkit=base --prefix=/usr)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:69
msgid ""
"The following are set after the configuration is done for both windows and "
"unix style:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:74
msgid ""
"wxWidgets_FOUND            - Set to TRUE if wxWidgets was found.\n"
"wxWidgets_INCLUDE_DIRS     - Include directories for WIN32\n"
"                             i.e., where to find \"wx/wx.h\" and\n"
"                             \"wx/setup.h\"; possibly empty for unices.\n"
"wxWidgets_LIBRARIES        - Path to the wxWidgets libraries.\n"
"wxWidgets_LIBRARY_DIRS     - compile time link dirs, useful for\n"
"                             rpath on UNIX. Typically an empty string\n"
"                             in WIN32 environment.\n"
"wxWidgets_DEFINITIONS      - Contains defines required to compile/link\n"
"                             against WX, e.g. WXUSINGDLL\n"
"wxWidgets_DEFINITIONS_DEBUG- Contains defines required to compile/link\n"
"                             against WX debug builds, e.g. __WXDEBUG__\n"
"wxWidgets_CXX_FLAGS        - Include dirs and compiler flags for\n"
"                             unices, empty on WIN32. Essentially\n"
"                             \"`wx-config --cxxflags`\".\n"
"wxWidgets_USE_FILE         - Convenience include file."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:91
msgid ""
"The following environment variables can be used as hints: ``WX_CONFIG``, "
"``WXRC_CMD``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:96
msgid "Sample usage:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:100
msgid ""
"# Note that for MinGW users the order of libs is important!\n"
"find_package(wxWidgets COMPONENTS gl core base OPTIONAL_COMPONENTS net)\n"
"if(wxWidgets_FOUND)\n"
"  include(${wxWidgets_USE_FILE})\n"
"  # and for each of your dependent executable/library targets:\n"
"  target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n"
"endif()"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:110
msgid "If wxWidgets is required (i.e., not an optional part):"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:114
msgid ""
"find_package(wxWidgets REQUIRED gl core base OPTIONAL_COMPONENTS net)\n"
"include(${wxWidgets_USE_FILE})\n"
"# and for each of your dependent executable/library targets:\n"
"target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})"
msgstr ""
