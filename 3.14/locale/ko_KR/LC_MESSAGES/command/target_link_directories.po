# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../command/target_link_directories.rst:2
msgid "target_link_directories"
msgstr ""

#: ../../../command/target_link_directories.rst:4
msgid "Add link directories to a target."
msgstr ""

#: ../../../command/target_link_directories.rst:6
msgid ""
"target_link_directories(<target> [BEFORE]\n"
"  <INTERFACE|PUBLIC|PRIVATE> [items1...]\n"
"  [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])"
msgstr ""

#: ../../../command/target_link_directories.rst:12
msgid ""
"Specifies the paths in which the linker should search for libraries when "
"linking a given target.  Each item can be an absolute or relative path, with "
"the latter being interpreted as relative to the current source directory.  "
"These items will be added to the link command."
msgstr ""

#: ../../../command/target_link_directories.rst:17
msgid ""
"The named ``<target>`` must have been created by a command such as :command:"
"`add_executable` or :command:`add_library` and must not be an :ref:`ALIAS "
"target <Alias Targets>`."
msgstr ""

#: ../../../command/target_link_directories.rst:21
msgid ""
"The ``INTERFACE``, ``PUBLIC`` and ``PRIVATE`` keywords are required to "
"specify the scope of the items that follow them.  ``PRIVATE`` and ``PUBLIC`` "
"items will populate the :prop_tgt:`LINK_DIRECTORIES` property of "
"``<target>``.  ``PUBLIC`` and ``INTERFACE`` items will populate the :"
"prop_tgt:`INTERFACE_LINK_DIRECTORIES` property of ``<target>`` (:ref:"
"`IMPORTED targets <Imported Targets>` only support ``INTERFACE`` items). "
"Each item specifies a link directory and will be converted to an absolute "
"path if necessary before adding it to the relevant property.  Repeated calls "
"for the same ``<target>`` append items in the order called."
msgstr ""

#: ../../../command/target_link_directories.rst:31
msgid ""
"If ``BEFORE`` is specified, the content will be prepended to the relevant "
"property instead of being appended."
msgstr ""

#: ../../../command/target_link_directories.rst:34
msgid ""
"Arguments to ``target_link_directories`` may use \"generator expressions\" "
"with the syntax ``$<...>``. See the :manual:`cmake-generator-expressions(7)` "
"manual for available expressions.  See the :manual:`cmake-buildsystem(7)` "
"manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/target_link_directories.rst:41
msgid ""
"This command is rarely necessary and should be avoided where there are other "
"choices.  Prefer to pass full absolute paths to libraries where possible, "
"since this ensures the correct library will always be linked. The :command:"
"`find_library` command provides the full path, which can generally be used "
"directly in calls to :command:`target_link_libraries`. Situations where a "
"library search path may be needed include:"
msgstr ""

#: ../../../command/target_link_directories.rst:48
msgid ""
"Project generators like Xcode where the user can switch target architecture "
"at build time, but a full path to a library cannot be used because it only "
"provides one architecture (i.e. it is not a universal binary)."
msgstr ""

#: ../../../command/target_link_directories.rst:52
msgid ""
"Libraries may themselves have other private library dependencies that expect "
"to be found via ``RPATH`` mechanisms, but some linkers are not able to fully "
"decode those paths (e.g. due to the presence of things like ``$ORIGIN``)."
msgstr ""
