# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/CheckCXXSymbolExists.cmake:6
msgid "CheckCXXSymbolExists"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:8
msgid "Check if a symbol exists as a function, variable, or macro in C++"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:12
msgid "CHECK_CXX_SYMBOL_EXISTS(<symbol> <files> <variable>)"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:16
msgid ""
"Check that the ``<symbol>`` is available after including given header "
"``<files>`` and store the result in a ``<variable>``.  Specify the list of "
"files in one argument as a semicolon-separated list. "
"``CHECK_CXX_SYMBOL_EXISTS()`` can be used to check in C++ files, as opposed "
"to ``CHECK_SYMBOL_EXISTS()``, which works only for ``C``."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:22
msgid ""
"If the header files define the symbol as a macro it is considered available "
"and assumed to work.  If the header files declare the symbol as a function "
"or variable then the symbol must also be available for linking.  If the "
"symbol is a type or enum value it will not be recognized (consider using :"
"module:`CheckTypeSize` or :module:`CheckCSourceCompiles`)."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:29
msgid ""
"The following variables may be set before calling this macro to modify the "
"way the check is run:"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:32
msgid "``CMAKE_REQUIRED_FLAGS``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:33
msgid "string of compile command line flags."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:34
msgid "``CMAKE_REQUIRED_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:35
msgid "a :ref:`;-list <CMake Language Lists>` of macros to define (-DFOO=bar)."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:37
msgid "``CMAKE_REQUIRED_INCLUDES``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:37
msgid ""
"a :ref:`;-list <CMake Language Lists>` of header search paths to pass to the "
"compiler."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:39
msgid "``CMAKE_REQUIRED_LINK_OPTIONS``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:40
msgid ""
"a :ref:`;-list <CMake Language Lists>` of options to add to the link command."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:42
msgid "``CMAKE_REQUIRED_LIBRARIES``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:42
msgid ""
"a :ref:`;-list <CMake Language Lists>` of libraries to add to the link "
"command. See policy :policy:`CMP0075`."
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:53
msgid "``CMAKE_REQUIRED_QUIET``"
msgstr ""

#: ../../../../Modules/CheckCXXSymbolExists.cmake:45
msgid "execute quietly without messages."
msgstr ""
