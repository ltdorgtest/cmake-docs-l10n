# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2019 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 18:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:2
msgid "INTERFACE_INCLUDE_DIRECTORIES"
msgstr ""

#: ../../../prop_tgt/INTERFACE_BUILD_PROPERTY.txt:2
msgid "List of public |property_name| requirements for a library."
msgstr ""

#: ../../../prop_tgt/INTERFACE_BUILD_PROPERTY.txt:4
msgid ""
"Targets may populate this property to publish the |property_name| required "
"to compile against the headers for the target.  The |command_name| command "
"populates this property with values given to the ``PUBLIC`` and "
"``INTERFACE`` keywords.  Projects may also get and set the property directly."
msgstr ""

#: ../../../prop_tgt/INTERFACE_BUILD_PROPERTY.txt:9
msgid ""
"When target dependencies are specified using :command:"
"`target_link_libraries`, CMake will read this property from all target "
"dependencies to determine the build properties of the consumer."
msgstr ""

#: ../../../prop_tgt/INTERFACE_BUILD_PROPERTY.txt:13
msgid ""
"Contents of |PROPERTY_INTERFACE_NAME| may use \"generator expressions\" with "
"the syntax ``$<...>``.  See the :manual:`cmake-generator-expressions(7)` "
"manual for available expressions.  See the :manual:`cmake-buildsystem(7)` -"
"manual for more on defining buildsystem properties."
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:11
msgid ""
"Include directories usage requirements commonly differ between the build-"
"tree and the install-tree.  The ``BUILD_INTERFACE`` and "
"``INSTALL_INTERFACE`` generator expressions can be used to describe separate "
"usage requirements based on the usage location.  Relative paths are allowed "
"within the ``INSTALL_INTERFACE`` expression and are interpreted relative to "
"the installation prefix.  For example:"
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:18
msgid ""
"target_include_directories(mylib INTERFACE\n"
"  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/mylib>\n"
"  $<INSTALL_INTERFACE:include/mylib>  # <prefix>/include/mylib\n"
")"
msgstr ""

#: ../../../prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.rst:26
msgid "Creating Relocatable Packages"
msgstr ""

#: ../../../include/INTERFACE_INCLUDE_DIRECTORIES_WARNING.txt:2
msgid ""
"Note that it is not advisable to populate the ``INSTALL_INTERFACE`` of the |"
"INTERFACE_PROPERTY_LINK| of a target with absolute paths to the include "
"directories of dependencies.  That would hard-code into installed packages "
"the include directory paths for dependencies **as found on the machine the "
"package was made on**."
msgstr ""

#: ../../../include/INTERFACE_INCLUDE_DIRECTORIES_WARNING.txt:8
msgid ""
"The ``INSTALL_INTERFACE`` of the |INTERFACE_PROPERTY_LINK| is only suitable "
"for specifying the required include directories for headers provided with "
"the target itself, not those provided by the transitive dependencies listed "
"in its :prop_tgt:`INTERFACE_LINK_LIBRARIES` target property.  Those "
"dependencies should themselves be targets that specify their own header "
"locations in |INTERFACE_PROPERTY_LINK|."
msgstr ""

#: ../../../include/INTERFACE_INCLUDE_DIRECTORIES_WARNING.txt:15
msgid ""
"See the :ref:`Creating Relocatable Packages` section of the :manual:`cmake-"
"packages(7)` manual for discussion of additional care that must be taken "
"when specifying usage requirements while creating packages for "
"redistribution."
msgstr ""
